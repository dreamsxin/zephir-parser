 State 0:
          program ::= * xx_language
          xx_language ::= * xx_top_statement_list
          xx_top_statement_list ::= * xx_top_statement_list xx_top_statement
          xx_top_statement_list ::= * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_interface_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_interface_def ::= * INTERFACE IDENTIFIER xx_interface_body
          xx_interface_def ::= * INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT

                     NAMESPACE shift  8
                     INTERFACE shift  11
                         CLASS shift  104
                      ABSTRACT shift  626
                         FINAL shift  636
                       COMMENT shift  482
                       program accept
                   xx_language shift  1
         xx_top_statement_list shift  2
              xx_top_statement shift  643
              xx_namespace_def shift  4
                  xx_class_def shift  5
              xx_interface_def shift  6
                    xx_comment shift  7

State 1:
      (0) program ::= xx_language *

                             $ reduce 0

State 2:
      (1) xx_language ::= xx_top_statement_list *
          xx_top_statement_list ::= xx_top_statement_list * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_interface_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_interface_def ::= * INTERFACE IDENTIFIER xx_interface_body
          xx_interface_def ::= * INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT

                             $ reduce 1
                     NAMESPACE shift  8
                     INTERFACE shift  11
                         CLASS shift  104
                      ABSTRACT shift  626
                         FINAL shift  636
                       COMMENT shift  482
              xx_top_statement shift  3
              xx_namespace_def shift  4
                  xx_class_def shift  5
              xx_interface_def shift  6
                    xx_comment shift  7

State 3:
      (2) xx_top_statement_list ::= xx_top_statement_list xx_top_statement *

                     {default} reduce 2

State 4:
      (4) xx_top_statement ::= xx_namespace_def *

                     {default} reduce 4

State 5:
      (5) xx_top_statement ::= xx_class_def *

                     {default} reduce 5

State 6:
      (6) xx_top_statement ::= xx_interface_def *

                     {default} reduce 6

State 7:
      (7) xx_top_statement ::= xx_comment *

                     {default} reduce 7

State 8:
          xx_namespace_def ::= NAMESPACE * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  9

State 9:
          xx_namespace_def ::= NAMESPACE IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  10

State 10:
      (8) xx_namespace_def ::= NAMESPACE IDENTIFIER DOTCOMMA *

                     {default} reduce 8

State 11:
          xx_interface_def ::= INTERFACE * IDENTIFIER xx_interface_body
          xx_interface_def ::= INTERFACE * IDENTIFIER EXTENDS IDENTIFIER xx_interface_body

                    IDENTIFIER shift  12

State 12:
          xx_interface_def ::= INTERFACE IDENTIFIER * xx_interface_body
          xx_interface_def ::= INTERFACE IDENTIFIER * EXTENDS IDENTIFIER xx_interface_body
          xx_interface_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_interface_body ::= * BRACKET_OPEN xx_interface_methods_definition BRACKET_CLOSE

                       EXTENDS shift  14
                  BRACKET_OPEN shift  17
             xx_interface_body shift  13

State 13:
      (9) xx_interface_def ::= INTERFACE IDENTIFIER xx_interface_body *

                     {default} reduce 9

State 14:
          xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS * IDENTIFIER xx_interface_body

                    IDENTIFIER shift  15

State 15:
          xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS IDENTIFIER * xx_interface_body
          xx_interface_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_interface_body ::= * BRACKET_OPEN xx_interface_methods_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  17
             xx_interface_body shift  16

State 16:
     (10) xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body *

                     {default} reduce 10

State 17:
          xx_interface_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_interface_body ::= BRACKET_OPEN * xx_interface_methods_definition BRACKET_CLOSE
          xx_interface_methods_definition ::= * xx_interface_methods_definition xx_interface_method_definition
          xx_interface_methods_definition ::= * xx_interface_method_definition
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE shift  18
                       COMMENT shift  86
                        INLINE shift  83
xx_interface_methods_definition shift  19
            xx_visibility_list shift  22
xx_interface_method_definition shift  103
                 xx_visibility shift  102

State 18:
     (25) xx_interface_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 25

State 19:
          xx_interface_body ::= BRACKET_OPEN xx_interface_methods_definition * BRACKET_CLOSE
          xx_interface_methods_definition ::= xx_interface_methods_definition * xx_interface_method_definition
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE shift  20
                       COMMENT shift  86
                        INLINE shift  83
            xx_visibility_list shift  22
xx_interface_method_definition shift  21
                 xx_visibility shift  102

State 20:
     (26) xx_interface_body ::= BRACKET_OPEN xx_interface_methods_definition BRACKET_CLOSE *

                     {default} reduce 26

State 21:
     (56) xx_interface_methods_definition ::= xx_interface_methods_definition xx_interface_method_definition *

                     {default} reduce 56

State 22:
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                      FUNCTION shift  23
                        INLINE shift  83
                 xx_visibility shift  77

State 23:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  24

State 24:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  25

State 25:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
             PARENTHESES_CLOSE shift  26
                    IDENTIFIER shift  55
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
             xx_parameter_list shift  47
             xx_parameter_type shift  68
             xx_parameter_cast shift  72
                  xx_parameter shift  76

State 26:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  46
                         ARROW shift  27

State 27:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * xx_parameter_type
          xx_method_return_type ::= * xx_parameter_cast
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
         xx_method_return_type shift  28
             xx_parameter_type shift  30
             xx_parameter_cast shift  31

State 28:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  29

State 29:
     (76) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 76

State 30:
     (94) xx_method_return_type ::= xx_parameter_type *

                     {default} reduce 94

State 31:
     (95) xx_method_return_type ::= xx_parameter_cast *

                     {default} reduce 95

State 32:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER

                    IDENTIFIER shift  33

State 33:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER

                       GREATER shift  34

State 34:
    (104) xx_parameter_cast ::= LESS IDENTIFIER GREATER *

                     {default} reduce 104

State 35:
    (105) xx_parameter_type ::= TYPE_INTEGER *

                     {default} reduce 105

State 36:
    (106) xx_parameter_type ::= TYPE_UINTEGER *

                     {default} reduce 106

State 37:
    (107) xx_parameter_type ::= TYPE_LONG *

                     {default} reduce 107

State 38:
    (108) xx_parameter_type ::= TYPE_ULONG *

                     {default} reduce 108

State 39:
    (109) xx_parameter_type ::= TYPE_CHAR *

                     {default} reduce 109

State 40:
    (110) xx_parameter_type ::= TYPE_UCHAR *

                     {default} reduce 110

State 41:
    (111) xx_parameter_type ::= TYPE_DOUBLE *

                     {default} reduce 111

State 42:
    (112) xx_parameter_type ::= TYPE_BOOL *

                     {default} reduce 112

State 43:
    (113) xx_parameter_type ::= TYPE_STRING *

                     {default} reduce 113

State 44:
    (114) xx_parameter_type ::= TYPE_ARRAY *

                     {default} reduce 114

State 45:
    (115) xx_parameter_type ::= TYPE_VAR *

                     {default} reduce 115

State 46:
     (80) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 80

State 47:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  53
             PARENTHESES_CLOSE shift  48

State 48:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  52
                         ARROW shift  49

State 49:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * xx_parameter_type
          xx_method_return_type ::= * xx_parameter_cast
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
         xx_method_return_type shift  50
             xx_parameter_type shift  30
             xx_parameter_cast shift  31

State 50:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  51

State 51:
     (77) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 77

State 52:
     (81) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 81

State 53:
          xx_parameter_list ::= xx_parameter_list COMMA * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                    IDENTIFIER shift  55
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
             xx_parameter_type shift  68
             xx_parameter_cast shift  72
                  xx_parameter shift  54

State 54:
     (96) xx_parameter_list ::= xx_parameter_list COMMA xx_parameter *

                     {default} reduce 96

State 55:
     (98) xx_parameter ::= IDENTIFIER *
          xx_parameter ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  56
                     {default} reduce 98

State 56:
          xx_parameter ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  57

State 57:
    (101) xx_parameter ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 101

State 58:
    (289) xx_literal_expr ::= INTEGER *

                     {default} reduce 289

State 59:
    (290) xx_literal_expr ::= CHAR *

                     {default} reduce 290

State 60:
    (291) xx_literal_expr ::= STRING *

                     {default} reduce 291

State 61:
    (292) xx_literal_expr ::= DOUBLE *

                     {default} reduce 292

State 62:
    (293) xx_literal_expr ::= NULL *

                     {default} reduce 293

State 63:
    (294) xx_literal_expr ::= FALSE *

                     {default} reduce 294

State 64:
    (295) xx_literal_expr ::= TRUE *

                     {default} reduce 295

State 65:
          xx_literal_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT

                   DOUBLECOLON shift  66

State 66:
          xx_literal_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT

                      CONSTANT shift  67

State 67:
    (296) xx_literal_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 296

State 68:
          xx_parameter ::= xx_parameter_type * IDENTIFIER
          xx_parameter ::= xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  69

State 69:
     (99) xx_parameter ::= xx_parameter_type IDENTIFIER *
          xx_parameter ::= xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  70
                     {default} reduce 99

State 70:
          xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  71

State 71:
    (102) xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 102

State 72:
          xx_parameter ::= xx_parameter_cast * IDENTIFIER
          xx_parameter ::= xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  73

State 73:
    (100) xx_parameter ::= xx_parameter_cast IDENTIFIER *
          xx_parameter ::= xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  74
                     {default} reduce 100

State 74:
          xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  75

State 75:
    (103) xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 103

State 76:
     (97) xx_parameter_list ::= xx_parameter *

                     {default} reduce 97

State 77:
     (84) xx_visibility_list ::= xx_visibility_list xx_visibility *

                     {default} reduce 84

State 78:
     (86) xx_visibility ::= PUBLIC *

                     {default} reduce 86

State 79:
     (87) xx_visibility ::= PROTECTED *

                     {default} reduce 87

State 80:
     (88) xx_visibility ::= PRIVATE *

                     {default} reduce 88

State 81:
     (89) xx_visibility ::= STATIC *

                     {default} reduce 89

State 82:
     (90) xx_visibility ::= SCOPED *

                     {default} reduce 90

State 83:
     (91) xx_visibility ::= INLINE *

                     {default} reduce 91

State 84:
     (92) xx_visibility ::= ABSTRACT *

                     {default} reduce 92

State 85:
     (93) xx_visibility ::= FINAL *

                     {default} reduce 93

State 86:
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                        INLINE shift  83
            xx_visibility_list shift  87
                 xx_visibility shift  102

State 87:
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                      FUNCTION shift  88
                        INLINE shift  83
                 xx_visibility shift  77

State 88:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  89

State 89:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  90

State 90:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
             PARENTHESES_CLOSE shift  91
                    IDENTIFIER shift  55
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
             xx_parameter_list shift  96
             xx_parameter_type shift  68
             xx_parameter_cast shift  72
                  xx_parameter shift  76

State 91:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  95
                         ARROW shift  92

State 92:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * xx_parameter_type
          xx_method_return_type ::= * xx_parameter_cast
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
         xx_method_return_type shift  93
             xx_parameter_type shift  30
             xx_parameter_cast shift  31

State 93:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  94

State 94:
     (78) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 78

State 95:
     (82) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 82

State 96:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  53
             PARENTHESES_CLOSE shift  97

State 97:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  101
                         ARROW shift  98

State 98:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * xx_parameter_type
          xx_method_return_type ::= * xx_parameter_cast
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
         xx_method_return_type shift  99
             xx_parameter_type shift  30
             xx_parameter_cast shift  31

State 99:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  100

State 100:
     (79) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 79

State 101:
     (83) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 83

State 102:
     (85) xx_visibility_list ::= xx_visibility *

                     {default} reduce 85

State 103:
     (57) xx_interface_methods_definition ::= xx_interface_method_definition *

                     {default} reduce 57

State 104:
          xx_class_def ::= CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  105

State 105:
          xx_class_def ::= CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  107
                    IMPLEMENTS shift  623
                  BRACKET_OPEN shift  113
                 xx_class_body shift  106

State 106:
     (11) xx_class_def ::= CLASS IDENTIFIER xx_class_body *

                     {default} reduce 11

State 107:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  108

State 108:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                    IMPLEMENTS shift  110
                  BRACKET_OPEN shift  113
                 xx_class_body shift  109

State 109:
     (12) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 12

State 110:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  621
            xx_implements_list shift  111
                 xx_implements shift  622

State 111:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  619
                  BRACKET_OPEN shift  113
                 xx_class_body shift  112

State 112:
     (14) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 14

State 113:
          xx_class_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_body ::= BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE shift  114
                       COMMENT shift  580
                         CONST shift  574
                        INLINE shift  83
           xx_class_definition shift  115
xx_class_properties_definition shift  117
    xx_class_consts_definition shift  612
   xx_class_methods_definition shift  618
  xx_class_property_definition shift  617
            xx_visibility_list shift  601
     xx_class_const_definition shift  611
    xx_class_method_definition shift  567
                 xx_visibility shift  102

State 114:
     (20) xx_class_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 20

State 115:
          xx_class_body ::= BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  116

State 116:
     (21) xx_class_body ::= BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 21

State 117:
     (27) xx_class_definition ::= xx_class_properties_definition *
          xx_class_definition ::= xx_class_properties_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 27
                       COMMENT shift  580
                         CONST shift  574
                        INLINE shift  83
    xx_class_consts_definition shift  564
   xx_class_methods_definition shift  118
  xx_class_property_definition shift  579
            xx_visibility_list shift  601
     xx_class_const_definition shift  611
    xx_class_method_definition shift  567
                 xx_visibility shift  102

State 118:
     (30) xx_class_definition ::= xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 30
                       COMMENT shift  536
                        INLINE shift  83
            xx_visibility_list shift  120
    xx_class_method_definition shift  119
                 xx_visibility shift  102

State 119:
     (54) xx_class_methods_definition ::= xx_class_methods_definition xx_class_method_definition *

                     {default} reduce 54

State 120:
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                      FUNCTION shift  121
                        INLINE shift  83
                 xx_visibility shift  77

State 121:
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  122

State 122:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  123

State 123:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
             PARENTHESES_CLOSE shift  124
                    IDENTIFIER shift  55
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
             xx_parameter_list shift  524
             xx_parameter_type shift  68
             xx_parameter_cast shift  72
                  xx_parameter shift  76

State 124:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  125
                         ARROW shift  518

State 125:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  126
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  127
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 126:
     (60) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 60

State 127:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  128
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 128:
     (62) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 62

State 129:
    (116) xx_statement_list ::= xx_statement_list xx_statement *

                     {default} reduce 116

State 130:
    (118) xx_statement ::= xx_let_statement *

                     {default} reduce 118

State 131:
    (119) xx_statement ::= xx_if_statement *

                     {default} reduce 119

State 132:
    (120) xx_statement ::= xx_loop_statement *

                     {default} reduce 120

State 133:
    (121) xx_statement ::= xx_echo_statement *

                     {default} reduce 121

State 134:
    (122) xx_statement ::= xx_return_statement *

                     {default} reduce 122

State 135:
    (123) xx_statement ::= xx_fetch_statement *

                     {default} reduce 123

State 136:
    (124) xx_statement ::= xx_fcall_statement *

                     {default} reduce 124

State 137:
    (125) xx_statement ::= xx_mcall_statement *

                     {default} reduce 125

State 138:
    (126) xx_statement ::= xx_scall_statement *

                     {default} reduce 126

State 139:
    (127) xx_statement ::= xx_unset_statement *

                     {default} reduce 127

State 140:
    (128) xx_statement ::= xx_throw_statement *

                     {default} reduce 128

State 141:
    (129) xx_statement ::= xx_declare_statement *

                     {default} reduce 129

State 142:
    (130) xx_statement ::= xx_break_statement *

                     {default} reduce 130

State 143:
    (131) xx_statement ::= xx_continue_statement *

                     {default} reduce 131

State 144:
    (132) xx_statement ::= xx_while_statement *

                     {default} reduce 132

State 145:
    (133) xx_statement ::= xx_do_while_statement *

                     {default} reduce 133

State 146:
    (134) xx_statement ::= xx_switch_statement *

                     {default} reduce 134

State 147:
    (135) xx_statement ::= xx_for_statement *

                     {default} reduce 135

State 148:
    (136) xx_statement ::= xx_comment *

                     {default} reduce 136

State 149:
    (137) xx_statement ::= xx_empty_statement *

                     {default} reduce 137

State 150:
    (138) xx_empty_statement ::= DOTCOMMA *

                     {default} reduce 138

State 151:
          xx_break_statement ::= BREAK * DOTCOMMA

                      DOTCOMMA shift  152

State 152:
    (139) xx_break_statement ::= BREAK DOTCOMMA *

                     {default} reduce 139

State 153:
          xx_continue_statement ::= CONTINUE * DOTCOMMA

                      DOTCOMMA shift  154

State 154:
    (140) xx_continue_statement ::= CONTINUE DOTCOMMA *

                     {default} reduce 140

State 155:
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                  xx_eval_expr shift  156
                xx_common_expr shift  340
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 156:
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  157

State 157:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  512
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  158
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 158:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  159
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 159:
    (143) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE

                          ELSE shift  160
                     {default} reduce 143

State 160:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  161

State 161:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  511
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  162
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 162:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  163
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 163:
    (144) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 144

State 164:
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                  xx_eval_expr shift  165
                xx_common_expr shift  340
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 165:
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN xx_case_clauses BRACKET_CLOSE

                  BRACKET_OPEN shift  166

State 166:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * xx_case_clauses BRACKET_CLOSE
          xx_case_clauses ::= * xx_case_clauses xx_case_clause
          xx_case_clauses ::= * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  167
                          CASE shift  171
                       DEFAULT shift  507
               xx_case_clauses shift  168
                xx_case_clause shift  510

State 167:
    (147) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 147

State 168:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses * BRACKET_CLOSE
          xx_case_clauses ::= xx_case_clauses * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  169
                          CASE shift  171
                       DEFAULT shift  507
                xx_case_clause shift  170

State 169:
    (148) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE *

                     {default} reduce 148

State 170:
    (149) xx_case_clauses ::= xx_case_clauses xx_case_clause *

                     {default} reduce 149

State 171:
          xx_case_clause ::= CASE * xx_literal_expr COLON
          xx_case_clause ::= CASE * xx_literal_expr COLON xx_statement_list
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  172

State 172:
          xx_case_clause ::= CASE xx_literal_expr * COLON
          xx_case_clause ::= CASE xx_literal_expr * COLON xx_statement_list

                         COLON shift  173

State 173:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (151) xx_case_clause ::= CASE xx_literal_expr COLON *
          xx_case_clause ::= CASE xx_literal_expr COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  174
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423
                     {default} reduce 151

State 174:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (152) xx_case_clause ::= CASE xx_literal_expr COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423
                     {default} reduce 152

State 175:
          xx_loop_statement ::= LOOP * BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  176

State 176:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  506
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  177
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 177:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  178
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 178:
    (155) xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 155

State 179:
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                  xx_eval_expr shift  180
                xx_common_expr shift  340
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 180:
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  181

State 181:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  505
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  182
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 182:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  183
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 183:
    (157) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 157

State 184:
          xx_do_while_statement ::= DO * BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO * BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA

                  BRACKET_OPEN shift  185

State 185:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  501
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  186
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 186:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  187
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 187:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  188

State 188:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                  xx_eval_expr shift  189
                xx_common_expr shift  340
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 189:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  190

State 190:
    (159) xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 159

State 191:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= NOT * xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  192
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 192:
    (217) xx_common_expr ::= NOT xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 217

State 193:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr EQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  339
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 194:
          xx_common_expr ::= ISSET * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_isset_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE

                    IDENTIFIER shift  196
                 xx_isset_expr shift  195

State 195:
    (218) xx_common_expr ::= ISSET xx_isset_expr *

                     {default} reduce 218

State 196:
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_isset_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE

                         ARROW shift  332
                 SBRACKET_OPEN shift  197

State 197:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  330
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 198:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= REQUIRE * xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  199
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 199:
    (219) xx_common_expr ::= REQUIRE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 219

State 200:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr NOTEQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  329
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 201:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= CLONE * xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  202
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 202:
    (220) xx_common_expr ::= CLONE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 220

State 203:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr IDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  328
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 204:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= EMPTY * xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  205
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 205:
    (221) xx_common_expr ::= EMPTY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 221

State 206:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr NOTIDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  207
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 207:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
    (225) xx_common_expr ::= xx_common_expr NOTIDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 225

State 208:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= xx_common_expr LESS * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  209
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 209:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
    (226) xx_common_expr ::= xx_common_expr LESS xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 226

State 210:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr GREATER * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  211
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 211:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
    (227) xx_common_expr ::= xx_common_expr GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 227

State 212:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr LESSEQUAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  213
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 213:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
    (228) xx_common_expr ::= xx_common_expr LESSEQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 228

State 214:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr GREATEREQUAL * xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  215
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 215:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (229) xx_common_expr ::= xx_common_expr GREATEREQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 229

State 216:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= xx_common_expr ADD * xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  217
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 217:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
    (237) xx_common_expr ::= xx_common_expr ADD xx_common_expr *
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 237

State 218:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= xx_common_expr SUB * xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  219
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 219:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
    (238) xx_common_expr ::= xx_common_expr SUB xx_common_expr *
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 238

State 220:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= xx_common_expr MUL * xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  221
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 221:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
    (239) xx_common_expr ::= xx_common_expr MUL xx_common_expr *
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 239

State 222:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= xx_common_expr DIV * xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  223
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 223:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
    (240) xx_common_expr ::= xx_common_expr DIV xx_common_expr *
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 240

State 224:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= xx_common_expr MOD * xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  225
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 225:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
    (241) xx_common_expr ::= xx_common_expr MOD xx_common_expr *
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 241

State 226:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr CONCAT * xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  227
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 227:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (242) xx_common_expr ::= xx_common_expr CONCAT xx_common_expr *
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 242

State 228:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= xx_common_expr AND * xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  229
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 229:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
    (243) xx_common_expr ::= xx_common_expr AND xx_common_expr *
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 243

State 230:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= xx_common_expr OR * xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  231
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 231:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (244) xx_common_expr ::= xx_common_expr OR xx_common_expr *
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 244

State 232:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_common_expr ::= xx_common_expr INSTANCEOF * xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  233
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 233:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (245) xx_common_expr ::= xx_common_expr INSTANCEOF xx_common_expr *

                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 245

State 234:
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= PARENTHESES_OPEN * xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN * xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
             xx_parameter_type shift  237
                xx_common_expr shift  235
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 235:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_common_expr * PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
             PARENTHESES_CLOSE shift  236

State 236:
    (230) xx_common_expr ::= PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE *

                     {default} reduce 230

State 237:
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type * PARENTHESES_CLOSE xx_common_expr

             PARENTHESES_CLOSE shift  238

State 238:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE * xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  239
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 239:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (231) xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 231

State 240:
          xx_common_expr ::= LESS * IDENTIFIER GREATER xx_common_expr

                    IDENTIFIER shift  241

State 241:
          xx_common_expr ::= LESS IDENTIFIER * GREATER xx_common_expr

                       GREATER shift  242

State 242:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= LESS IDENTIFIER GREATER * xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  243
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 243:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (232) xx_common_expr ::= LESS IDENTIFIER GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 232

State 244:
          xx_common_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
          xx_common_expr ::= IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
    (250) xx_common_expr ::= IDENTIFIER *
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  296
                         ARROW shift  245
                 SBRACKET_OPEN shift  293
                   DOUBLECOLON shift  267
                     {default} reduce 250

State 245:
          xx_common_expr ::= IDENTIFIER ARROW * IDENTIFIER
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  246
                  BRACKET_OPEN shift  315

State 246:
    (233) xx_common_expr ::= IDENTIFIER ARROW IDENTIFIER *
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  247
                     {default} reduce 233

State 247:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
             PARENTHESES_CLOSE shift  314
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  248
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
            xx_call_parameters shift  312
             xx_call_parameter shift  287

State 248:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (280) xx_call_parameter ::= xx_common_expr *

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 280

State 249:
          xx_fetch_expr ::= FETCH * IDENTIFIER COMMA xx_isset_expr

                    IDENTIFIER shift  250

State 250:
          xx_fetch_expr ::= FETCH IDENTIFIER * COMMA xx_isset_expr

                         COMMA shift  251

State 251:
          xx_fetch_expr ::= FETCH IDENTIFIER COMMA * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_isset_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE

                    IDENTIFIER shift  196
                 xx_isset_expr shift  252

State 252:
    (246) xx_fetch_expr ::= FETCH IDENTIFIER COMMA xx_isset_expr *

                     {default} reduce 246

State 253:
    (247) xx_common_expr ::= xx_fetch_expr *

                     {default} reduce 247

State 254:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= TYPEOF * xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  255
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 255:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (248) xx_common_expr ::= TYPEOF xx_common_expr *

                     {default} reduce 248

State 256:
    (249) xx_common_expr ::= CONSTANT *

                     {default} reduce 249

State 257:
    (251) xx_common_expr ::= INTEGER *

                     {default} reduce 251

State 258:
    (252) xx_common_expr ::= STRING *

                     {default} reduce 252

State 259:
    (253) xx_common_expr ::= CHAR *

                     {default} reduce 253

State 260:
    (254) xx_common_expr ::= DOUBLE *

                     {default} reduce 254

State 261:
    (255) xx_common_expr ::= NULL *

                     {default} reduce 255

State 262:
    (256) xx_common_expr ::= TRUE *

                     {default} reduce 256

State 263:
    (257) xx_common_expr ::= FALSE *

                     {default} reduce 257

State 264:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_array_list ::= * xx_array_list COMMA xx_array_item
          xx_array_list ::= * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  266
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  301
                 SBRACKET_OPEN shift  264
                SBRACKET_CLOSE shift  302
                       INTEGER shift  300
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  265
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
                 xx_array_list shift  303
                 xx_array_item shift  311
                  xx_array_key shift  307
                xx_array_value shift  310

State 265:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (288) xx_array_value ::= xx_common_expr *

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 288

State 266:
          xx_common_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
          xx_common_expr ::= IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
    (250) xx_common_expr ::= IDENTIFIER *
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
    (285) xx_array_key ::= IDENTIFIER *

              PARENTHESES_OPEN shift  296
                         ARROW shift  245
                         COLON reduce 285
                 SBRACKET_OPEN shift  293
                   DOUBLECOLON shift  267
                     {default} reduce 250

State 267:
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  268
                      CONSTANT shift  292

State 268:
    (234) xx_common_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER *
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  269
                     {default} reduce 234

State 269:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
             PARENTHESES_CLOSE shift  291
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  248
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
            xx_call_parameters shift  289
             xx_call_parameter shift  287

State 270:
          xx_common_expr ::= NEW * IDENTIFIER
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  271

State 271:
    (260) xx_common_expr ::= NEW IDENTIFIER *
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  272
                     {default} reduce 260

State 272:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
             PARENTHESES_CLOSE shift  273
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  248
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
            xx_call_parameters shift  274
             xx_call_parameter shift  287

State 273:
    (261) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 261

State 274:
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  276
             PARENTHESES_CLOSE shift  275

State 275:
    (262) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 262

State 276:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= xx_call_parameters COMMA * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  248
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
             xx_call_parameter shift  288

State 277:
          xx_fcall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  278

State 278:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  279

State 279:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  280

State 280:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
             PARENTHESES_CLOSE shift  283
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  248
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
            xx_call_parameters shift  281
             xx_call_parameter shift  287

State 281:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  276
             PARENTHESES_CLOSE shift  282

State 282:
    (265) xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 265

State 283:
    (266) xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 266

State 284:
    (275) xx_common_expr ::= xx_mcall_expr *

                     {default} reduce 275

State 285:
    (276) xx_common_expr ::= xx_scall_expr *

                     {default} reduce 276

State 286:
    (277) xx_common_expr ::= xx_fcall_expr *

                     {default} reduce 277

State 287:
    (279) xx_call_parameters ::= xx_call_parameter *

                     {default} reduce 279

State 288:
    (278) xx_call_parameters ::= xx_call_parameters COMMA xx_call_parameter *

                     {default} reduce 278

State 289:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  276
             PARENTHESES_CLOSE shift  290

State 290:
    (267) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 267

State 291:
    (268) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 268

State 292:
    (235) xx_common_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 235

State 293:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  294
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 294:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                SBRACKET_CLOSE shift  295

State 295:
    (236) xx_common_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE *

                     {default} reduce 236

State 296:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
             PARENTHESES_CLOSE shift  299
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  248
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
            xx_call_parameters shift  297
             xx_call_parameter shift  287

State 297:
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  276
             PARENTHESES_CLOSE shift  298

State 298:
    (263) xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 263

State 299:
    (264) xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 264

State 300:
    (251) xx_common_expr ::= INTEGER *
    (287) xx_array_key ::= INTEGER *

                         COLON reduce 287
                     {default} reduce 251

State 301:
    (252) xx_common_expr ::= STRING *
    (286) xx_array_key ::= STRING *

                         COLON reduce 286
                     {default} reduce 252

State 302:
    (258) xx_common_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 258

State 303:
          xx_common_expr ::= SBRACKET_OPEN xx_array_list * SBRACKET_CLOSE
          xx_array_list ::= xx_array_list * COMMA xx_array_item

                         COMMA shift  305
                SBRACKET_CLOSE shift  304

State 304:
    (259) xx_common_expr ::= SBRACKET_OPEN xx_array_list SBRACKET_CLOSE *

                     {default} reduce 259

State 305:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_array_list ::= xx_array_list COMMA * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  266
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  301
                 SBRACKET_OPEN shift  264
                       INTEGER shift  300
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  265
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
                 xx_array_item shift  306
                  xx_array_key shift  307
                xx_array_value shift  310

State 306:
    (281) xx_array_list ::= xx_array_list COMMA xx_array_item *

                     {default} reduce 281

State 307:
          xx_array_item ::= xx_array_key * COLON xx_array_value

                         COLON shift  308

State 308:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_array_item ::= xx_array_key COLON * xx_array_value
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  265
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
                xx_array_value shift  309

State 309:
    (283) xx_array_item ::= xx_array_key COLON xx_array_value *

                     {default} reduce 283

State 310:
    (284) xx_array_item ::= xx_array_value *

                     {default} reduce 284

State 311:
    (282) xx_array_list ::= xx_array_item *

                     {default} reduce 282

State 312:
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  276
             PARENTHESES_CLOSE shift  313

State 313:
    (269) xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 269

State 314:
    (270) xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 270

State 315:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  316
                        STRING shift  322

State 316:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  317

State 317:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  318

State 318:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
             PARENTHESES_CLOSE shift  321
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  248
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
            xx_call_parameters shift  319
             xx_call_parameter shift  287

State 319:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  276
             PARENTHESES_CLOSE shift  320

State 320:
    (271) xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 271

State 321:
    (272) xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 272

State 322:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  323

State 323:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  324

State 324:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
             PARENTHESES_CLOSE shift  327
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  248
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253
            xx_call_parameters shift  325
             xx_call_parameter shift  287

State 325:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  276
             PARENTHESES_CLOSE shift  326

State 326:
    (273) xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 273

State 327:
    (274) xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 274

State 328:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
    (224) xx_common_expr ::= xx_common_expr IDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 224

State 329:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
    (223) xx_common_expr ::= xx_common_expr NOTEQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 223

State 330:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                SBRACKET_CLOSE shift  331

State 331:
    (297) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE *

                     {default} reduce 297

State 332:
          xx_isset_expr ::= IDENTIFIER ARROW * IDENTIFIER
          xx_isset_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE

                    IDENTIFIER shift  333
                  BRACKET_OPEN shift  334

State 333:
    (298) xx_isset_expr ::= IDENTIFIER ARROW IDENTIFIER *

                     {default} reduce 298

State 334:
          xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE

                    IDENTIFIER shift  335
                        STRING shift  337

State 335:
          xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE

                 BRACKET_CLOSE shift  336

State 336:
    (299) xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE *

                     {default} reduce 299

State 337:
          xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE

                 BRACKET_CLOSE shift  338

State 338:
    (300) xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE *

                     {default} reduce 300

State 339:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
    (222) xx_common_expr ::= xx_common_expr EQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 222

State 340:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (301) xx_eval_expr ::= xx_common_expr *

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 301

State 341:
          xx_for_statement ::= FOR * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  342

State 342:
          xx_for_statement ::= FOR IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         COMMA shift  489
                            IN shift  343

State 343:
          xx_for_statement ::= FOR IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                       REVERSE shift  484
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  344
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 344:
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                  BRACKET_OPEN shift  345

State 345:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  346
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 346:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  347
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 347:
    (160) xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 160

State 348:
          xx_let_statement ::= LET * xx_let_assignments DOTCOMMA
          xx_let_assignments ::= * xx_let_assignments COMMA xx_let_assignment
          xx_let_assignments ::= * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER DECR
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  353
            xx_let_assignments shift  349
             xx_let_assignment shift  409

State 349:
          xx_let_statement ::= LET xx_let_assignments * DOTCOMMA
          xx_let_assignments ::= xx_let_assignments * COMMA xx_let_assignment

                         COMMA shift  351
                      DOTCOMMA shift  350

State 350:
    (164) xx_let_statement ::= LET xx_let_assignments DOTCOMMA *

                     {default} reduce 164

State 351:
          xx_let_assignments ::= xx_let_assignments COMMA * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER DECR
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  353
             xx_let_assignment shift  352

State 352:
    (165) xx_let_assignments ::= xx_let_assignments COMMA xx_let_assignment *

                     {default} reduce 165

State 353:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER INCR
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER DECR
          xx_let_assignment ::= IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER * DECR

                        ASSIGN shift  354
                         ARROW shift  363
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
                 SBRACKET_OPEN shift  399
                   DOUBLECOLON shift  387
                          INCR shift  407
                          DECR shift  408
        xx_assignment_operator shift  360

State 354:
    (167) xx_assignment_operator ::= ASSIGN *

                     {default} reduce 167

State 355:
    (168) xx_assignment_operator ::= ADDASSIGN *

                     {default} reduce 168

State 356:
    (169) xx_assignment_operator ::= SUBASSIGN *

                     {default} reduce 169

State 357:
    (170) xx_assignment_operator ::= MULASSIGN *

                     {default} reduce 170

State 358:
    (171) xx_assignment_operator ::= DIVASSIGN *

                     {default} reduce 171

State 359:
    (172) xx_assignment_operator ::= CONCATASSIGN *

                     {default} reduce 172

State 360:
          xx_let_assignment ::= IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  361
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 361:
    (173) xx_let_assignment ::= IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 173

State 362:
    (216) xx_assign_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 216

State 363:
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER INCR
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER DECR

                    IDENTIFIER shift  364
                  BRACKET_OPEN shift  378

State 364:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * DECR

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
                 SBRACKET_OPEN shift  367
                          INCR shift  376
                          DECR shift  377
        xx_assignment_operator shift  365

State 365:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  366
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 366:
    (174) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 174

State 367:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                SBRACKET_CLOSE shift  368
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  375
                 xx_index_expr shift  371
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 368:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
        xx_assignment_operator shift  369

State 369:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  370
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 370:
    (177) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 177

State 371:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  372

State 372:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
        xx_assignment_operator shift  373

State 373:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  374
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 374:
    (178) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 178

State 375:
    (188) xx_index_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                SBRACKET_CLOSE reduce 188

State 376:
    (184) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER INCR *

                     {default} reduce 184

State 377:
    (185) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER DECR *

                     {default} reduce 185

State 378:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  379
                        STRING shift  383

State 379:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  380

State 380:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
        xx_assignment_operator shift  381

State 381:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  382
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 382:
    (175) xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 175

State 383:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  384

State 384:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
        xx_assignment_operator shift  385

State 385:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  386
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 386:
    (176) xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 176

State 387:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  388

State 388:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
                 SBRACKET_OPEN shift  391
        xx_assignment_operator shift  389

State 389:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  390
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 390:
    (179) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 179

State 391:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                SBRACKET_CLOSE shift  392
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  375
                 xx_index_expr shift  395
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 392:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
        xx_assignment_operator shift  393

State 393:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  394
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 394:
    (180) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 180

State 395:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  396

State 396:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
        xx_assignment_operator shift  397

State 397:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  398
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 398:
    (181) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 181

State 399:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                SBRACKET_CLOSE shift  400
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  375
                 xx_index_expr shift  403
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 400:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
        xx_assignment_operator shift  401

State 401:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  402
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 402:
    (182) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 182

State 403:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  404

State 404:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  354
                     ADDASSIGN shift  355
                     SUBASSIGN shift  356
                     MULASSIGN shift  357
                     DIVASSIGN shift  358
                  CONCATASSIGN shift  359
        xx_assignment_operator shift  405

State 405:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  362
                xx_assign_expr shift  406
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 406:
    (183) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 183

State 407:
    (186) xx_let_assignment ::= IDENTIFIER INCR *

                     {default} reduce 186

State 408:
    (187) xx_let_assignment ::= IDENTIFIER DECR *

                     {default} reduce 187

State 409:
    (166) xx_let_assignments ::= xx_let_assignment *

                     {default} reduce 166

State 410:
          xx_echo_statement ::= ECHO * xx_echo_expressions DOTCOMMA
          xx_echo_expressions ::= * xx_echo_expressions COMMA xx_echo_expression
          xx_echo_expressions ::= * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  415
           xx_echo_expressions shift  411
            xx_echo_expression shift  416
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 411:
          xx_echo_statement ::= ECHO xx_echo_expressions * DOTCOMMA
          xx_echo_expressions ::= xx_echo_expressions * COMMA xx_echo_expression

                         COMMA shift  413
                      DOTCOMMA shift  412

State 412:
    (189) xx_echo_statement ::= ECHO xx_echo_expressions DOTCOMMA *

                     {default} reduce 189

State 413:
          xx_echo_expressions ::= xx_echo_expressions COMMA * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  415
            xx_echo_expression shift  414
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 414:
    (190) xx_echo_expressions ::= xx_echo_expressions COMMA xx_echo_expression *

                     {default} reduce 190

State 415:
    (192) xx_echo_expression ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                     {default} reduce 192

State 416:
    (191) xx_echo_expressions ::= xx_echo_expression *

                     {default} reduce 191

State 417:
          xx_mcall_statement ::= xx_mcall_expr * DOTCOMMA

                      DOTCOMMA shift  418

State 418:
    (193) xx_mcall_statement ::= xx_mcall_expr DOTCOMMA *

                     {default} reduce 193

State 419:
          xx_fcall_statement ::= xx_fcall_expr * DOTCOMMA

                      DOTCOMMA shift  420

State 420:
    (194) xx_fcall_statement ::= xx_fcall_expr DOTCOMMA *

                     {default} reduce 194

State 421:
          xx_scall_statement ::= xx_scall_expr * DOTCOMMA

                      DOTCOMMA shift  422

State 422:
    (195) xx_scall_statement ::= xx_scall_expr DOTCOMMA *

                     {default} reduce 195

State 423:
          xx_fetch_statement ::= xx_fetch_expr * DOTCOMMA

                      DOTCOMMA shift  424

State 424:
    (196) xx_fetch_statement ::= xx_fetch_expr DOTCOMMA *

                     {default} reduce 196

State 425:
          xx_return_statement ::= RETURN * xx_common_expr DOTCOMMA
          xx_return_statement ::= RETURN * DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                      DOTCOMMA shift  428
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  426
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 426:
          xx_return_statement ::= RETURN xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                      DOTCOMMA shift  427

State 427:
    (197) xx_return_statement ::= RETURN xx_common_expr DOTCOMMA *

                     {default} reduce 197

State 428:
    (198) xx_return_statement ::= RETURN DOTCOMMA *

                     {default} reduce 198

State 429:
          xx_unset_statement ::= UNSET * IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  430

State 430:
          xx_unset_statement ::= UNSET IDENTIFIER * ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA

                         ARROW shift  431
                 SBRACKET_OPEN shift  434

State 431:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  432

State 432:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  433

State 433:
    (199) xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA *

                     {default} reduce 199

State 434:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  435
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 435:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                SBRACKET_CLOSE shift  436

State 436:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  437

State 437:
    (200) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 200

State 438:
          xx_throw_statement ::= THROW * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  439
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 439:
          xx_throw_statement ::= THROW xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                      DOTCOMMA shift  440

State 440:
    (201) xx_throw_statement ::= THROW xx_common_expr DOTCOMMA *

                     {default} reduce 201

State 441:
          xx_declare_statement ::= TYPE_INTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  442
           xx_declare_variable shift  449

State 442:
          xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  443

State 443:
    (202) xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 202

State 444:
          xx_declare_variable_list ::= xx_declare_variable_list COMMA * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
           xx_declare_variable shift  445

State 445:
    (212) xx_declare_variable_list ::= xx_declare_variable_list COMMA xx_declare_variable *

                     {default} reduce 212

State 446:
    (214) xx_declare_variable ::= IDENTIFIER *
          xx_declare_variable ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  447
                     {default} reduce 214

State 447:
          xx_declare_variable ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  448

State 448:
    (215) xx_declare_variable ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 215

State 449:
    (213) xx_declare_variable_list ::= xx_declare_variable *

                     {default} reduce 213

State 450:
          xx_declare_statement ::= TYPE_UINTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  451
           xx_declare_variable shift  449

State 451:
          xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  452

State 452:
    (203) xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 203

State 453:
          xx_declare_statement ::= TYPE_CHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  454
           xx_declare_variable shift  449

State 454:
          xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  455

State 455:
    (204) xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 204

State 456:
          xx_declare_statement ::= TYPE_UCHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  457
           xx_declare_variable shift  449

State 457:
          xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  458

State 458:
    (205) xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 205

State 459:
          xx_declare_statement ::= TYPE_LONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  460
           xx_declare_variable shift  449

State 460:
          xx_declare_statement ::= TYPE_LONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  461

State 461:
    (206) xx_declare_statement ::= TYPE_LONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 206

State 462:
          xx_declare_statement ::= TYPE_ULONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  463
           xx_declare_variable shift  449

State 463:
          xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  464

State 464:
    (207) xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 207

State 465:
          xx_declare_statement ::= TYPE_DOUBLE * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  466
           xx_declare_variable shift  449

State 466:
          xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  467

State 467:
    (208) xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list DOTCOMMA *

                     {default} reduce 208

State 468:
          xx_declare_statement ::= TYPE_STRING * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  469
           xx_declare_variable shift  449

State 469:
          xx_declare_statement ::= TYPE_STRING xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  470

State 470:
    (209) xx_declare_statement ::= TYPE_STRING xx_declare_variable_list DOTCOMMA *

                     {default} reduce 209

State 471:
          xx_declare_statement ::= TYPE_BOOL * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  472
           xx_declare_variable shift  449

State 472:
          xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  473

State 473:
    (210) xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list DOTCOMMA *

                     {default} reduce 210

State 474:
          xx_declare_statement ::= TYPE_VAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  446
      xx_declare_variable_list shift  475
           xx_declare_variable shift  449

State 475:
          xx_declare_statement ::= TYPE_VAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  444
                      DOTCOMMA shift  476

State 476:
    (211) xx_declare_statement ::= TYPE_VAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 211

State 477:
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  296
                         ARROW shift  480
                   DOUBLECOLON shift  478

State 478:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  479

State 479:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  269

State 480:
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  481
                  BRACKET_OPEN shift  315

State 481:
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  247

State 482:
    (302) xx_comment ::= COMMENT *

                     {default} reduce 302

State 483:
    (117) xx_statement_list ::= xx_statement *

                     {default} reduce 117

State 484:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  485
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 485:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                  BRACKET_OPEN shift  486

State 486:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  487
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 487:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  488
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 488:
    (161) xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 161

State 489:
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  490

State 490:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                            IN shift  491

State 491:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                       REVERSE shift  496
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  492
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 492:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                  BRACKET_OPEN shift  493

State 493:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  494
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 494:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  495
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 495:
    (162) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 162

State 496:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                xx_common_expr shift  497
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 497:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  232
                           AND shift  228
                            OR shift  230
                        EQUALS shift  193
                     IDENTICAL shift  203
                          LESS shift  208
                       GREATER shift  210
                     LESSEQUAL shift  212
                  GREATEREQUAL shift  214
                  NOTIDENTICAL shift  206
                     NOTEQUALS shift  200
                           ADD shift  216
                           SUB shift  218
                        CONCAT shift  226
                           MUL shift  220
                           DIV shift  222
                           MOD shift  224
                  BRACKET_OPEN shift  498

State 498:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  499
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 499:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  500
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 500:
    (163) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 163

State 501:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  502

State 502:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  198
                         CLONE shift  201
                         EMPTY shift  204
                          LESS shift  240
                         ISSET shift  194
                         FETCH shift  249
                        TYPEOF shift  254
                           NEW shift  270
                           NOT shift  191
                    IDENTIFIER shift  244
                  BRACKET_OPEN shift  277
                      CONSTANT shift  256
              PARENTHESES_OPEN shift  234
                        STRING shift  258
                 SBRACKET_OPEN shift  264
                       INTEGER shift  257
                          CHAR shift  259
                        DOUBLE shift  260
                          NULL shift  261
                          TRUE shift  262
                         FALSE shift  263
                  xx_eval_expr shift  503
                xx_common_expr shift  340
                 xx_mcall_expr shift  284
                 xx_fcall_expr shift  286
                 xx_scall_expr shift  285
                 xx_fetch_expr shift  253

State 503:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  504

State 504:
    (158) xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 158

State 505:
    (156) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 156

State 506:
    (154) xx_loop_statement ::= LOOP BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 154

State 507:
          xx_case_clause ::= DEFAULT * COLON xx_statement_list

                         COLON shift  508

State 508:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_case_clause ::= DEFAULT COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  509
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 509:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (153) xx_case_clause ::= DEFAULT COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423
                     {default} reduce 153

State 510:
    (150) xx_case_clauses ::= xx_case_clause *

                     {default} reduce 150

State 511:
    (145) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 145

State 512:
    (141) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                          ELSE shift  513
                     {default} reduce 141

State 513:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  514

State 514:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  517
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  515
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 515:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  516
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 516:
    (146) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 146

State 517:
    (142) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 142

State 518:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * xx_parameter_type
          xx_method_return_type ::= * xx_parameter_cast
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
         xx_method_return_type shift  519
             xx_parameter_type shift  30
             xx_parameter_cast shift  31

State 519:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  520

State 520:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  521
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  522
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 521:
     (68) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 68

State 522:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  523
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 523:
     (70) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 70

State 524:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  53
             PARENTHESES_CLOSE shift  525

State 525:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  526
                         ARROW shift  530

State 526:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  527
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  528
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 527:
     (61) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 61

State 528:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  529
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 529:
     (63) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 63

State 530:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * xx_parameter_type
          xx_method_return_type ::= * xx_parameter_cast
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
         xx_method_return_type shift  531
             xx_parameter_type shift  30
             xx_parameter_cast shift  31

State 531:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  532

State 532:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  533
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  534
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 533:
     (69) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 69

State 534:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  535
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 535:
     (71) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 71

State 536:
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                        INLINE shift  83
            xx_visibility_list shift  537
                 xx_visibility shift  102

State 537:
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                      FUNCTION shift  538
                        INLINE shift  83
                 xx_visibility shift  77

State 538:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  539

State 539:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  540

State 540:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
             PARENTHESES_CLOSE shift  541
                    IDENTIFIER shift  55
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
             xx_parameter_list shift  552
             xx_parameter_type shift  68
             xx_parameter_cast shift  72
                  xx_parameter shift  76

State 541:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  542
                         ARROW shift  546

State 542:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  543
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  544
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 543:
     (64) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 64

State 544:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  545
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 545:
     (66) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 66

State 546:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * xx_parameter_type
          xx_method_return_type ::= * xx_parameter_cast
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
         xx_method_return_type shift  547
             xx_parameter_type shift  30
             xx_parameter_cast shift  31

State 547:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  548

State 548:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  549
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  550
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 549:
     (72) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 72

State 550:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  551
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 551:
     (74) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 74

State 552:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  53
             PARENTHESES_CLOSE shift  553

State 553:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  554
                         ARROW shift  558

State 554:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  555
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  556
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 555:
     (65) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 65

State 556:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  557
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 557:
     (67) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 67

State 558:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * xx_parameter_type
          xx_method_return_type ::= * xx_parameter_cast
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  32
                  TYPE_INTEGER shift  35
                 TYPE_UINTEGER shift  36
                     TYPE_LONG shift  37
                    TYPE_ULONG shift  38
                     TYPE_CHAR shift  39
                    TYPE_UCHAR shift  40
                   TYPE_DOUBLE shift  41
                     TYPE_BOOL shift  42
                   TYPE_STRING shift  43
                    TYPE_ARRAY shift  44
                      TYPE_VAR shift  45
         xx_method_return_type shift  559
             xx_parameter_type shift  30
             xx_parameter_cast shift  31

State 559:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  560

State 560:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  561
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
             xx_statement_list shift  562
                  xx_statement shift  483
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 561:
     (73) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 73

State 562:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  249
                    IDENTIFIER shift  477
                      DOTCOMMA shift  150
                  BRACKET_OPEN shift  277
                 BRACKET_CLOSE shift  563
                       COMMENT shift  482
                  TYPE_INTEGER shift  441
                 TYPE_UINTEGER shift  450
                     TYPE_LONG shift  459
                    TYPE_ULONG shift  462
                     TYPE_CHAR shift  453
                    TYPE_UCHAR shift  456
                   TYPE_DOUBLE shift  465
                     TYPE_BOOL shift  471
                   TYPE_STRING shift  468
                      TYPE_VAR shift  474
                         BREAK shift  151
                      CONTINUE shift  153
                            IF shift  155
                        SWITCH shift  164
                          LOOP shift  175
                         WHILE shift  179
                            DO shift  184
                           FOR shift  341
                           LET shift  348
                          ECHO shift  410
                        RETURN shift  425
                         UNSET shift  429
                         THROW shift  438
                    xx_comment shift  148
                  xx_statement shift  129
              xx_let_statement shift  130
               xx_if_statement shift  131
             xx_loop_statement shift  132
             xx_echo_statement shift  133
           xx_return_statement shift  134
            xx_fetch_statement shift  135
            xx_fcall_statement shift  136
            xx_mcall_statement shift  137
            xx_scall_statement shift  138
            xx_unset_statement shift  139
            xx_throw_statement shift  140
          xx_declare_statement shift  141
            xx_break_statement shift  142
         xx_continue_statement shift  143
            xx_while_statement shift  144
         xx_do_while_statement shift  145
           xx_switch_statement shift  146
              xx_for_statement shift  147
            xx_empty_statement shift  149
                 xx_mcall_expr shift  417
                 xx_fcall_expr shift  419
                 xx_scall_expr shift  421
                 xx_fetch_expr shift  423

State 563:
     (75) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 75

State 564:
     (31) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition *
          xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition * xx_class_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 31
                       COMMENT shift  568
                         CONST shift  574
                        INLINE shift  83
   xx_class_methods_definition shift  565
            xx_visibility_list shift  120
     xx_class_const_definition shift  566
    xx_class_method_definition shift  567
                 xx_visibility shift  102

State 565:
     (34) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 34
                       COMMENT shift  536
                        INLINE shift  83
            xx_visibility_list shift  120
    xx_class_method_definition shift  119
                 xx_visibility shift  102

State 566:
     (52) xx_class_consts_definition ::= xx_class_consts_definition xx_class_const_definition *

                     {default} reduce 52

State 567:
     (55) xx_class_methods_definition ::= xx_class_method_definition *

                     {default} reduce 55

State 568:
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                         CONST shift  569
                        INLINE shift  83
            xx_visibility_list shift  537
                 xx_visibility shift  102

State 569:
          xx_class_const_definition ::= COMMENT CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  570

State 570:
          xx_class_const_definition ::= COMMENT CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  571

State 571:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  572

State 572:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  573

State 573:
     (58) xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 58

State 574:
          xx_class_const_definition ::= CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  575

State 575:
          xx_class_const_definition ::= CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  576

State 576:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  577

State 577:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  578

State 578:
     (59) xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 59

State 579:
     (36) xx_class_properties_definition ::= xx_class_properties_definition xx_class_property_definition *

                     {default} reduce 36

State 580:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                         CONST shift  569
                        INLINE shift  83
            xx_visibility_list shift  581
                 xx_visibility shift  102

State 581:
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                    IDENTIFIER shift  582
                      ABSTRACT shift  84
                         FINAL shift  85
                      FUNCTION shift  538
                        INLINE shift  83
                 xx_visibility shift  77

State 582:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  583
                  BRACKET_OPEN shift  589
                        ASSIGN shift  584
   xx_class_property_shortcuts shift  599

State 583:
     (38) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 38

State 584:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  585

State 585:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  586
                  BRACKET_OPEN shift  589
   xx_class_property_shortcuts shift  587

State 586:
     (40) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 40

State 587:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  588

State 588:
     (44) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 44

State 589:
          xx_class_property_shortcuts ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_property_shortcuts ::= BRACKET_OPEN * xx_class_property_shortcuts_list BRACKET_CLOSE
          xx_class_property_shortcuts_list ::= * xx_class_property_shortcuts_list COMMA xx_class_property_shortcut
          xx_class_property_shortcuts_list ::= * xx_class_property_shortcut
          xx_class_property_shortcut ::= * IDENTIFIER
          xx_class_property_shortcut ::= * COMMENT IDENTIFIER

                    IDENTIFIER shift  595
                 BRACKET_CLOSE shift  590
                       COMMENT shift  596
xx_class_property_shortcuts_list shift  591
    xx_class_property_shortcut shift  598

State 590:
     (46) xx_class_property_shortcuts ::= BRACKET_OPEN BRACKET_CLOSE *

                      DOTCOMMA reduce 46

State 591:
          xx_class_property_shortcuts ::= BRACKET_OPEN xx_class_property_shortcuts_list * BRACKET_CLOSE
          xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list * COMMA xx_class_property_shortcut

                         COMMA shift  593
                 BRACKET_CLOSE shift  592

State 592:
     (47) xx_class_property_shortcuts ::= BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE *

                      DOTCOMMA reduce 47

State 593:
          xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list COMMA * xx_class_property_shortcut
          xx_class_property_shortcut ::= * IDENTIFIER
          xx_class_property_shortcut ::= * COMMENT IDENTIFIER

                    IDENTIFIER shift  595
                       COMMENT shift  596
    xx_class_property_shortcut shift  594

State 594:
     (48) xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list COMMA xx_class_property_shortcut *

                     {default} reduce 48

State 595:
     (50) xx_class_property_shortcut ::= IDENTIFIER *

                     {default} reduce 50

State 596:
          xx_class_property_shortcut ::= COMMENT * IDENTIFIER

                    IDENTIFIER shift  597

State 597:
     (51) xx_class_property_shortcut ::= COMMENT IDENTIFIER *

                     {default} reduce 51

State 598:
     (49) xx_class_property_shortcuts_list ::= xx_class_property_shortcut *

                     {default} reduce 49

State 599:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  600

State 600:
     (42) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 42

State 601:
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                    IDENTIFIER shift  602
                      ABSTRACT shift  84
                         FINAL shift  85
                      FUNCTION shift  121
                        INLINE shift  83
                 xx_visibility shift  77

State 602:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  603
                  BRACKET_OPEN shift  589
                        ASSIGN shift  604
   xx_class_property_shortcuts shift  609

State 603:
     (39) xx_class_property_definition ::= xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 39

State 604:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  65
                        STRING shift  60
                       INTEGER shift  58
                          CHAR shift  59
                        DOUBLE shift  61
                          NULL shift  62
                          TRUE shift  64
                         FALSE shift  63
               xx_literal_expr shift  605

State 605:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  606
                  BRACKET_OPEN shift  589
   xx_class_property_shortcuts shift  607

State 606:
     (41) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 41

State 607:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  608

State 608:
     (45) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 45

State 609:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  610

State 610:
     (43) xx_class_property_definition ::= xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 43

State 611:
     (53) xx_class_consts_definition ::= xx_class_const_definition *

                     {default} reduce 53

State 612:
     (28) xx_class_definition ::= xx_class_consts_definition *
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 28
                       COMMENT shift  580
                         CONST shift  574
                        INLINE shift  83
xx_class_properties_definition shift  613
   xx_class_methods_definition shift  616
  xx_class_property_definition shift  617
            xx_visibility_list shift  601
     xx_class_const_definition shift  566
    xx_class_method_definition shift  567
                 xx_visibility shift  102

State 613:
     (32) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition *
          xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition * xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 32
                       COMMENT shift  615
                        INLINE shift  83
   xx_class_methods_definition shift  614
  xx_class_property_definition shift  579
            xx_visibility_list shift  601
    xx_class_method_definition shift  567
                 xx_visibility shift  102

State 614:
     (35) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 35
                       COMMENT shift  536
                        INLINE shift  83
            xx_visibility_list shift  120
    xx_class_method_definition shift  119
                 xx_visibility shift  102

State 615:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                        INLINE shift  83
            xx_visibility_list shift  581
                 xx_visibility shift  102

State 616:
     (33) xx_class_definition ::= xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 33
                       COMMENT shift  536
                        INLINE shift  83
            xx_visibility_list shift  120
    xx_class_method_definition shift  119
                 xx_visibility shift  102

State 617:
     (37) xx_class_properties_definition ::= xx_class_property_definition *

                     {default} reduce 37

State 618:
     (29) xx_class_definition ::= xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  78
                     PROTECTED shift  79
                        STATIC shift  81
                       PRIVATE shift  80
                        SCOPED shift  82
                      ABSTRACT shift  84
                         FINAL shift  85
                 BRACKET_CLOSE reduce 29
                       COMMENT shift  536
                        INLINE shift  83
            xx_visibility_list shift  120
    xx_class_method_definition shift  119
                 xx_visibility shift  102

State 619:
          xx_implements_list ::= xx_implements_list COMMA * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  621
                 xx_implements shift  620

State 620:
     (22) xx_implements_list ::= xx_implements_list COMMA xx_implements *

                     {default} reduce 22

State 621:
     (24) xx_implements ::= IDENTIFIER *

                     {default} reduce 24

State 622:
     (23) xx_implements_list ::= xx_implements *

                     {default} reduce 23

State 623:
          xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  621
            xx_implements_list shift  624
                 xx_implements shift  622

State 624:
          xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  619
                  BRACKET_OPEN shift  113
                 xx_class_body shift  625

State 625:
     (13) xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 13

State 626:
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                         CLASS shift  627

State 627:
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  628

State 628:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  630
                    IMPLEMENTS shift  633
                  BRACKET_OPEN shift  113
                 xx_class_body shift  629

State 629:
     (15) xx_class_def ::= ABSTRACT CLASS IDENTIFIER xx_class_body *

                     {default} reduce 15

State 630:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  631

State 631:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  113
                 xx_class_body shift  632

State 632:
     (16) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 16

State 633:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  621
            xx_implements_list shift  634
                 xx_implements shift  622

State 634:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  619
                  BRACKET_OPEN shift  113
                 xx_class_body shift  635

State 635:
     (17) xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 17

State 636:
          xx_class_def ::= FINAL * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= FINAL * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                         CLASS shift  637

State 637:
          xx_class_def ::= FINAL CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= FINAL CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                    IDENTIFIER shift  638

State 638:
          xx_class_def ::= FINAL CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= FINAL CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  640
                  BRACKET_OPEN shift  113
                 xx_class_body shift  639

State 639:
     (18) xx_class_def ::= FINAL CLASS IDENTIFIER xx_class_body *

                     {default} reduce 18

State 640:
          xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  641

State 641:
          xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  113
                 xx_class_body shift  642

State 642:
     (19) xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 19

State 643:
      (3) xx_top_statement_list ::= xx_top_statement *

                     {default} reduce 3

