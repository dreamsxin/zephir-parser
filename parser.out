 State 0:
          program ::= * xx_language
          xx_language ::= * xx_top_statement_list
          xx_top_statement_list ::= * xx_top_statement_list xx_top_statement
          xx_top_statement_list ::= * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_interface_def
          xx_top_statement ::= * xx_comment
          xx_top_statement ::= * xx_cblock
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_interface_def ::= * INTERFACE IDENTIFIER xx_interface_body
          xx_interface_def ::= * INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                     NAMESPACE shift  9
                     INTERFACE shift  12
                         CLASS shift  156
                      ABSTRACT shift  697
                         FINAL shift  707
                       COMMENT shift  564
                        CBLOCK shift  565
                       program accept
                   xx_language shift  1
         xx_top_statement_list shift  2
              xx_top_statement shift  714
              xx_namespace_def shift  4
                  xx_class_def shift  5
              xx_interface_def shift  6
                    xx_comment shift  7
                     xx_cblock shift  8

State 1:
      (0) program ::= xx_language *

                             $ reduce 0

State 2:
      (1) xx_language ::= xx_top_statement_list *
          xx_top_statement_list ::= xx_top_statement_list * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_interface_def
          xx_top_statement ::= * xx_comment
          xx_top_statement ::= * xx_cblock
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_interface_def ::= * INTERFACE IDENTIFIER xx_interface_body
          xx_interface_def ::= * INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                             $ reduce 1
                     NAMESPACE shift  9
                     INTERFACE shift  12
                         CLASS shift  156
                      ABSTRACT shift  697
                         FINAL shift  707
                       COMMENT shift  564
                        CBLOCK shift  565
              xx_top_statement shift  3
              xx_namespace_def shift  4
                  xx_class_def shift  5
              xx_interface_def shift  6
                    xx_comment shift  7
                     xx_cblock shift  8

State 3:
      (2) xx_top_statement_list ::= xx_top_statement_list xx_top_statement *

                     {default} reduce 2

State 4:
      (4) xx_top_statement ::= xx_namespace_def *

                     {default} reduce 4

State 5:
      (5) xx_top_statement ::= xx_class_def *

                     {default} reduce 5

State 6:
      (6) xx_top_statement ::= xx_interface_def *

                     {default} reduce 6

State 7:
      (7) xx_top_statement ::= xx_comment *

                     {default} reduce 7

State 8:
      (8) xx_top_statement ::= xx_cblock *

                     {default} reduce 8

State 9:
          xx_namespace_def ::= NAMESPACE * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  10

State 10:
          xx_namespace_def ::= NAMESPACE IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  11

State 11:
      (9) xx_namespace_def ::= NAMESPACE IDENTIFIER DOTCOMMA *

                     {default} reduce 9

State 12:
          xx_interface_def ::= INTERFACE * IDENTIFIER xx_interface_body
          xx_interface_def ::= INTERFACE * IDENTIFIER EXTENDS IDENTIFIER xx_interface_body

                    IDENTIFIER shift  13

State 13:
          xx_interface_def ::= INTERFACE IDENTIFIER * xx_interface_body
          xx_interface_def ::= INTERFACE IDENTIFIER * EXTENDS IDENTIFIER xx_interface_body
          xx_interface_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_interface_body ::= * BRACKET_OPEN xx_interface_definition BRACKET_CLOSE

                       EXTENDS shift  15
                  BRACKET_OPEN shift  18
             xx_interface_body shift  14

State 14:
     (10) xx_interface_def ::= INTERFACE IDENTIFIER xx_interface_body *

                     {default} reduce 10

State 15:
          xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS * IDENTIFIER xx_interface_body

                    IDENTIFIER shift  16

State 16:
          xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS IDENTIFIER * xx_interface_body
          xx_interface_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_interface_body ::= * BRACKET_OPEN xx_interface_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  18
             xx_interface_body shift  17

State 17:
     (11) xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body *

                     {default} reduce 11

State 18:
          xx_interface_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_interface_body ::= BRACKET_OPEN * xx_interface_definition BRACKET_CLOSE
          xx_interface_definition ::= * xx_class_consts_definition
          xx_interface_definition ::= * xx_interface_methods_definition
          xx_interface_definition ::= * xx_class_consts_definition xx_interface_methods_definition
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_interface_methods_definition ::= * xx_interface_methods_definition xx_interface_method_definition
          xx_interface_methods_definition ::= * xx_interface_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE shift  19
                       COMMENT shift  143
                         CONST shift  149
                        INLINE shift  121
       xx_interface_definition shift  20
    xx_class_consts_definition shift  22
xx_interface_methods_definition shift  154
            xx_visibility_list shift  25
     xx_class_const_definition shift  155
xx_interface_method_definition shift  142
                 xx_visibility shift  140

State 19:
     (26) xx_interface_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 26

State 20:
          xx_interface_body ::= BRACKET_OPEN xx_interface_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  21

State 21:
     (27) xx_interface_body ::= BRACKET_OPEN xx_interface_definition BRACKET_CLOSE *

                     {default} reduce 27

State 22:
     (37) xx_interface_definition ::= xx_class_consts_definition *
          xx_interface_definition ::= xx_class_consts_definition * xx_interface_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_interface_methods_definition ::= * xx_interface_methods_definition xx_interface_method_definition
          xx_interface_methods_definition ::= * xx_interface_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 37
                       COMMENT shift  143
                         CONST shift  149
                        INLINE shift  121
xx_interface_methods_definition shift  23
            xx_visibility_list shift  25
     xx_class_const_definition shift  141
xx_interface_method_definition shift  142
                 xx_visibility shift  140

State 23:
     (39) xx_interface_definition ::= xx_class_consts_definition xx_interface_methods_definition *
          xx_interface_methods_definition ::= xx_interface_methods_definition * xx_interface_method_definition
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 39
                       COMMENT shift  124
                        INLINE shift  121
            xx_visibility_list shift  25
xx_interface_method_definition shift  24
                 xx_visibility shift  140

State 24:
     (60) xx_interface_methods_definition ::= xx_interface_methods_definition xx_interface_method_definition *

                     {default} reduce 60

State 25:
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                      FUNCTION shift  26
                        INLINE shift  121
                 xx_visibility shift  115

State 26:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  27

State 27:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  28

State 28:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * CONST IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  100
             PARENTHESES_CLOSE shift  29
                    IDENTIFIER shift  68
                         CONST shift  84
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_list shift  60
             xx_parameter_type shift  102
             xx_parameter_cast shift  110
                  xx_parameter shift  114

State 29:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                         ARROW shift  30
                      DOTCOMMA shift  59

State 30:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  31
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 31:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  32

State 32:
     (80) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 80

State 33:
     (98) xx_method_return_type ::= VOID *

                     {default} reduce 98

State 34:
     (99) xx_method_return_type ::= xx_method_return_type_list *
          xx_method_return_type_list ::= xx_method_return_type_list * BITWISE_OR xx_method_return_type_item

                    BITWISE_OR shift  35
                     {default} reduce 99

State 35:
          xx_method_return_type_list ::= xx_method_return_type_list BITWISE_OR * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
    xx_method_return_type_item shift  36
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 36:
    (100) xx_method_return_type_list ::= xx_method_return_type_list BITWISE_OR xx_method_return_type_item *

                     {default} reduce 100

State 37:
    (102) xx_method_return_type_item ::= xx_parameter_type *
          xx_method_return_type_item ::= xx_parameter_type * NOT

                           NOT shift  38
                     {default} reduce 102

State 38:
    (103) xx_method_return_type_item ::= xx_parameter_type NOT *

                     {default} reduce 103

State 39:
    (104) xx_method_return_type_item ::= xx_parameter_cast *

                     {default} reduce 104

State 40:
    (105) xx_method_return_type_item ::= xx_parameter_cast_collection *

                     {default} reduce 105

State 41:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER
          xx_parameter_cast_collection ::= LESS * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER

                    IDENTIFIER shift  42

State 42:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER
          xx_parameter_cast_collection ::= LESS IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE GREATER

                       GREATER shift  43
                 SBRACKET_OPEN shift  44

State 43:
    (124) xx_parameter_cast ::= LESS IDENTIFIER GREATER *

                     {default} reduce 124

State 44:
          xx_parameter_cast_collection ::= LESS IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE GREATER

                SBRACKET_CLOSE shift  45

State 45:
          xx_parameter_cast_collection ::= LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * GREATER

                       GREATER shift  46

State 46:
    (125) xx_parameter_cast_collection ::= LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER *

                     {default} reduce 125

State 47:
    (126) xx_parameter_type ::= TYPE_INTEGER *

                     {default} reduce 126

State 48:
    (127) xx_parameter_type ::= TYPE_UINTEGER *

                     {default} reduce 127

State 49:
    (128) xx_parameter_type ::= TYPE_LONG *

                     {default} reduce 128

State 50:
    (129) xx_parameter_type ::= TYPE_ULONG *

                     {default} reduce 129

State 51:
    (130) xx_parameter_type ::= TYPE_CHAR *

                     {default} reduce 130

State 52:
    (131) xx_parameter_type ::= TYPE_UCHAR *

                     {default} reduce 131

State 53:
    (132) xx_parameter_type ::= TYPE_DOUBLE *

                     {default} reduce 132

State 54:
    (133) xx_parameter_type ::= TYPE_BOOL *

                     {default} reduce 133

State 55:
    (134) xx_parameter_type ::= TYPE_STRING *

                     {default} reduce 134

State 56:
    (135) xx_parameter_type ::= TYPE_ARRAY *

                     {default} reduce 135

State 57:
    (136) xx_parameter_type ::= TYPE_VAR *

                     {default} reduce 136

State 58:
    (101) xx_method_return_type_list ::= xx_method_return_type_item *

                     {default} reduce 101

State 59:
     (84) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 84

State 60:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  66
             PARENTHESES_CLOSE shift  61

State 61:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * DOTCOMMA

                         ARROW shift  62
                      DOTCOMMA shift  65

State 62:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  63
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 63:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  64

State 64:
     (81) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 81

State 65:
     (85) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 85

State 66:
          xx_parameter_list ::= xx_parameter_list COMMA * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * CONST IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  100
                    IDENTIFIER shift  68
                         CONST shift  84
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_type shift  102
             xx_parameter_cast shift  110
                  xx_parameter shift  67

State 67:
    (106) xx_parameter_list ::= xx_parameter_list COMMA xx_parameter *

                     {default} reduce 106

State 68:
    (108) xx_parameter ::= IDENTIFIER *
          xx_parameter ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  69
                     {default} reduce 108

State 69:
          xx_parameter ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  70

State 70:
    (116) xx_parameter ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 116

State 71:
    (334) xx_literal_expr ::= INTEGER *

                     {default} reduce 334

State 72:
    (335) xx_literal_expr ::= CHAR *

                     {default} reduce 335

State 73:
    (336) xx_literal_expr ::= STRING *

                     {default} reduce 336

State 74:
    (337) xx_literal_expr ::= DOUBLE *

                     {default} reduce 337

State 75:
    (338) xx_literal_expr ::= NULL *

                     {default} reduce 338

State 76:
    (339) xx_literal_expr ::= FALSE *

                     {default} reduce 339

State 77:
    (340) xx_literal_expr ::= TRUE *

                     {default} reduce 340

State 78:
          xx_literal_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT

                   DOUBLECOLON shift  79

State 79:
          xx_literal_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT

                      CONSTANT shift  80

State 80:
    (341) xx_literal_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 341

State 81:
    (342) xx_literal_expr ::= CONSTANT *

                     {default} reduce 342

State 82:
          xx_literal_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  83

State 83:
    (343) xx_literal_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 343

State 84:
          xx_parameter ::= CONST * IDENTIFIER
          xx_parameter ::= CONST * xx_parameter_type IDENTIFIER
          xx_parameter ::= CONST * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= CONST * xx_parameter_cast IDENTIFIER
          xx_parameter ::= CONST * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= CONST * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= CONST * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= CONST * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  100
                    IDENTIFIER shift  85
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_type shift  88
             xx_parameter_cast shift  96

State 85:
    (109) xx_parameter ::= CONST IDENTIFIER *
          xx_parameter ::= CONST IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  86
                     {default} reduce 109

State 86:
          xx_parameter ::= CONST IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  87

State 87:
    (117) xx_parameter ::= CONST IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 117

State 88:
          xx_parameter ::= CONST xx_parameter_type * IDENTIFIER
          xx_parameter ::= CONST xx_parameter_type * NOT IDENTIFIER
          xx_parameter ::= CONST xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= CONST xx_parameter_type * NOT IDENTIFIER ASSIGN xx_literal_expr

                           NOT shift  92
                    IDENTIFIER shift  89

State 89:
    (111) xx_parameter ::= CONST xx_parameter_type IDENTIFIER *
          xx_parameter ::= CONST xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  90
                     {default} reduce 111

State 90:
          xx_parameter ::= CONST xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  91

State 91:
    (119) xx_parameter ::= CONST xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 119

State 92:
          xx_parameter ::= CONST xx_parameter_type NOT * IDENTIFIER
          xx_parameter ::= CONST xx_parameter_type NOT * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  93

State 93:
    (113) xx_parameter ::= CONST xx_parameter_type NOT IDENTIFIER *
          xx_parameter ::= CONST xx_parameter_type NOT IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  94
                     {default} reduce 113

State 94:
          xx_parameter ::= CONST xx_parameter_type NOT IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  95

State 95:
    (121) xx_parameter ::= CONST xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 121

State 96:
          xx_parameter ::= CONST xx_parameter_cast * IDENTIFIER
          xx_parameter ::= CONST xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  97

State 97:
    (115) xx_parameter ::= CONST xx_parameter_cast IDENTIFIER *
          xx_parameter ::= CONST xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  98
                     {default} reduce 115

State 98:
          xx_parameter ::= CONST xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  99

State 99:
    (123) xx_parameter ::= CONST xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 123

State 100:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER

                    IDENTIFIER shift  101

State 101:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER

                       GREATER shift  43

State 102:
          xx_parameter ::= xx_parameter_type * IDENTIFIER
          xx_parameter ::= xx_parameter_type * NOT IDENTIFIER
          xx_parameter ::= xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= xx_parameter_type * NOT IDENTIFIER ASSIGN xx_literal_expr

                           NOT shift  106
                    IDENTIFIER shift  103

State 103:
    (110) xx_parameter ::= xx_parameter_type IDENTIFIER *
          xx_parameter ::= xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  104
                     {default} reduce 110

State 104:
          xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  105

State 105:
    (118) xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 118

State 106:
          xx_parameter ::= xx_parameter_type NOT * IDENTIFIER
          xx_parameter ::= xx_parameter_type NOT * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  107

State 107:
    (112) xx_parameter ::= xx_parameter_type NOT IDENTIFIER *
          xx_parameter ::= xx_parameter_type NOT IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  108
                     {default} reduce 112

State 108:
          xx_parameter ::= xx_parameter_type NOT IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  109

State 109:
    (120) xx_parameter ::= xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 120

State 110:
          xx_parameter ::= xx_parameter_cast * IDENTIFIER
          xx_parameter ::= xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  111

State 111:
    (114) xx_parameter ::= xx_parameter_cast IDENTIFIER *
          xx_parameter ::= xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  112
                     {default} reduce 114

State 112:
          xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  113

State 113:
    (122) xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 122

State 114:
    (107) xx_parameter_list ::= xx_parameter *

                     {default} reduce 107

State 115:
     (88) xx_visibility_list ::= xx_visibility_list xx_visibility *

                     {default} reduce 88

State 116:
     (90) xx_visibility ::= PUBLIC *

                     {default} reduce 90

State 117:
     (91) xx_visibility ::= PROTECTED *

                     {default} reduce 91

State 118:
     (92) xx_visibility ::= PRIVATE *

                     {default} reduce 92

State 119:
     (93) xx_visibility ::= STATIC *

                     {default} reduce 93

State 120:
     (94) xx_visibility ::= SCOPED *

                     {default} reduce 94

State 121:
     (95) xx_visibility ::= INLINE *

                     {default} reduce 95

State 122:
     (96) xx_visibility ::= ABSTRACT *

                     {default} reduce 96

State 123:
     (97) xx_visibility ::= FINAL *

                     {default} reduce 97

State 124:
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                        INLINE shift  121
            xx_visibility_list shift  125
                 xx_visibility shift  140

State 125:
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                      FUNCTION shift  126
                        INLINE shift  121
                 xx_visibility shift  115

State 126:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  127

State 127:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  128

State 128:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * CONST IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  100
             PARENTHESES_CLOSE shift  129
                    IDENTIFIER shift  68
                         CONST shift  84
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_list shift  134
             xx_parameter_type shift  102
             xx_parameter_cast shift  110
                  xx_parameter shift  114

State 129:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                         ARROW shift  130
                      DOTCOMMA shift  133

State 130:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  131
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 131:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  132

State 132:
     (82) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 82

State 133:
     (86) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 86

State 134:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  66
             PARENTHESES_CLOSE shift  135

State 135:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * DOTCOMMA

                         ARROW shift  136
                      DOTCOMMA shift  139

State 136:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  137
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 137:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  138

State 138:
     (83) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 83

State 139:
     (87) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 87

State 140:
     (89) xx_visibility_list ::= xx_visibility *

                     {default} reduce 89

State 141:
     (56) xx_class_consts_definition ::= xx_class_consts_definition xx_class_const_definition *

                     {default} reduce 56

State 142:
     (61) xx_interface_methods_definition ::= xx_interface_method_definition *

                     {default} reduce 61

State 143:
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                         CONST shift  144
                        INLINE shift  121
            xx_visibility_list shift  125
                 xx_visibility shift  140

State 144:
          xx_class_const_definition ::= COMMENT CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  145

State 145:
          xx_class_const_definition ::= COMMENT CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  146

State 146:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  147

State 147:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  148

State 148:
     (62) xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 62

State 149:
          xx_class_const_definition ::= CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  150

State 150:
          xx_class_const_definition ::= CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  151

State 151:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  152

State 152:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  153

State 153:
     (63) xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 63

State 154:
     (38) xx_interface_definition ::= xx_interface_methods_definition *
          xx_interface_methods_definition ::= xx_interface_methods_definition * xx_interface_method_definition
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 38
                       COMMENT shift  124
                        INLINE shift  121
            xx_visibility_list shift  25
xx_interface_method_definition shift  24
                 xx_visibility shift  140

State 155:
     (57) xx_class_consts_definition ::= xx_class_const_definition *

                     {default} reduce 57

State 156:
          xx_class_def ::= CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  157

State 157:
          xx_class_def ::= CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  159
                    IMPLEMENTS shift  694
                  BRACKET_OPEN shift  165
                 xx_class_body shift  158

State 158:
     (12) xx_class_def ::= CLASS IDENTIFIER xx_class_body *

                     {default} reduce 12

State 159:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  160

State 160:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                    IMPLEMENTS shift  162
                  BRACKET_OPEN shift  165
                 xx_class_body shift  161

State 161:
     (13) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 13

State 162:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  692
            xx_implements_list shift  163
                 xx_implements shift  693

State 163:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  690
                  BRACKET_OPEN shift  165
                 xx_class_body shift  164

State 164:
     (15) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 15

State 165:
          xx_class_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_body ::= BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE shift  166
                       COMMENT shift  652
                         CONST shift  149
                        INLINE shift  121
           xx_class_definition shift  167
xx_class_properties_definition shift  169
    xx_class_consts_definition shift  683
   xx_class_methods_definition shift  689
  xx_class_property_definition shift  688
            xx_visibility_list shift  673
     xx_class_const_definition shift  155
    xx_class_method_definition shift  649
                 xx_visibility shift  140

State 166:
     (21) xx_class_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 21

State 167:
          xx_class_body ::= BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  168

State 168:
     (22) xx_class_body ::= BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 22

State 169:
     (28) xx_class_definition ::= xx_class_properties_definition *
          xx_class_definition ::= xx_class_properties_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 28
                       COMMENT shift  652
                         CONST shift  149
                        INLINE shift  121
    xx_class_consts_definition shift  647
   xx_class_methods_definition shift  170
  xx_class_property_definition shift  651
            xx_visibility_list shift  673
     xx_class_const_definition shift  155
    xx_class_method_definition shift  649
                 xx_visibility shift  140

State 170:
     (31) xx_class_definition ::= xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 31
                       COMMENT shift  619
                        INLINE shift  121
            xx_visibility_list shift  172
    xx_class_method_definition shift  171
                 xx_visibility shift  140

State 171:
     (58) xx_class_methods_definition ::= xx_class_methods_definition xx_class_method_definition *

                     {default} reduce 58

State 172:
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                      FUNCTION shift  173
                        INLINE shift  121
                 xx_visibility shift  115

State 173:
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  174

State 174:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  175

State 175:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * CONST IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  100
             PARENTHESES_CLOSE shift  176
                    IDENTIFIER shift  68
                         CONST shift  84
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_list shift  607
             xx_parameter_type shift  102
             xx_parameter_cast shift  110
                  xx_parameter shift  114

State 176:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         ARROW shift  601
                  BRACKET_OPEN shift  177

State 177:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  178
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  179
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 178:
     (64) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 64

State 179:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  180
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 180:
     (66) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 66

State 181:
    (137) xx_statement_list ::= xx_statement_list xx_statement *

                     {default} reduce 137

State 182:
    (139) xx_statement ::= xx_cblock *

                     {default} reduce 139

State 183:
    (140) xx_statement ::= xx_let_statement *

                     {default} reduce 140

State 184:
    (141) xx_statement ::= xx_if_statement *

                     {default} reduce 141

State 185:
    (142) xx_statement ::= xx_loop_statement *

                     {default} reduce 142

State 186:
    (143) xx_statement ::= xx_echo_statement *

                     {default} reduce 143

State 187:
    (144) xx_statement ::= xx_return_statement *

                     {default} reduce 144

State 188:
    (145) xx_statement ::= xx_require_statement *

                     {default} reduce 145

State 189:
    (146) xx_statement ::= xx_fetch_statement *

                     {default} reduce 146

State 190:
    (147) xx_statement ::= xx_fcall_statement *

                     {default} reduce 147

State 191:
    (148) xx_statement ::= xx_mcall_statement *

                     {default} reduce 148

State 192:
    (149) xx_statement ::= xx_scall_statement *

                     {default} reduce 149

State 193:
    (150) xx_statement ::= xx_unset_statement *

                     {default} reduce 150

State 194:
    (151) xx_statement ::= xx_throw_statement *

                     {default} reduce 151

State 195:
    (152) xx_statement ::= xx_declare_statement *

                     {default} reduce 152

State 196:
    (153) xx_statement ::= xx_break_statement *

                     {default} reduce 153

State 197:
    (154) xx_statement ::= xx_continue_statement *

                     {default} reduce 154

State 198:
    (155) xx_statement ::= xx_while_statement *

                     {default} reduce 155

State 199:
    (156) xx_statement ::= xx_do_while_statement *

                     {default} reduce 156

State 200:
    (157) xx_statement ::= xx_switch_statement *

                     {default} reduce 157

State 201:
    (158) xx_statement ::= xx_for_statement *

                     {default} reduce 158

State 202:
    (159) xx_statement ::= xx_comment *

                     {default} reduce 159

State 203:
    (160) xx_statement ::= xx_empty_statement *

                     {default} reduce 160

State 204:
    (161) xx_empty_statement ::= DOTCOMMA *

                     {default} reduce 161

State 205:
          xx_break_statement ::= BREAK * DOTCOMMA

                      DOTCOMMA shift  206

State 206:
    (162) xx_break_statement ::= BREAK DOTCOMMA *

                     {default} reduce 162

State 207:
          xx_continue_statement ::= CONTINUE * DOTCOMMA

                      DOTCOMMA shift  208

State 208:
    (163) xx_continue_statement ::= CONTINUE DOTCOMMA *

                     {default} reduce 163

State 209:
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                  xx_eval_expr shift  210
                xx_common_expr shift  421
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 210:
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  211

State 211:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  595
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  212
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 212:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  213
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 213:
    (166) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE

                          ELSE shift  214
                     {default} reduce 166

State 214:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  215

State 215:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  594
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  216
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 216:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  217
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 217:
    (167) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 167

State 218:
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                  xx_eval_expr shift  219
                xx_common_expr shift  421
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 219:
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN xx_case_clauses BRACKET_CLOSE

                  BRACKET_OPEN shift  220

State 220:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * xx_case_clauses BRACKET_CLOSE
          xx_case_clauses ::= * xx_case_clauses xx_case_clause
          xx_case_clauses ::= * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  221
                          CASE shift  225
                       DEFAULT shift  590
               xx_case_clauses shift  222
                xx_case_clause shift  593

State 221:
    (170) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 170

State 222:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses * BRACKET_CLOSE
          xx_case_clauses ::= xx_case_clauses * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  223
                          CASE shift  225
                       DEFAULT shift  590
                xx_case_clause shift  224

State 223:
    (171) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE *

                     {default} reduce 171

State 224:
    (172) xx_case_clauses ::= xx_case_clauses xx_case_clause *

                     {default} reduce 172

State 225:
          xx_case_clause ::= CASE * xx_literal_expr COLON
          xx_case_clause ::= CASE * xx_literal_expr COLON xx_statement_list
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  226

State 226:
          xx_case_clause ::= CASE xx_literal_expr * COLON
          xx_case_clause ::= CASE xx_literal_expr * COLON xx_statement_list

                         COLON shift  227

State 227:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (174) xx_case_clause ::= CASE xx_literal_expr COLON *
          xx_case_clause ::= CASE xx_literal_expr COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  228
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512
                     {default} reduce 174

State 228:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (175) xx_case_clause ::= CASE xx_literal_expr COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512
                     {default} reduce 175

State 229:
          xx_loop_statement ::= LOOP * BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  230

State 230:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  589
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  231
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 231:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  232
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 232:
    (178) xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 178

State 233:
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                  xx_eval_expr shift  234
                xx_common_expr shift  421
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 234:
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  235

State 235:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  588
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  236
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 236:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  237
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 237:
    (180) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 180

State 238:
          xx_do_while_statement ::= DO * BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO * BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA

                  BRACKET_OPEN shift  239

State 239:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  584
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  240
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 240:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  241
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 241:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  242

State 242:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                  xx_eval_expr shift  243
                xx_common_expr shift  421
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 243:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  244

State 244:
    (182) xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 182

State 245:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= NOT * xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  246
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 246:
    (245) xx_common_expr ::= NOT xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 245

State 247:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr EQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  420
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 248:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= ISSET * xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  249
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 249:
    (246) xx_common_expr ::= ISSET xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 246

State 250:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr NOTEQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  419
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 251:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= REQUIRE * xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  252
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 252:
    (247) xx_common_expr ::= REQUIRE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 247

State 253:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr IDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  418
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 254:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= CLONE * xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  255
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 255:
    (248) xx_common_expr ::= CLONE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 248

State 256:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr NOTIDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  417
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 257:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= EMPTY * xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  258
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 258:
    (249) xx_common_expr ::= EMPTY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 249

State 259:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= xx_common_expr LESS * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  416
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 260:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= LIKELY * xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  261
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 261:
    (250) xx_common_expr ::= LIKELY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 250

State 262:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr GREATER * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  415
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 263:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= UNLIKELY * xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  264
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 264:
    (251) xx_common_expr ::= UNLIKELY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 251

State 265:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr LESSEQUAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  266
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 266:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
    (258) xx_common_expr ::= xx_common_expr LESSEQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 258

State 267:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr GREATEREQUAL * xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  268
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 268:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (259) xx_common_expr ::= xx_common_expr GREATEREQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 259

State 269:
          xx_common_expr ::= xx_common_expr ARROW * IDENTIFIER
          xx_common_expr ::= xx_common_expr ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr ARROW * BRACKET_OPEN STRING BRACKET_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  270
                  BRACKET_OPEN shift  402

State 270:
    (263) xx_common_expr ::= xx_common_expr ARROW IDENTIFIER *
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  271
                     {default} reduce 263

State 271:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  401
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  399
             xx_call_parameter shift  358

State 272:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
    (325) xx_call_parameter ::= xx_common_expr *

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 325

State 273:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  274
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 274:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                SBRACKET_CLOSE shift  275

State 275:
    (268) xx_common_expr ::= xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE *

                     {default} reduce 268

State 276:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= xx_common_expr ADD * xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  277
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 277:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
    (269) xx_common_expr ::= xx_common_expr ADD xx_common_expr *
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 269

State 278:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= xx_common_expr SUB * xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  279
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 279:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
    (270) xx_common_expr ::= xx_common_expr SUB xx_common_expr *
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 270

State 280:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= xx_common_expr MUL * xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  281
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 281:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
    (271) xx_common_expr ::= xx_common_expr MUL xx_common_expr *
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 271

State 282:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= xx_common_expr DIV * xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  283
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 283:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
    (272) xx_common_expr ::= xx_common_expr DIV xx_common_expr *
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 272

State 284:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= xx_common_expr MOD * xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  285
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 285:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
    (273) xx_common_expr ::= xx_common_expr MOD xx_common_expr *
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 273

State 286:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr CONCAT * xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  287
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 287:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (274) xx_common_expr ::= xx_common_expr CONCAT xx_common_expr *
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 274

State 288:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= xx_common_expr AND * xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  289
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 289:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
    (275) xx_common_expr ::= xx_common_expr AND xx_common_expr *
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 275

State 290:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= xx_common_expr OR * xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  291
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 291:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (276) xx_common_expr ::= xx_common_expr OR xx_common_expr *
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 276

State 292:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr BITWISE_AND * xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  293
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 293:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
    (277) xx_common_expr ::= xx_common_expr BITWISE_AND xx_common_expr *
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 277

State 294:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr BITWISE_OR * xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  295
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 295:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
    (278) xx_common_expr ::= xx_common_expr BITWISE_OR xx_common_expr *
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 278

State 296:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr BITWISE_XOR * xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  297
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 297:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
    (279) xx_common_expr ::= xx_common_expr BITWISE_XOR xx_common_expr *
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 279

State 298:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr BITWISE_SHIFTLEFT * xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  299
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 299:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
    (280) xx_common_expr ::= xx_common_expr BITWISE_SHIFTLEFT xx_common_expr *
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 280

State 300:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr BITWISE_SHIFTRIGHT * xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  301
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 301:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
    (281) xx_common_expr ::= xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr *
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 281

State 302:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_common_expr ::= xx_common_expr INSTANCEOF * xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  303
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 303:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (282) xx_common_expr ::= xx_common_expr INSTANCEOF xx_common_expr *
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 282

State 304:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_common_expr ::= xx_common_expr QUESTION * xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  305
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 305:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
          xx_common_expr ::= xx_common_expr QUESTION xx_common_expr * COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                         COLON shift  306

State 306:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_common_expr ::= xx_common_expr QUESTION xx_common_expr COLON * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  307
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 307:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
    (322) xx_common_expr ::= xx_common_expr QUESTION xx_common_expr COLON xx_common_expr *

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 322

State 308:
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= PARENTHESES_OPEN * xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN * xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
             xx_parameter_type shift  311
                xx_common_expr shift  309
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 309:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_common_expr * PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
             PARENTHESES_CLOSE shift  310
                 SBRACKET_OPEN shift  273
                         ARROW shift  269

State 310:
    (260) xx_common_expr ::= PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE *

                     {default} reduce 260

State 311:
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type * PARENTHESES_CLOSE xx_common_expr

             PARENTHESES_CLOSE shift  312

State 312:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE * xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  313
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 313:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (261) xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr *
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 261

State 314:
          xx_common_expr ::= LESS * IDENTIFIER GREATER xx_common_expr

                    IDENTIFIER shift  315

State 315:
          xx_common_expr ::= LESS IDENTIFIER * GREATER xx_common_expr

                       GREATER shift  316

State 316:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= LESS IDENTIFIER GREATER * xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  317
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 317:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (262) xx_common_expr ::= LESS IDENTIFIER GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 262

State 318:
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
    (286) xx_common_expr ::= IDENTIFIER *
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  340
                   DOUBLECOLON shift  319
                     {default} reduce 286

State 319:
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  320
                      CONSTANT shift  398

State 320:
    (266) xx_common_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER *
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  321
                     {default} reduce 266

State 321:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  397
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  395
             xx_call_parameter shift  358

State 322:
          xx_fetch_expr ::= FETCH * IDENTIFIER COMMA xx_common_expr

                    IDENTIFIER shift  323

State 323:
          xx_fetch_expr ::= FETCH IDENTIFIER * COMMA xx_common_expr

                         COMMA shift  324

State 324:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_fetch_expr ::= FETCH IDENTIFIER COMMA * xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  325
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 325:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (283) xx_fetch_expr ::= FETCH IDENTIFIER COMMA xx_common_expr *
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 283

State 326:
    (284) xx_common_expr ::= xx_fetch_expr *

                     {default} reduce 284

State 327:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= TYPEOF * xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  328
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 328:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (285) xx_common_expr ::= TYPEOF xx_common_expr *
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 285

State 329:
    (287) xx_common_expr ::= INTEGER *

                     {default} reduce 287

State 330:
    (288) xx_common_expr ::= STRING *

                     {default} reduce 288

State 331:
    (289) xx_common_expr ::= CHAR *

                     {default} reduce 289

State 332:
    (290) xx_common_expr ::= DOUBLE *

                     {default} reduce 290

State 333:
    (291) xx_common_expr ::= NULL *

                     {default} reduce 291

State 334:
    (292) xx_common_expr ::= TRUE *

                     {default} reduce 292

State 335:
    (293) xx_common_expr ::= FALSE *

                     {default} reduce 293

State 336:
    (294) xx_common_expr ::= CONSTANT *

                     {default} reduce 294

State 337:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_array_list ::= * xx_array_list COMMA xx_array_item
          xx_array_list ::= * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  339
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                SBRACKET_CLOSE shift  385
                        STRING shift  384
                       INTEGER shift  383
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  338
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
                 xx_array_list shift  386
                 xx_array_item shift  394
                  xx_array_key shift  390
                xx_array_value shift  393

State 338:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
    (333) xx_array_value ::= xx_common_expr *

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 333

State 339:
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
    (286) xx_common_expr ::= IDENTIFIER *
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
    (330) xx_array_key ::= IDENTIFIER *

              PARENTHESES_OPEN shift  340
                         COLON reduce 330
                   DOUBLECOLON shift  319
                     {default} reduce 286

State 340:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  382
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  380
             xx_call_parameter shift  358

State 341:
          xx_common_expr ::= NEW * IDENTIFIER
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  342
                  BRACKET_OPEN shift  373

State 342:
    (297) xx_common_expr ::= NEW IDENTIFIER *
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  343
                     {default} reduce 297

State 343:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  344
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  345
             xx_call_parameter shift  358

State 344:
    (298) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 298

State 345:
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  346

State 346:
    (299) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 299

State 347:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= xx_call_parameters COMMA * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
             xx_call_parameter shift  372

State 348:
          xx_fcall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  349

State 349:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  350

State 350:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  351
                   DOUBLECOLON shift  359

State 351:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  354
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  352
             xx_call_parameter shift  358

State 352:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  353

State 353:
    (305) xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 305

State 354:
    (306) xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 306

State 355:
    (319) xx_common_expr ::= xx_mcall_expr *

                     {default} reduce 319

State 356:
    (320) xx_common_expr ::= xx_scall_expr *

                     {default} reduce 320

State 357:
    (321) xx_common_expr ::= xx_fcall_expr *

                     {default} reduce 321

State 358:
    (324) xx_call_parameters ::= xx_call_parameter *

                     {default} reduce 324

State 359:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  360
                  BRACKET_OPEN shift  365

State 360:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  361

State 361:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  364
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  362
             xx_call_parameter shift  358

State 362:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  363

State 363:
    (309) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 309

State 364:
    (310) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 310

State 365:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  366

State 366:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  367

State 367:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  368

State 368:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  371
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  369
             xx_call_parameter shift  358

State 369:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  370

State 370:
    (311) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 311

State 371:
    (312) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 312

State 372:
    (323) xx_call_parameters ::= xx_call_parameters COMMA xx_call_parameter *

                     {default} reduce 323

State 373:
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  374

State 374:
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  375

State 375:
    (300) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE *
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  376
                     {default} reduce 300

State 376:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  377
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  378
             xx_call_parameter shift  358

State 377:
    (301) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 301

State 378:
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  379

State 379:
    (302) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 302

State 380:
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  381

State 381:
    (303) xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 303

State 382:
    (304) xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 304

State 383:
    (287) xx_common_expr ::= INTEGER *
    (332) xx_array_key ::= INTEGER *

                         COLON reduce 332
                     {default} reduce 287

State 384:
    (288) xx_common_expr ::= STRING *
    (331) xx_array_key ::= STRING *

                         COLON reduce 331
                     {default} reduce 288

State 385:
    (295) xx_common_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 295

State 386:
          xx_common_expr ::= SBRACKET_OPEN xx_array_list * SBRACKET_CLOSE
          xx_array_list ::= xx_array_list * COMMA xx_array_item

                         COMMA shift  388
                SBRACKET_CLOSE shift  387

State 387:
    (296) xx_common_expr ::= SBRACKET_OPEN xx_array_list SBRACKET_CLOSE *

                     {default} reduce 296

State 388:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_array_list ::= xx_array_list COMMA * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  339
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  384
                       INTEGER shift  383
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  338
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
                 xx_array_item shift  389
                  xx_array_key shift  390
                xx_array_value shift  393

State 389:
    (326) xx_array_list ::= xx_array_list COMMA xx_array_item *

                     {default} reduce 326

State 390:
          xx_array_item ::= xx_array_key * COLON xx_array_value

                         COLON shift  391

State 391:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_array_item ::= xx_array_key COLON * xx_array_value
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  338
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
                xx_array_value shift  392

State 392:
    (328) xx_array_item ::= xx_array_key COLON xx_array_value *

                     {default} reduce 328

State 393:
    (329) xx_array_item ::= xx_array_value *

                     {default} reduce 329

State 394:
    (327) xx_array_list ::= xx_array_item *

                     {default} reduce 327

State 395:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  396

State 396:
    (307) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 307

State 397:
    (308) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 308

State 398:
    (267) xx_common_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 267

State 399:
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  400

State 400:
    (313) xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 313

State 401:
    (314) xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 314

State 402:
          xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN * STRING BRACKET_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  403
                        STRING shift  409

State 403:
          xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  404

State 404:
    (264) xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE *
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  405
                     {default} reduce 264

State 405:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  408
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  406
             xx_call_parameter shift  358

State 406:
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  407

State 407:
    (315) xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 315

State 408:
    (316) xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 316

State 409:
          xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING * BRACKET_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  410

State 410:
    (265) xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE *
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  411
                     {default} reduce 265

State 411:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
             PARENTHESES_CLOSE shift  414
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  272
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326
            xx_call_parameters shift  412
             xx_call_parameter shift  358

State 412:
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  347
             PARENTHESES_CLOSE shift  413

State 413:
    (317) xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 317

State 414:
    (318) xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 318

State 415:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
    (257) xx_common_expr ::= xx_common_expr GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 257

State 416:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
    (256) xx_common_expr ::= xx_common_expr LESS xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 256

State 417:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
    (255) xx_common_expr ::= xx_common_expr NOTIDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 255

State 418:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
    (254) xx_common_expr ::= xx_common_expr IDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 254

State 419:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
    (253) xx_common_expr ::= xx_common_expr NOTEQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 253

State 420:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
    (252) xx_common_expr ::= xx_common_expr EQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 252

State 421:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
    (344) xx_eval_expr ::= xx_common_expr *

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 344

State 422:
          xx_for_statement ::= FOR * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  423

State 423:
          xx_for_statement ::= FOR IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         COMMA shift  572
                            IN shift  424

State 424:
          xx_for_statement ::= FOR IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                       REVERSE shift  567
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  425
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 425:
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                  BRACKET_OPEN shift  426

State 426:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  427
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 427:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  428
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 428:
    (183) xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 183

State 429:
          xx_let_statement ::= LET * xx_let_assignments DOTCOMMA
          xx_let_assignments ::= * xx_let_assignments COMMA xx_let_assignment
          xx_let_assignments ::= * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER DECR
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR
          xx_let_assignment ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  434
                  BRACKET_OPEN shift  493
            xx_let_assignments shift  430
             xx_let_assignment shift  498

State 430:
          xx_let_statement ::= LET xx_let_assignments * DOTCOMMA
          xx_let_assignments ::= xx_let_assignments * COMMA xx_let_assignment

                         COMMA shift  432
                      DOTCOMMA shift  431

State 431:
    (187) xx_let_statement ::= LET xx_let_assignments DOTCOMMA *

                     {default} reduce 187

State 432:
          xx_let_assignments ::= xx_let_assignments COMMA * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER DECR
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR
          xx_let_assignment ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  434
                  BRACKET_OPEN shift  493
             xx_let_assignment shift  433

State 433:
    (188) xx_let_assignments ::= xx_let_assignments COMMA xx_let_assignment *

                     {default} reduce 188

State 434:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= * xx_array_offset_list xx_array_offset
          xx_array_offset_list ::= * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER INCR
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER DECR
          xx_let_assignment ::= IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER * DECR

                 SBRACKET_OPEN shift  484
                         ARROW shift  445
                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
                   DOUBLECOLON shift  473
                          INCR shift  491
                          DECR shift  492
        xx_assignment_operator shift  442
          xx_array_offset_list shift  488
               xx_array_offset shift  461

State 435:
    (190) xx_assignment_operator ::= ASSIGN *

                     {default} reduce 190

State 436:
    (191) xx_assignment_operator ::= ADDASSIGN *

                     {default} reduce 191

State 437:
    (192) xx_assignment_operator ::= SUBASSIGN *

                     {default} reduce 192

State 438:
    (193) xx_assignment_operator ::= MULASSIGN *

                     {default} reduce 193

State 439:
    (194) xx_assignment_operator ::= DIVASSIGN *

                     {default} reduce 194

State 440:
    (195) xx_assignment_operator ::= CONCATASSIGN *

                     {default} reduce 195

State 441:
    (196) xx_assignment_operator ::= MODASSIGN *

                     {default} reduce 196

State 442:
          xx_let_assignment ::= IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  443
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 443:
    (197) xx_let_assignment ::= IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 197

State 444:
    (244) xx_assign_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 244

State 445:
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER INCR
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER DECR

                    IDENTIFIER shift  446
                  BRACKET_OPEN shift  464

State 446:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= * xx_array_offset_list xx_array_offset
          xx_array_offset_list ::= * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * DECR

                 SBRACKET_OPEN shift  449
                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
                          INCR shift  462
                          DECR shift  463
        xx_assignment_operator shift  447
          xx_array_offset_list shift  456
               xx_array_offset shift  461

State 447:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  448
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 448:
    (198) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 198

State 449:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_array_offset ::= SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                SBRACKET_CLOSE shift  450
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  455
                 xx_index_expr shift  453
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 450:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  451

State 451:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  452
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 452:
    (201) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 201

State 453:
          xx_array_offset ::= SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  454

State 454:
    (210) xx_array_offset ::= SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE *

                     {default} reduce 210

State 455:
    (216) xx_index_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                SBRACKET_CLOSE reduce 216

State 456:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_array_offset_list * xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= xx_array_offset_list * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE

                 SBRACKET_OPEN shift  460
                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  457
               xx_array_offset shift  459

State 457:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  458
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 458:
    (202) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr *

                     {default} reduce 202

State 459:
    (208) xx_array_offset_list ::= xx_array_offset_list xx_array_offset *

                     {default} reduce 208

State 460:
          xx_array_offset ::= SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  455
                 xx_index_expr shift  453
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 461:
    (209) xx_array_offset_list ::= xx_array_offset *

                     {default} reduce 209

State 462:
    (211) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER INCR *

                     {default} reduce 211

State 463:
    (212) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER DECR *

                     {default} reduce 212

State 464:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  465
                        STRING shift  469

State 465:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  466

State 466:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  467

State 467:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  468
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 468:
    (199) xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 199

State 469:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  470

State 470:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  471

State 471:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  472
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 472:
    (200) xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 200

State 473:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  474

State 474:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= * xx_array_offset_list xx_array_offset
          xx_array_offset_list ::= * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE

                 SBRACKET_OPEN shift  477
                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  475
          xx_array_offset_list shift  481
               xx_array_offset shift  461

State 475:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  476
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 476:
    (203) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 203

State 477:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_array_offset ::= SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                SBRACKET_CLOSE shift  478
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  455
                 xx_index_expr shift  453
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 478:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  479

State 479:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  480
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 480:
    (204) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 204

State 481:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list * xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= xx_array_offset_list * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE

                 SBRACKET_OPEN shift  460
                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  482
               xx_array_offset shift  459

State 482:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  483
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 483:
    (205) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr *

                     {default} reduce 205

State 484:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_array_offset ::= SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                SBRACKET_CLOSE shift  485
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  455
                 xx_index_expr shift  453
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 485:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  486

State 486:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  487
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 487:
    (206) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 206

State 488:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER xx_array_offset_list * xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= xx_array_offset_list * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE

                 SBRACKET_OPEN shift  460
                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  489
               xx_array_offset shift  459

State 489:
          xx_let_assignment ::= IDENTIFIER xx_array_offset_list xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  490
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 490:
    (207) xx_let_assignment ::= IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr *

                     {default} reduce 207

State 491:
    (213) xx_let_assignment ::= IDENTIFIER INCR *

                     {default} reduce 213

State 492:
    (214) xx_let_assignment ::= IDENTIFIER DECR *

                     {default} reduce 214

State 493:
          xx_let_assignment ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  494

State 494:
          xx_let_assignment ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  495

State 495:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  435
                     ADDASSIGN shift  436
                     SUBASSIGN shift  437
                     MULASSIGN shift  438
                     DIVASSIGN shift  439
                  CONCATASSIGN shift  440
                     MODASSIGN shift  441
        xx_assignment_operator shift  496

State 496:
          xx_let_assignment ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  444
                xx_assign_expr shift  497
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 497:
    (215) xx_let_assignment ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 215

State 498:
    (189) xx_let_assignments ::= xx_let_assignment *

                     {default} reduce 189

State 499:
          xx_echo_statement ::= ECHO * xx_echo_expressions DOTCOMMA
          xx_echo_expressions ::= * xx_echo_expressions COMMA xx_echo_expression
          xx_echo_expressions ::= * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  504
           xx_echo_expressions shift  500
            xx_echo_expression shift  505
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 500:
          xx_echo_statement ::= ECHO xx_echo_expressions * DOTCOMMA
          xx_echo_expressions ::= xx_echo_expressions * COMMA xx_echo_expression

                         COMMA shift  502
                      DOTCOMMA shift  501

State 501:
    (217) xx_echo_statement ::= ECHO xx_echo_expressions DOTCOMMA *

                     {default} reduce 217

State 502:
          xx_echo_expressions ::= xx_echo_expressions COMMA * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  504
            xx_echo_expression shift  503
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 503:
    (218) xx_echo_expressions ::= xx_echo_expressions COMMA xx_echo_expression *

                     {default} reduce 218

State 504:
    (220) xx_echo_expression ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                     {default} reduce 220

State 505:
    (219) xx_echo_expressions ::= xx_echo_expression *

                     {default} reduce 219

State 506:
          xx_mcall_statement ::= xx_mcall_expr * DOTCOMMA
    (319) xx_common_expr ::= xx_mcall_expr *

                      DOTCOMMA shift  507
                     {default} reduce 319

State 507:
    (221) xx_mcall_statement ::= xx_mcall_expr DOTCOMMA *

                     {default} reduce 221

State 508:
          xx_fcall_statement ::= xx_fcall_expr * DOTCOMMA
    (321) xx_common_expr ::= xx_fcall_expr *

                      DOTCOMMA shift  509
                     {default} reduce 321

State 509:
    (222) xx_fcall_statement ::= xx_fcall_expr DOTCOMMA *

                     {default} reduce 222

State 510:
          xx_scall_statement ::= xx_scall_expr * DOTCOMMA
    (320) xx_common_expr ::= xx_scall_expr *

                      DOTCOMMA shift  511
                     {default} reduce 320

State 511:
    (223) xx_scall_statement ::= xx_scall_expr DOTCOMMA *

                     {default} reduce 223

State 512:
          xx_fetch_statement ::= xx_fetch_expr * DOTCOMMA
    (284) xx_common_expr ::= xx_fetch_expr *

                      DOTCOMMA shift  513
                     {default} reduce 284

State 513:
    (224) xx_fetch_statement ::= xx_fetch_expr DOTCOMMA *

                     {default} reduce 224

State 514:
          xx_return_statement ::= RETURN * xx_common_expr DOTCOMMA
          xx_return_statement ::= RETURN * DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  517
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  515
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 515:
          xx_return_statement ::= RETURN xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                      DOTCOMMA shift  516

State 516:
    (225) xx_return_statement ::= RETURN xx_common_expr DOTCOMMA *

                     {default} reduce 225

State 517:
    (226) xx_return_statement ::= RETURN DOTCOMMA *

                     {default} reduce 226

State 518:
          xx_require_statement ::= REQUIRE * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= REQUIRE * xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  519
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 519:
          xx_require_statement ::= REQUIRE xx_common_expr * DOTCOMMA
    (247) xx_common_expr ::= REQUIRE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                      DOTCOMMA shift  520

State 520:
    (227) xx_require_statement ::= REQUIRE xx_common_expr DOTCOMMA *

                     {default} reduce 227

State 521:
          xx_unset_statement ::= UNSET * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  522
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 522:
          xx_unset_statement ::= UNSET xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                      DOTCOMMA shift  523

State 523:
    (228) xx_unset_statement ::= UNSET xx_common_expr DOTCOMMA *

                     {default} reduce 228

State 524:
          xx_throw_statement ::= THROW * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  525
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 525:
          xx_throw_statement ::= THROW xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                      DOTCOMMA shift  526

State 526:
    (229) xx_throw_statement ::= THROW xx_common_expr DOTCOMMA *

                     {default} reduce 229

State 527:
          xx_declare_statement ::= TYPE_INTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  528
           xx_declare_variable shift  535

State 528:
          xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  529

State 529:
    (230) xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 230

State 530:
          xx_declare_variable_list ::= xx_declare_variable_list COMMA * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
           xx_declare_variable shift  531

State 531:
    (240) xx_declare_variable_list ::= xx_declare_variable_list COMMA xx_declare_variable *

                     {default} reduce 240

State 532:
    (242) xx_declare_variable ::= IDENTIFIER *
          xx_declare_variable ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  533
                     {default} reduce 242

State 533:
          xx_declare_variable ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  534

State 534:
    (243) xx_declare_variable ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 243

State 535:
    (241) xx_declare_variable_list ::= xx_declare_variable *

                     {default} reduce 241

State 536:
          xx_declare_statement ::= TYPE_UINTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  537
           xx_declare_variable shift  535

State 537:
          xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  538

State 538:
    (231) xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 231

State 539:
          xx_declare_statement ::= TYPE_CHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  540
           xx_declare_variable shift  535

State 540:
          xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  541

State 541:
    (232) xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 232

State 542:
          xx_declare_statement ::= TYPE_UCHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  543
           xx_declare_variable shift  535

State 543:
          xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  544

State 544:
    (233) xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 233

State 545:
          xx_declare_statement ::= TYPE_LONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  546
           xx_declare_variable shift  535

State 546:
          xx_declare_statement ::= TYPE_LONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  547

State 547:
    (234) xx_declare_statement ::= TYPE_LONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 234

State 548:
          xx_declare_statement ::= TYPE_ULONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  549
           xx_declare_variable shift  535

State 549:
          xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  550

State 550:
    (235) xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 235

State 551:
          xx_declare_statement ::= TYPE_DOUBLE * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  552
           xx_declare_variable shift  535

State 552:
          xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  553

State 553:
    (236) xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list DOTCOMMA *

                     {default} reduce 236

State 554:
          xx_declare_statement ::= TYPE_STRING * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  555
           xx_declare_variable shift  535

State 555:
          xx_declare_statement ::= TYPE_STRING xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  556

State 556:
    (237) xx_declare_statement ::= TYPE_STRING xx_declare_variable_list DOTCOMMA *

                     {default} reduce 237

State 557:
          xx_declare_statement ::= TYPE_BOOL * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  558
           xx_declare_variable shift  535

State 558:
          xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  559

State 559:
    (238) xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list DOTCOMMA *

                     {default} reduce 238

State 560:
          xx_declare_statement ::= TYPE_VAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  532
      xx_declare_variable_list shift  561
           xx_declare_variable shift  535

State 561:
          xx_declare_statement ::= TYPE_VAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  530
                      DOTCOMMA shift  562

State 562:
    (239) xx_declare_statement ::= TYPE_VAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 239

State 563:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269

State 564:
    (345) xx_comment ::= COMMENT *

                     {default} reduce 345

State 565:
    (346) xx_cblock ::= CBLOCK *

                     {default} reduce 346

State 566:
    (138) xx_statement_list ::= xx_statement *

                     {default} reduce 138

State 567:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  568
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 568:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                  BRACKET_OPEN shift  569

State 569:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  570
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 570:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  571
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 571:
    (184) xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 184

State 572:
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  573

State 573:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                            IN shift  574

State 574:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                       REVERSE shift  579
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  575
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 575:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                  BRACKET_OPEN shift  576

State 576:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  577
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 577:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  578
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 578:
    (185) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 185

State 579:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                xx_common_expr shift  580
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 580:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_AND xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_OR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_XOR xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= xx_common_expr * BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  304
                    INSTANCEOF shift  302
                           AND shift  288
                            OR shift  290
                    BITWISE_OR shift  294
                   BITWISE_AND shift  292
                   BITWISE_XOR shift  296
             BITWISE_SHIFTLEFT shift  298
            BITWISE_SHIFTRIGHT shift  300
                        EQUALS shift  247
                     IDENTICAL shift  253
                          LESS shift  259
                       GREATER shift  262
                     LESSEQUAL shift  265
                  GREATEREQUAL shift  267
                  NOTIDENTICAL shift  256
                     NOTEQUALS shift  250
                           ADD shift  276
                           SUB shift  278
                        CONCAT shift  286
                           MUL shift  280
                           DIV shift  282
                           MOD shift  284
                 SBRACKET_OPEN shift  273
                         ARROW shift  269
                  BRACKET_OPEN shift  581

State 581:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  582
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 582:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  583
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 583:
    (186) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 186

State 584:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  585

State 585:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  251
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                  BRACKET_OPEN shift  348
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                        STRING shift  330
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                  xx_eval_expr shift  586
                xx_common_expr shift  421
                 xx_mcall_expr shift  355
                 xx_fcall_expr shift  357
                 xx_scall_expr shift  356
                 xx_fetch_expr shift  326

State 586:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  587

State 587:
    (181) xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 181

State 588:
    (179) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 179

State 589:
    (177) xx_loop_statement ::= LOOP BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 177

State 590:
          xx_case_clause ::= DEFAULT * COLON xx_statement_list

                         COLON shift  591

State 591:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_case_clause ::= DEFAULT COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  592
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 592:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (176) xx_case_clause ::= DEFAULT COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512
                     {default} reduce 176

State 593:
    (173) xx_case_clauses ::= xx_case_clause *

                     {default} reduce 173

State 594:
    (168) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 168

State 595:
    (164) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                          ELSE shift  596
                     {default} reduce 164

State 596:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  597

State 597:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  600
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  598
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 598:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  599
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 599:
    (169) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 169

State 600:
    (165) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 165

State 601:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  602
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 602:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  603

State 603:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  604
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  605
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 604:
     (72) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 72

State 605:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  606
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 606:
     (74) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 74

State 607:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  66
             PARENTHESES_CLOSE shift  608

State 608:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         ARROW shift  613
                  BRACKET_OPEN shift  609

State 609:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  610
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  611
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 610:
     (65) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 65

State 611:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  612
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 612:
     (67) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 67

State 613:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  614
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 614:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  615

State 615:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  616
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  617
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 616:
     (73) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 73

State 617:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  618
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 618:
     (75) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 75

State 619:
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                        INLINE shift  121
            xx_visibility_list shift  620
                 xx_visibility shift  140

State 620:
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                      FUNCTION shift  621
                        INLINE shift  121
                 xx_visibility shift  115

State 621:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  622

State 622:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  623

State 623:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * CONST IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * CONST xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  100
             PARENTHESES_CLOSE shift  624
                    IDENTIFIER shift  68
                         CONST shift  84
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_list shift  635
             xx_parameter_type shift  102
             xx_parameter_cast shift  110
                  xx_parameter shift  114

State 624:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         ARROW shift  629
                  BRACKET_OPEN shift  625

State 625:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  626
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  627
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 626:
     (68) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 68

State 627:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  628
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 628:
     (70) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 70

State 629:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  630
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 630:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  631

State 631:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  632
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  633
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 632:
     (76) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 76

State 633:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  634
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 634:
     (78) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 78

State 635:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  66
             PARENTHESES_CLOSE shift  636

State 636:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         ARROW shift  641
                  BRACKET_OPEN shift  637

State 637:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  638
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  639
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 638:
     (69) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 69

State 639:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  640
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 640:
     (71) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 71

State 641:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  642
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 642:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  643

State 643:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  644
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
             xx_statement_list shift  645
                  xx_statement shift  566
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 644:
     (77) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 77

State 645:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_AND xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_OR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_XOR xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTLEFT xx_common_expr
          xx_common_expr ::= * xx_common_expr BITWISE_SHIFTRIGHT xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  518
                        LIKELY shift  260
                      UNLIKELY shift  263
                          LESS shift  314
                         CLONE shift  254
                         EMPTY shift  257
                         ISSET shift  248
                         FETCH shift  322
                        TYPEOF shift  327
                           NEW shift  341
                           NOT shift  245
                 SBRACKET_OPEN shift  337
                    IDENTIFIER shift  318
                      DOTCOMMA shift  204
                  BRACKET_OPEN shift  348
                 BRACKET_CLOSE shift  646
                       COMMENT shift  564
                      CONSTANT shift  336
              PARENTHESES_OPEN shift  308
                  TYPE_INTEGER shift  527
                 TYPE_UINTEGER shift  536
                     TYPE_LONG shift  545
                    TYPE_ULONG shift  548
                     TYPE_CHAR shift  539
                    TYPE_UCHAR shift  542
                   TYPE_DOUBLE shift  551
                     TYPE_BOOL shift  557
                   TYPE_STRING shift  554
                      TYPE_VAR shift  560
                         BREAK shift  205
                      CONTINUE shift  207
                            IF shift  209
                        SWITCH shift  218
                          LOOP shift  229
                         WHILE shift  233
                            DO shift  238
                           FOR shift  422
                           LET shift  429
                        STRING shift  330
                          ECHO shift  499
                        RETURN shift  514
                         UNSET shift  521
                         THROW shift  524
                       INTEGER shift  329
                          CHAR shift  331
                        DOUBLE shift  332
                          NULL shift  333
                          TRUE shift  334
                         FALSE shift  335
                        CBLOCK shift  565
                    xx_comment shift  202
                     xx_cblock shift  182
                  xx_statement shift  181
              xx_let_statement shift  183
               xx_if_statement shift  184
             xx_loop_statement shift  185
             xx_echo_statement shift  186
           xx_return_statement shift  187
          xx_require_statement shift  188
            xx_fetch_statement shift  189
            xx_fcall_statement shift  190
            xx_mcall_statement shift  191
            xx_scall_statement shift  192
            xx_unset_statement shift  193
            xx_throw_statement shift  194
          xx_declare_statement shift  195
            xx_break_statement shift  196
         xx_continue_statement shift  197
            xx_while_statement shift  198
         xx_do_while_statement shift  199
           xx_switch_statement shift  200
              xx_for_statement shift  201
            xx_empty_statement shift  203
                xx_common_expr shift  563
                 xx_mcall_expr shift  506
                 xx_fcall_expr shift  508
                 xx_scall_expr shift  510
                 xx_fetch_expr shift  512

State 646:
     (79) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 79

State 647:
     (32) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition *
          xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition * xx_class_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 32
                       COMMENT shift  650
                         CONST shift  149
                        INLINE shift  121
   xx_class_methods_definition shift  648
            xx_visibility_list shift  172
     xx_class_const_definition shift  141
    xx_class_method_definition shift  649
                 xx_visibility shift  140

State 648:
     (35) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 35
                       COMMENT shift  619
                        INLINE shift  121
            xx_visibility_list shift  172
    xx_class_method_definition shift  171
                 xx_visibility shift  140

State 649:
     (59) xx_class_methods_definition ::= xx_class_method_definition *

                     {default} reduce 59

State 650:
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                         CONST shift  144
                        INLINE shift  121
            xx_visibility_list shift  620
                 xx_visibility shift  140

State 651:
     (40) xx_class_properties_definition ::= xx_class_properties_definition xx_class_property_definition *

                     {default} reduce 40

State 652:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                         CONST shift  144
                        INLINE shift  121
            xx_visibility_list shift  653
                 xx_visibility shift  140

State 653:
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                    IDENTIFIER shift  654
                      ABSTRACT shift  122
                         FINAL shift  123
                      FUNCTION shift  621
                        INLINE shift  121
                 xx_visibility shift  115

State 654:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  655
                  BRACKET_OPEN shift  661
                        ASSIGN shift  656
   xx_class_property_shortcuts shift  671

State 655:
     (42) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 42

State 656:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  657

State 657:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  658
                  BRACKET_OPEN shift  661
   xx_class_property_shortcuts shift  659

State 658:
     (44) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 44

State 659:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  660

State 660:
     (48) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 48

State 661:
          xx_class_property_shortcuts ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_property_shortcuts ::= BRACKET_OPEN * xx_class_property_shortcuts_list BRACKET_CLOSE
          xx_class_property_shortcuts_list ::= * xx_class_property_shortcuts_list COMMA xx_class_property_shortcut
          xx_class_property_shortcuts_list ::= * xx_class_property_shortcut
          xx_class_property_shortcut ::= * IDENTIFIER
          xx_class_property_shortcut ::= * COMMENT IDENTIFIER

                    IDENTIFIER shift  667
                 BRACKET_CLOSE shift  662
                       COMMENT shift  668
xx_class_property_shortcuts_list shift  663
    xx_class_property_shortcut shift  670

State 662:
     (50) xx_class_property_shortcuts ::= BRACKET_OPEN BRACKET_CLOSE *

                      DOTCOMMA reduce 50

State 663:
          xx_class_property_shortcuts ::= BRACKET_OPEN xx_class_property_shortcuts_list * BRACKET_CLOSE
          xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list * COMMA xx_class_property_shortcut

                         COMMA shift  665
                 BRACKET_CLOSE shift  664

State 664:
     (51) xx_class_property_shortcuts ::= BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE *

                      DOTCOMMA reduce 51

State 665:
          xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list COMMA * xx_class_property_shortcut
          xx_class_property_shortcut ::= * IDENTIFIER
          xx_class_property_shortcut ::= * COMMENT IDENTIFIER

                    IDENTIFIER shift  667
                       COMMENT shift  668
    xx_class_property_shortcut shift  666

State 666:
     (52) xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list COMMA xx_class_property_shortcut *

                     {default} reduce 52

State 667:
     (54) xx_class_property_shortcut ::= IDENTIFIER *

                     {default} reduce 54

State 668:
          xx_class_property_shortcut ::= COMMENT * IDENTIFIER

                    IDENTIFIER shift  669

State 669:
     (55) xx_class_property_shortcut ::= COMMENT IDENTIFIER *

                     {default} reduce 55

State 670:
     (53) xx_class_property_shortcuts_list ::= xx_class_property_shortcut *

                     {default} reduce 53

State 671:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  672

State 672:
     (46) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 46

State 673:
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                    IDENTIFIER shift  674
                      ABSTRACT shift  122
                         FINAL shift  123
                      FUNCTION shift  173
                        INLINE shift  121
                 xx_visibility shift  115

State 674:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  675
                  BRACKET_OPEN shift  661
                        ASSIGN shift  676
   xx_class_property_shortcuts shift  681

State 675:
     (43) xx_class_property_definition ::= xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 43

State 676:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  677

State 677:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  678
                  BRACKET_OPEN shift  661
   xx_class_property_shortcuts shift  679

State 678:
     (45) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 45

State 679:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  680

State 680:
     (49) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 49

State 681:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  682

State 682:
     (47) xx_class_property_definition ::= xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 47

State 683:
     (29) xx_class_definition ::= xx_class_consts_definition *
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 29
                       COMMENT shift  652
                         CONST shift  149
                        INLINE shift  121
xx_class_properties_definition shift  684
   xx_class_methods_definition shift  687
  xx_class_property_definition shift  688
            xx_visibility_list shift  673
     xx_class_const_definition shift  141
    xx_class_method_definition shift  649
                 xx_visibility shift  140

State 684:
     (33) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition *
          xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition * xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 33
                       COMMENT shift  686
                        INLINE shift  121
   xx_class_methods_definition shift  685
  xx_class_property_definition shift  651
            xx_visibility_list shift  673
    xx_class_method_definition shift  649
                 xx_visibility shift  140

State 685:
     (36) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 36
                       COMMENT shift  619
                        INLINE shift  121
            xx_visibility_list shift  172
    xx_class_method_definition shift  171
                 xx_visibility shift  140

State 686:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                        INLINE shift  121
            xx_visibility_list shift  653
                 xx_visibility shift  140

State 687:
     (34) xx_class_definition ::= xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 34
                       COMMENT shift  619
                        INLINE shift  121
            xx_visibility_list shift  172
    xx_class_method_definition shift  171
                 xx_visibility shift  140

State 688:
     (41) xx_class_properties_definition ::= xx_class_property_definition *

                     {default} reduce 41

State 689:
     (30) xx_class_definition ::= xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  116
                     PROTECTED shift  117
                        STATIC shift  119
                       PRIVATE shift  118
                        SCOPED shift  120
                      ABSTRACT shift  122
                         FINAL shift  123
                 BRACKET_CLOSE reduce 30
                       COMMENT shift  619
                        INLINE shift  121
            xx_visibility_list shift  172
    xx_class_method_definition shift  171
                 xx_visibility shift  140

State 690:
          xx_implements_list ::= xx_implements_list COMMA * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  692
                 xx_implements shift  691

State 691:
     (23) xx_implements_list ::= xx_implements_list COMMA xx_implements *

                     {default} reduce 23

State 692:
     (25) xx_implements ::= IDENTIFIER *

                     {default} reduce 25

State 693:
     (24) xx_implements_list ::= xx_implements *

                     {default} reduce 24

State 694:
          xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  692
            xx_implements_list shift  695
                 xx_implements shift  693

State 695:
          xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  690
                  BRACKET_OPEN shift  165
                 xx_class_body shift  696

State 696:
     (14) xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 14

State 697:
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                         CLASS shift  698

State 698:
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  699

State 699:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  701
                    IMPLEMENTS shift  704
                  BRACKET_OPEN shift  165
                 xx_class_body shift  700

State 700:
     (16) xx_class_def ::= ABSTRACT CLASS IDENTIFIER xx_class_body *

                     {default} reduce 16

State 701:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  702

State 702:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  165
                 xx_class_body shift  703

State 703:
     (17) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 17

State 704:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  692
            xx_implements_list shift  705
                 xx_implements shift  693

State 705:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  690
                  BRACKET_OPEN shift  165
                 xx_class_body shift  706

State 706:
     (18) xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 18

State 707:
          xx_class_def ::= FINAL * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= FINAL * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                         CLASS shift  708

State 708:
          xx_class_def ::= FINAL CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= FINAL CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                    IDENTIFIER shift  709

State 709:
          xx_class_def ::= FINAL CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= FINAL CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  711
                  BRACKET_OPEN shift  165
                 xx_class_body shift  710

State 710:
     (19) xx_class_def ::= FINAL CLASS IDENTIFIER xx_class_body *

                     {default} reduce 19

State 711:
          xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  712

State 712:
          xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  165
                 xx_class_body shift  713

State 713:
     (20) xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 20

State 714:
      (3) xx_top_statement_list ::= xx_top_statement *

                     {default} reduce 3

