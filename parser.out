 State 0:
          program ::= * xx_language
          xx_language ::= * xx_top_statement_list
          xx_top_statement_list ::= * xx_top_statement_list xx_top_statement
          xx_top_statement_list ::= * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_interface_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_interface_def ::= * INTERFACE IDENTIFIER xx_interface_body
          xx_interface_def ::= * INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT

                     NAMESPACE shift  8
                     INTERFACE shift  11
                         CLASS shift  116
                      ABSTRACT shift  667
                         FINAL shift  677
                       COMMENT shift  523
                       program accept
                   xx_language shift  1
         xx_top_statement_list shift  2
              xx_top_statement shift  684
              xx_namespace_def shift  4
                  xx_class_def shift  5
              xx_interface_def shift  6
                    xx_comment shift  7

State 1:
      (0) program ::= xx_language *

                             $ reduce 0

State 2:
      (1) xx_language ::= xx_top_statement_list *
          xx_top_statement_list ::= xx_top_statement_list * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_interface_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_interface_def ::= * INTERFACE IDENTIFIER xx_interface_body
          xx_interface_def ::= * INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT

                             $ reduce 1
                     NAMESPACE shift  8
                     INTERFACE shift  11
                         CLASS shift  116
                      ABSTRACT shift  667
                         FINAL shift  677
                       COMMENT shift  523
              xx_top_statement shift  3
              xx_namespace_def shift  4
                  xx_class_def shift  5
              xx_interface_def shift  6
                    xx_comment shift  7

State 3:
      (2) xx_top_statement_list ::= xx_top_statement_list xx_top_statement *

                     {default} reduce 2

State 4:
      (4) xx_top_statement ::= xx_namespace_def *

                     {default} reduce 4

State 5:
      (5) xx_top_statement ::= xx_class_def *

                     {default} reduce 5

State 6:
      (6) xx_top_statement ::= xx_interface_def *

                     {default} reduce 6

State 7:
      (7) xx_top_statement ::= xx_comment *

                     {default} reduce 7

State 8:
          xx_namespace_def ::= NAMESPACE * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  9

State 9:
          xx_namespace_def ::= NAMESPACE IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  10

State 10:
      (8) xx_namespace_def ::= NAMESPACE IDENTIFIER DOTCOMMA *

                     {default} reduce 8

State 11:
          xx_interface_def ::= INTERFACE * IDENTIFIER xx_interface_body
          xx_interface_def ::= INTERFACE * IDENTIFIER EXTENDS IDENTIFIER xx_interface_body

                    IDENTIFIER shift  12

State 12:
          xx_interface_def ::= INTERFACE IDENTIFIER * xx_interface_body
          xx_interface_def ::= INTERFACE IDENTIFIER * EXTENDS IDENTIFIER xx_interface_body
          xx_interface_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_interface_body ::= * BRACKET_OPEN xx_interface_methods_definition BRACKET_CLOSE

                       EXTENDS shift  14
                  BRACKET_OPEN shift  17
             xx_interface_body shift  13

State 13:
      (9) xx_interface_def ::= INTERFACE IDENTIFIER xx_interface_body *

                     {default} reduce 9

State 14:
          xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS * IDENTIFIER xx_interface_body

                    IDENTIFIER shift  15

State 15:
          xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS IDENTIFIER * xx_interface_body
          xx_interface_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_interface_body ::= * BRACKET_OPEN xx_interface_methods_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  17
             xx_interface_body shift  16

State 16:
     (10) xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body *

                     {default} reduce 10

State 17:
          xx_interface_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_interface_body ::= BRACKET_OPEN * xx_interface_methods_definition BRACKET_CLOSE
          xx_interface_methods_definition ::= * xx_interface_methods_definition xx_interface_method_definition
          xx_interface_methods_definition ::= * xx_interface_method_definition
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE shift  18
                       COMMENT shift  98
                        INLINE shift  95
xx_interface_methods_definition shift  19
            xx_visibility_list shift  22
xx_interface_method_definition shift  115
                 xx_visibility shift  114

State 18:
     (25) xx_interface_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 25

State 19:
          xx_interface_body ::= BRACKET_OPEN xx_interface_methods_definition * BRACKET_CLOSE
          xx_interface_methods_definition ::= xx_interface_methods_definition * xx_interface_method_definition
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE shift  20
                       COMMENT shift  98
                        INLINE shift  95
            xx_visibility_list shift  22
xx_interface_method_definition shift  21
                 xx_visibility shift  114

State 20:
     (26) xx_interface_body ::= BRACKET_OPEN xx_interface_methods_definition BRACKET_CLOSE *

                     {default} reduce 26

State 21:
     (56) xx_interface_methods_definition ::= xx_interface_methods_definition xx_interface_method_definition *

                     {default} reduce 56

State 22:
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                      FUNCTION shift  23
                        INLINE shift  95
                 xx_visibility shift  89

State 23:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  24

State 24:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  25

State 25:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
             PARENTHESES_CLOSE shift  26
                    IDENTIFIER shift  63
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
             xx_parameter_list shift  55
             xx_parameter_type shift  76
             xx_parameter_cast shift  84
                  xx_parameter shift  88

State 26:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  54
                         ARROW shift  27

State 27:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                          VOID shift  30
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
         xx_method_return_type shift  28
    xx_method_return_type_list shift  31
    xx_method_return_type_item shift  53
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 28:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  29

State 29:
     (76) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 76

State 30:
     (94) xx_method_return_type ::= VOID *

                     {default} reduce 94

State 31:
     (95) xx_method_return_type ::= xx_method_return_type_list *
          xx_method_return_type_list ::= xx_method_return_type_list * BITWISE_OR xx_method_return_type_item

                    BITWISE_OR shift  32
                     {default} reduce 95

State 32:
          xx_method_return_type_list ::= xx_method_return_type_list BITWISE_OR * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
    xx_method_return_type_item shift  33
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 33:
     (96) xx_method_return_type_list ::= xx_method_return_type_list BITWISE_OR xx_method_return_type_item *

                     {default} reduce 96

State 34:
     (98) xx_method_return_type_item ::= xx_parameter_type *
          xx_method_return_type_item ::= xx_parameter_type * NOT

                           NOT shift  35
                     {default} reduce 98

State 35:
     (99) xx_method_return_type_item ::= xx_parameter_type NOT *

                     {default} reduce 99

State 36:
    (100) xx_method_return_type_item ::= xx_parameter_cast *
          xx_method_return_type_item ::= xx_parameter_cast * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  37
                     {default} reduce 100

State 37:
          xx_method_return_type_item ::= xx_parameter_cast SBRACKET_OPEN * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  38

State 38:
    (101) xx_method_return_type_item ::= xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 101

State 39:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER

                    IDENTIFIER shift  40

State 40:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER

                       GREATER shift  41

State 41:
    (112) xx_parameter_cast ::= LESS IDENTIFIER GREATER *

                     {default} reduce 112

State 42:
    (113) xx_parameter_type ::= TYPE_INTEGER *

                     {default} reduce 113

State 43:
    (114) xx_parameter_type ::= TYPE_UINTEGER *

                     {default} reduce 114

State 44:
    (115) xx_parameter_type ::= TYPE_LONG *

                     {default} reduce 115

State 45:
    (116) xx_parameter_type ::= TYPE_ULONG *

                     {default} reduce 116

State 46:
    (117) xx_parameter_type ::= TYPE_CHAR *

                     {default} reduce 117

State 47:
    (118) xx_parameter_type ::= TYPE_UCHAR *

                     {default} reduce 118

State 48:
    (119) xx_parameter_type ::= TYPE_DOUBLE *

                     {default} reduce 119

State 49:
    (120) xx_parameter_type ::= TYPE_BOOL *

                     {default} reduce 120

State 50:
    (121) xx_parameter_type ::= TYPE_STRING *

                     {default} reduce 121

State 51:
    (122) xx_parameter_type ::= TYPE_ARRAY *

                     {default} reduce 122

State 52:
    (123) xx_parameter_type ::= TYPE_VAR *

                     {default} reduce 123

State 53:
     (97) xx_method_return_type_list ::= xx_method_return_type_item *

                     {default} reduce 97

State 54:
     (80) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 80

State 55:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  61
             PARENTHESES_CLOSE shift  56

State 56:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  60
                         ARROW shift  57

State 57:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                          VOID shift  30
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
         xx_method_return_type shift  58
    xx_method_return_type_list shift  31
    xx_method_return_type_item shift  53
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 58:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  59

State 59:
     (77) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 77

State 60:
     (81) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 81

State 61:
          xx_parameter_list ::= xx_parameter_list COMMA * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                    IDENTIFIER shift  63
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
             xx_parameter_type shift  76
             xx_parameter_cast shift  84
                  xx_parameter shift  62

State 62:
    (102) xx_parameter_list ::= xx_parameter_list COMMA xx_parameter *

                     {default} reduce 102

State 63:
    (104) xx_parameter ::= IDENTIFIER *
          xx_parameter ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  64
                     {default} reduce 104

State 64:
          xx_parameter ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  65

State 65:
    (108) xx_parameter ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 108

State 66:
    (308) xx_literal_expr ::= INTEGER *

                     {default} reduce 308

State 67:
    (309) xx_literal_expr ::= CHAR *

                     {default} reduce 309

State 68:
    (310) xx_literal_expr ::= STRING *

                     {default} reduce 310

State 69:
    (311) xx_literal_expr ::= DOUBLE *

                     {default} reduce 311

State 70:
    (312) xx_literal_expr ::= NULL *

                     {default} reduce 312

State 71:
    (313) xx_literal_expr ::= FALSE *

                     {default} reduce 313

State 72:
    (314) xx_literal_expr ::= TRUE *

                     {default} reduce 314

State 73:
          xx_literal_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT

                   DOUBLECOLON shift  74

State 74:
          xx_literal_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT

                      CONSTANT shift  75

State 75:
    (315) xx_literal_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 315

State 76:
          xx_parameter ::= xx_parameter_type * IDENTIFIER
          xx_parameter ::= xx_parameter_type * NOT IDENTIFIER
          xx_parameter ::= xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= xx_parameter_type * NOT IDENTIFIER ASSIGN xx_literal_expr

                           NOT shift  80
                    IDENTIFIER shift  77

State 77:
    (105) xx_parameter ::= xx_parameter_type IDENTIFIER *
          xx_parameter ::= xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  78
                     {default} reduce 105

State 78:
          xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  79

State 79:
    (109) xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 109

State 80:
          xx_parameter ::= xx_parameter_type NOT * IDENTIFIER
          xx_parameter ::= xx_parameter_type NOT * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  81

State 81:
    (106) xx_parameter ::= xx_parameter_type NOT IDENTIFIER *
          xx_parameter ::= xx_parameter_type NOT IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  82
                     {default} reduce 106

State 82:
          xx_parameter ::= xx_parameter_type NOT IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  83

State 83:
    (110) xx_parameter ::= xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 110

State 84:
          xx_parameter ::= xx_parameter_cast * IDENTIFIER
          xx_parameter ::= xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  85

State 85:
    (107) xx_parameter ::= xx_parameter_cast IDENTIFIER *
          xx_parameter ::= xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  86
                     {default} reduce 107

State 86:
          xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  87

State 87:
    (111) xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 111

State 88:
    (103) xx_parameter_list ::= xx_parameter *

                     {default} reduce 103

State 89:
     (84) xx_visibility_list ::= xx_visibility_list xx_visibility *

                     {default} reduce 84

State 90:
     (86) xx_visibility ::= PUBLIC *

                     {default} reduce 86

State 91:
     (87) xx_visibility ::= PROTECTED *

                     {default} reduce 87

State 92:
     (88) xx_visibility ::= PRIVATE *

                     {default} reduce 88

State 93:
     (89) xx_visibility ::= STATIC *

                     {default} reduce 89

State 94:
     (90) xx_visibility ::= SCOPED *

                     {default} reduce 90

State 95:
     (91) xx_visibility ::= INLINE *

                     {default} reduce 91

State 96:
     (92) xx_visibility ::= ABSTRACT *

                     {default} reduce 92

State 97:
     (93) xx_visibility ::= FINAL *

                     {default} reduce 93

State 98:
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                        INLINE shift  95
            xx_visibility_list shift  99
                 xx_visibility shift  114

State 99:
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                      FUNCTION shift  100
                        INLINE shift  95
                 xx_visibility shift  89

State 100:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  101

State 101:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  102

State 102:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
             PARENTHESES_CLOSE shift  103
                    IDENTIFIER shift  63
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
             xx_parameter_list shift  108
             xx_parameter_type shift  76
             xx_parameter_cast shift  84
                  xx_parameter shift  88

State 103:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  107
                         ARROW shift  104

State 104:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                          VOID shift  30
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
         xx_method_return_type shift  105
    xx_method_return_type_list shift  31
    xx_method_return_type_item shift  53
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 105:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  106

State 106:
     (78) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 78

State 107:
     (82) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 82

State 108:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  61
             PARENTHESES_CLOSE shift  109

State 109:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  113
                         ARROW shift  110

State 110:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                          VOID shift  30
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
         xx_method_return_type shift  111
    xx_method_return_type_list shift  31
    xx_method_return_type_item shift  53
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 111:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  112

State 112:
     (79) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 79

State 113:
     (83) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 83

State 114:
     (85) xx_visibility_list ::= xx_visibility *

                     {default} reduce 85

State 115:
     (57) xx_interface_methods_definition ::= xx_interface_method_definition *

                     {default} reduce 57

State 116:
          xx_class_def ::= CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  117

State 117:
          xx_class_def ::= CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  119
                    IMPLEMENTS shift  664
                  BRACKET_OPEN shift  125
                 xx_class_body shift  118

State 118:
     (11) xx_class_def ::= CLASS IDENTIFIER xx_class_body *

                     {default} reduce 11

State 119:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  120

State 120:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                    IMPLEMENTS shift  122
                  BRACKET_OPEN shift  125
                 xx_class_body shift  121

State 121:
     (12) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 12

State 122:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  662
            xx_implements_list shift  123
                 xx_implements shift  663

State 123:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  660
                  BRACKET_OPEN shift  125
                 xx_class_body shift  124

State 124:
     (14) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 14

State 125:
          xx_class_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_body ::= BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE shift  126
                       COMMENT shift  621
                         CONST shift  615
                        INLINE shift  95
           xx_class_definition shift  127
xx_class_properties_definition shift  129
    xx_class_consts_definition shift  653
   xx_class_methods_definition shift  659
  xx_class_property_definition shift  658
            xx_visibility_list shift  642
     xx_class_const_definition shift  652
    xx_class_method_definition shift  608
                 xx_visibility shift  114

State 126:
     (20) xx_class_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 20

State 127:
          xx_class_body ::= BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  128

State 128:
     (21) xx_class_body ::= BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 21

State 129:
     (27) xx_class_definition ::= xx_class_properties_definition *
          xx_class_definition ::= xx_class_properties_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 27
                       COMMENT shift  621
                         CONST shift  615
                        INLINE shift  95
    xx_class_consts_definition shift  605
   xx_class_methods_definition shift  130
  xx_class_property_definition shift  620
            xx_visibility_list shift  642
     xx_class_const_definition shift  652
    xx_class_method_definition shift  608
                 xx_visibility shift  114

State 130:
     (30) xx_class_definition ::= xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 30
                       COMMENT shift  577
                        INLINE shift  95
            xx_visibility_list shift  132
    xx_class_method_definition shift  131
                 xx_visibility shift  114

State 131:
     (54) xx_class_methods_definition ::= xx_class_methods_definition xx_class_method_definition *

                     {default} reduce 54

State 132:
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                      FUNCTION shift  133
                        INLINE shift  95
                 xx_visibility shift  89

State 133:
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  134

State 134:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  135

State 135:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
             PARENTHESES_CLOSE shift  136
                    IDENTIFIER shift  63
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
             xx_parameter_list shift  565
             xx_parameter_type shift  76
             xx_parameter_cast shift  84
                  xx_parameter shift  88

State 136:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  137
                         ARROW shift  559

State 137:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  138
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  139
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 138:
     (60) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 60

State 139:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  140
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 140:
     (62) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 62

State 141:
    (124) xx_statement_list ::= xx_statement_list xx_statement *

                     {default} reduce 124

State 142:
    (126) xx_statement ::= xx_let_statement *

                     {default} reduce 126

State 143:
    (127) xx_statement ::= xx_if_statement *

                     {default} reduce 127

State 144:
    (128) xx_statement ::= xx_loop_statement *

                     {default} reduce 128

State 145:
    (129) xx_statement ::= xx_echo_statement *

                     {default} reduce 129

State 146:
    (130) xx_statement ::= xx_return_statement *

                     {default} reduce 130

State 147:
    (131) xx_statement ::= xx_fetch_statement *

                     {default} reduce 131

State 148:
    (132) xx_statement ::= xx_fcall_statement *

                     {default} reduce 132

State 149:
    (133) xx_statement ::= xx_mcall_statement *

                     {default} reduce 133

State 150:
    (134) xx_statement ::= xx_scall_statement *

                     {default} reduce 134

State 151:
    (135) xx_statement ::= xx_unset_statement *

                     {default} reduce 135

State 152:
    (136) xx_statement ::= xx_throw_statement *

                     {default} reduce 136

State 153:
    (137) xx_statement ::= xx_declare_statement *

                     {default} reduce 137

State 154:
    (138) xx_statement ::= xx_break_statement *

                     {default} reduce 138

State 155:
    (139) xx_statement ::= xx_continue_statement *

                     {default} reduce 139

State 156:
    (140) xx_statement ::= xx_while_statement *

                     {default} reduce 140

State 157:
    (141) xx_statement ::= xx_do_while_statement *

                     {default} reduce 141

State 158:
    (142) xx_statement ::= xx_switch_statement *

                     {default} reduce 142

State 159:
    (143) xx_statement ::= xx_for_statement *

                     {default} reduce 143

State 160:
    (144) xx_statement ::= xx_comment *

                     {default} reduce 144

State 161:
    (145) xx_statement ::= xx_empty_statement *

                     {default} reduce 145

State 162:
    (146) xx_empty_statement ::= DOTCOMMA *

                     {default} reduce 146

State 163:
          xx_break_statement ::= BREAK * DOTCOMMA

                      DOTCOMMA shift  164

State 164:
    (147) xx_break_statement ::= BREAK DOTCOMMA *

                     {default} reduce 147

State 165:
          xx_continue_statement ::= CONTINUE * DOTCOMMA

                      DOTCOMMA shift  166

State 166:
    (148) xx_continue_statement ::= CONTINUE DOTCOMMA *

                     {default} reduce 148

State 167:
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                  xx_eval_expr shift  168
                xx_common_expr shift  376
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 168:
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  169

State 169:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  553
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  170
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 170:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  171
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 171:
    (151) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE

                          ELSE shift  172
                     {default} reduce 151

State 172:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  173

State 173:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  552
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  174
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 174:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  175
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 175:
    (152) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 152

State 176:
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                  xx_eval_expr shift  177
                xx_common_expr shift  376
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 177:
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN xx_case_clauses BRACKET_CLOSE

                  BRACKET_OPEN shift  178

State 178:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * xx_case_clauses BRACKET_CLOSE
          xx_case_clauses ::= * xx_case_clauses xx_case_clause
          xx_case_clauses ::= * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  179
                          CASE shift  183
                       DEFAULT shift  548
               xx_case_clauses shift  180
                xx_case_clause shift  551

State 179:
    (155) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 155

State 180:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses * BRACKET_CLOSE
          xx_case_clauses ::= xx_case_clauses * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  181
                          CASE shift  183
                       DEFAULT shift  548
                xx_case_clause shift  182

State 181:
    (156) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE *

                     {default} reduce 156

State 182:
    (157) xx_case_clauses ::= xx_case_clauses xx_case_clause *

                     {default} reduce 157

State 183:
          xx_case_clause ::= CASE * xx_literal_expr COLON
          xx_case_clause ::= CASE * xx_literal_expr COLON xx_statement_list
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  184

State 184:
          xx_case_clause ::= CASE xx_literal_expr * COLON
          xx_case_clause ::= CASE xx_literal_expr * COLON xx_statement_list

                         COLON shift  185

State 185:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (159) xx_case_clause ::= CASE xx_literal_expr COLON *
          xx_case_clause ::= CASE xx_literal_expr COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  186
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459
                     {default} reduce 159

State 186:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (160) xx_case_clause ::= CASE xx_literal_expr COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459
                     {default} reduce 160

State 187:
          xx_loop_statement ::= LOOP * BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  188

State 188:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  547
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  189
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 189:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  190
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 190:
    (163) xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 163

State 191:
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                  xx_eval_expr shift  192
                xx_common_expr shift  376
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 192:
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  193

State 193:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  546
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  194
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 194:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  195
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 195:
    (165) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 165

State 196:
          xx_do_while_statement ::= DO * BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO * BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA

                  BRACKET_OPEN shift  197

State 197:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  542
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  198
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 198:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  199
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 199:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  200

State 200:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                  xx_eval_expr shift  201
                xx_common_expr shift  376
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 201:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  202

State 202:
    (167) xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 167

State 203:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= NOT * xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  204
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 204:
    (225) xx_common_expr ::= NOT xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 225

State 205:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr EQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  375
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 206:
          xx_common_expr ::= ISSET * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_isset_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE

                    IDENTIFIER shift  208
                 xx_isset_expr shift  207

State 207:
    (226) xx_common_expr ::= ISSET xx_isset_expr *

                     {default} reduce 226

State 208:
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_isset_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE

                         ARROW shift  368
                 SBRACKET_OPEN shift  209

State 209:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  366
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 210:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= REQUIRE * xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  211
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 211:
    (227) xx_common_expr ::= REQUIRE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 227

State 212:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr NOTEQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  365
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 213:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= CLONE * xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  214
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 214:
    (228) xx_common_expr ::= CLONE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 228

State 215:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr IDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  364
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 216:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= EMPTY * xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  217
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 217:
    (229) xx_common_expr ::= EMPTY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 229

State 218:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr NOTIDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  363
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 219:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= LIKELY * xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  220
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 220:
    (230) xx_common_expr ::= LIKELY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 230

State 221:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= xx_common_expr LESS * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  362
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 222:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= UNLIKELY * xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  223
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 223:
    (231) xx_common_expr ::= UNLIKELY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 231

State 224:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr GREATER * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  225
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 225:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
    (237) xx_common_expr ::= xx_common_expr GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 237

State 226:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr LESSEQUAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  227
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 227:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
    (238) xx_common_expr ::= xx_common_expr LESSEQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 238

State 228:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr GREATEREQUAL * xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  229
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 229:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (239) xx_common_expr ::= xx_common_expr GREATEREQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 239

State 230:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= xx_common_expr ADD * xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  231
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 231:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
    (249) xx_common_expr ::= xx_common_expr ADD xx_common_expr *
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 249

State 232:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= xx_common_expr SUB * xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  233
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 233:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
    (250) xx_common_expr ::= xx_common_expr SUB xx_common_expr *
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 250

State 234:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= xx_common_expr MUL * xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  235
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 235:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
    (251) xx_common_expr ::= xx_common_expr MUL xx_common_expr *
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 251

State 236:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= xx_common_expr DIV * xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  237
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 237:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
    (252) xx_common_expr ::= xx_common_expr DIV xx_common_expr *
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 252

State 238:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= xx_common_expr MOD * xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  239
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 239:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
    (253) xx_common_expr ::= xx_common_expr MOD xx_common_expr *
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 253

State 240:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr CONCAT * xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  241
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 241:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (254) xx_common_expr ::= xx_common_expr CONCAT xx_common_expr *
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 254

State 242:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= xx_common_expr AND * xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  243
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 243:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
    (255) xx_common_expr ::= xx_common_expr AND xx_common_expr *
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 255

State 244:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= xx_common_expr OR * xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  245
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 245:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (256) xx_common_expr ::= xx_common_expr OR xx_common_expr *
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 256

State 246:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_common_expr ::= xx_common_expr INSTANCEOF * xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  247
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 247:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (257) xx_common_expr ::= xx_common_expr INSTANCEOF xx_common_expr *

                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 257

State 248:
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= PARENTHESES_OPEN * xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN * xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
             xx_parameter_type shift  251
                xx_common_expr shift  249
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 249:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_common_expr * PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
             PARENTHESES_CLOSE shift  250

State 250:
    (240) xx_common_expr ::= PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE *

                     {default} reduce 240

State 251:
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type * PARENTHESES_CLOSE xx_common_expr

             PARENTHESES_CLOSE shift  252

State 252:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE * xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  253
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 253:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (241) xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                     {default} reduce 241

State 254:
          xx_common_expr ::= LESS * IDENTIFIER GREATER xx_common_expr

                    IDENTIFIER shift  255

State 255:
          xx_common_expr ::= LESS IDENTIFIER * GREATER xx_common_expr

                       GREATER shift  256

State 256:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= LESS IDENTIFIER GREATER * xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  257
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 257:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (242) xx_common_expr ::= LESS IDENTIFIER GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 242

State 258:
          xx_common_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_common_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
          xx_common_expr ::= IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
    (262) xx_common_expr ::= IDENTIFIER *
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  330
                         ARROW shift  259
                 SBRACKET_OPEN shift  327
                   DOUBLECOLON shift  281
                     {default} reduce 262

State 259:
          xx_common_expr ::= IDENTIFIER ARROW * IDENTIFIER
          xx_common_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  260
                  BRACKET_OPEN shift  349

State 260:
    (243) xx_common_expr ::= IDENTIFIER ARROW IDENTIFIER *
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  261
                     {default} reduce 243

State 261:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  348
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  346
             xx_call_parameter shift  301

State 262:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (299) xx_call_parameter ::= xx_common_expr *

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 299

State 263:
          xx_fetch_expr ::= FETCH * IDENTIFIER COMMA xx_isset_expr

                    IDENTIFIER shift  264

State 264:
          xx_fetch_expr ::= FETCH IDENTIFIER * COMMA xx_isset_expr

                         COMMA shift  265

State 265:
          xx_fetch_expr ::= FETCH IDENTIFIER COMMA * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_isset_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE

                    IDENTIFIER shift  208
                 xx_isset_expr shift  266

State 266:
    (258) xx_fetch_expr ::= FETCH IDENTIFIER COMMA xx_isset_expr *

                     {default} reduce 258

State 267:
    (259) xx_common_expr ::= xx_fetch_expr *

                     {default} reduce 259

State 268:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= TYPEOF * xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  269
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 269:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (260) xx_common_expr ::= TYPEOF xx_common_expr *

                     {default} reduce 260

State 270:
    (261) xx_common_expr ::= CONSTANT *

                     {default} reduce 261

State 271:
    (263) xx_common_expr ::= INTEGER *

                     {default} reduce 263

State 272:
    (264) xx_common_expr ::= STRING *

                     {default} reduce 264

State 273:
    (265) xx_common_expr ::= CHAR *

                     {default} reduce 265

State 274:
    (266) xx_common_expr ::= DOUBLE *

                     {default} reduce 266

State 275:
    (267) xx_common_expr ::= NULL *

                     {default} reduce 267

State 276:
    (268) xx_common_expr ::= TRUE *

                     {default} reduce 268

State 277:
    (269) xx_common_expr ::= FALSE *

                     {default} reduce 269

State 278:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_array_list ::= * xx_array_list COMMA xx_array_item
          xx_array_list ::= * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  280
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                SBRACKET_CLOSE shift  336
                        STRING shift  335
                       INTEGER shift  334
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  279
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
                 xx_array_list shift  337
                 xx_array_item shift  345
                  xx_array_key shift  341
                xx_array_value shift  344

State 279:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (307) xx_array_value ::= xx_common_expr *

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 307

State 280:
          xx_common_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_common_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
          xx_common_expr ::= IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
    (262) xx_common_expr ::= IDENTIFIER *
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
    (304) xx_array_key ::= IDENTIFIER *

              PARENTHESES_OPEN shift  330
                         ARROW shift  259
                 SBRACKET_OPEN shift  327
                         COLON reduce 304
                   DOUBLECOLON shift  281
                     {default} reduce 262

State 281:
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  282
                      CONSTANT shift  326

State 282:
    (246) xx_common_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER *
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  283
                     {default} reduce 246

State 283:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  325
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  323
             xx_call_parameter shift  301

State 284:
          xx_common_expr ::= NEW * IDENTIFIER
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  285
                  BRACKET_OPEN shift  316

State 285:
    (272) xx_common_expr ::= NEW IDENTIFIER *
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  286
                     {default} reduce 272

State 286:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  287
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  288
             xx_call_parameter shift  301

State 287:
    (273) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 273

State 288:
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  289

State 289:
    (274) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 274

State 290:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= xx_call_parameters COMMA * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
             xx_call_parameter shift  315

State 291:
          xx_fcall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  292

State 292:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  293

State 293:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  294
                   DOUBLECOLON shift  302

State 294:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  297
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  295
             xx_call_parameter shift  301

State 295:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  296

State 296:
    (280) xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 280

State 297:
    (281) xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 281

State 298:
    (294) xx_common_expr ::= xx_mcall_expr *

                     {default} reduce 294

State 299:
    (295) xx_common_expr ::= xx_scall_expr *

                     {default} reduce 295

State 300:
    (296) xx_common_expr ::= xx_fcall_expr *

                     {default} reduce 296

State 301:
    (298) xx_call_parameters ::= xx_call_parameter *

                     {default} reduce 298

State 302:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  303
                  BRACKET_OPEN shift  308

State 303:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  304

State 304:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  307
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  305
             xx_call_parameter shift  301

State 305:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  306

State 306:
    (284) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 284

State 307:
    (285) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 285

State 308:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  309

State 309:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  310

State 310:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  311

State 311:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  314
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  312
             xx_call_parameter shift  301

State 312:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  313

State 313:
    (286) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 286

State 314:
    (287) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 287

State 315:
    (297) xx_call_parameters ::= xx_call_parameters COMMA xx_call_parameter *

                     {default} reduce 297

State 316:
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  317

State 317:
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  318

State 318:
    (275) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE *
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  319
                     {default} reduce 275

State 319:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  320
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  321
             xx_call_parameter shift  301

State 320:
    (276) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 276

State 321:
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  322

State 322:
    (277) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 277

State 323:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  324

State 324:
    (282) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 282

State 325:
    (283) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 283

State 326:
    (247) xx_common_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 247

State 327:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  328
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 328:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                SBRACKET_CLOSE shift  329

State 329:
    (248) xx_common_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE *

                     {default} reduce 248

State 330:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  333
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  331
             xx_call_parameter shift  301

State 331:
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  332

State 332:
    (278) xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 278

State 333:
    (279) xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 279

State 334:
    (263) xx_common_expr ::= INTEGER *
    (306) xx_array_key ::= INTEGER *

                         COLON reduce 306
                     {default} reduce 263

State 335:
    (264) xx_common_expr ::= STRING *
    (305) xx_array_key ::= STRING *

                         COLON reduce 305
                     {default} reduce 264

State 336:
    (270) xx_common_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 270

State 337:
          xx_common_expr ::= SBRACKET_OPEN xx_array_list * SBRACKET_CLOSE
          xx_array_list ::= xx_array_list * COMMA xx_array_item

                         COMMA shift  339
                SBRACKET_CLOSE shift  338

State 338:
    (271) xx_common_expr ::= SBRACKET_OPEN xx_array_list SBRACKET_CLOSE *

                     {default} reduce 271

State 339:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_array_list ::= xx_array_list COMMA * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  280
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  335
                       INTEGER shift  334
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  279
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
                 xx_array_item shift  340
                  xx_array_key shift  341
                xx_array_value shift  344

State 340:
    (300) xx_array_list ::= xx_array_list COMMA xx_array_item *

                     {default} reduce 300

State 341:
          xx_array_item ::= xx_array_key * COLON xx_array_value

                         COLON shift  342

State 342:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_array_item ::= xx_array_key COLON * xx_array_value
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  279
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
                xx_array_value shift  343

State 343:
    (302) xx_array_item ::= xx_array_key COLON xx_array_value *

                     {default} reduce 302

State 344:
    (303) xx_array_item ::= xx_array_value *

                     {default} reduce 303

State 345:
    (301) xx_array_list ::= xx_array_item *

                     {default} reduce 301

State 346:
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  347

State 347:
    (288) xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 288

State 348:
    (289) xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 289

State 349:
          xx_common_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  350
                        STRING shift  356

State 350:
          xx_common_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  351

State 351:
    (244) xx_common_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE *
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  352
                     {default} reduce 244

State 352:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  355
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  353
             xx_call_parameter shift  301

State 353:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  354

State 354:
    (290) xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 290

State 355:
    (291) xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 291

State 356:
          xx_common_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  357

State 357:
    (245) xx_common_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE *
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  358
                     {default} reduce 245

State 358:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
             PARENTHESES_CLOSE shift  361
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  262
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267
            xx_call_parameters shift  359
             xx_call_parameter shift  301

State 359:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  290
             PARENTHESES_CLOSE shift  360

State 360:
    (292) xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 292

State 361:
    (293) xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 293

State 362:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
    (236) xx_common_expr ::= xx_common_expr LESS xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 236

State 363:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
    (235) xx_common_expr ::= xx_common_expr NOTIDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 235

State 364:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
    (234) xx_common_expr ::= xx_common_expr IDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 234

State 365:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
    (233) xx_common_expr ::= xx_common_expr NOTEQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 233

State 366:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                SBRACKET_CLOSE shift  367

State 367:
    (316) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE *

                     {default} reduce 316

State 368:
          xx_isset_expr ::= IDENTIFIER ARROW * IDENTIFIER
          xx_isset_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE

                    IDENTIFIER shift  369
                  BRACKET_OPEN shift  370

State 369:
    (317) xx_isset_expr ::= IDENTIFIER ARROW IDENTIFIER *

                     {default} reduce 317

State 370:
          xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE

                    IDENTIFIER shift  371
                        STRING shift  373

State 371:
          xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE

                 BRACKET_CLOSE shift  372

State 372:
    (318) xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE *

                     {default} reduce 318

State 373:
          xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE

                 BRACKET_CLOSE shift  374

State 374:
    (319) xx_isset_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE *

                     {default} reduce 319

State 375:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
    (232) xx_common_expr ::= xx_common_expr EQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 232

State 376:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (320) xx_eval_expr ::= xx_common_expr *

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 320

State 377:
          xx_for_statement ::= FOR * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  378

State 378:
          xx_for_statement ::= FOR IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         COMMA shift  530
                            IN shift  379

State 379:
          xx_for_statement ::= FOR IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                       REVERSE shift  525
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  380
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 380:
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                  BRACKET_OPEN shift  381

State 381:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  382
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 382:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  383
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 383:
    (168) xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 168

State 384:
          xx_let_statement ::= LET * xx_let_assignments DOTCOMMA
          xx_let_assignments ::= * xx_let_assignments COMMA xx_let_assignment
          xx_let_assignments ::= * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER DECR
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  389
            xx_let_assignments shift  385
             xx_let_assignment shift  445

State 385:
          xx_let_statement ::= LET xx_let_assignments * DOTCOMMA
          xx_let_assignments ::= xx_let_assignments * COMMA xx_let_assignment

                         COMMA shift  387
                      DOTCOMMA shift  386

State 386:
    (172) xx_let_statement ::= LET xx_let_assignments DOTCOMMA *

                     {default} reduce 172

State 387:
          xx_let_assignments ::= xx_let_assignments COMMA * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER DECR
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  389
             xx_let_assignment shift  388

State 388:
    (173) xx_let_assignments ::= xx_let_assignments COMMA xx_let_assignment *

                     {default} reduce 173

State 389:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER INCR
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER DECR
          xx_let_assignment ::= IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER * DECR

                        ASSIGN shift  390
                         ARROW shift  399
                 SBRACKET_OPEN shift  435
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
                   DOUBLECOLON shift  423
                          INCR shift  443
                          DECR shift  444
        xx_assignment_operator shift  396

State 390:
    (175) xx_assignment_operator ::= ASSIGN *

                     {default} reduce 175

State 391:
    (176) xx_assignment_operator ::= ADDASSIGN *

                     {default} reduce 176

State 392:
    (177) xx_assignment_operator ::= SUBASSIGN *

                     {default} reduce 177

State 393:
    (178) xx_assignment_operator ::= MULASSIGN *

                     {default} reduce 178

State 394:
    (179) xx_assignment_operator ::= DIVASSIGN *

                     {default} reduce 179

State 395:
    (180) xx_assignment_operator ::= CONCATASSIGN *

                     {default} reduce 180

State 396:
          xx_let_assignment ::= IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  397
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 397:
    (181) xx_let_assignment ::= IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 181

State 398:
    (224) xx_assign_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 224

State 399:
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER INCR
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER DECR

                    IDENTIFIER shift  400
                  BRACKET_OPEN shift  414

State 400:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * DECR

                        ASSIGN shift  390
                 SBRACKET_OPEN shift  403
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
                          INCR shift  412
                          DECR shift  413
        xx_assignment_operator shift  401

State 401:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  402
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 402:
    (182) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 182

State 403:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                SBRACKET_CLOSE shift  404
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  411
                 xx_index_expr shift  407
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 404:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  405

State 405:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  406
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 406:
    (185) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 185

State 407:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  408

State 408:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  409

State 409:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  410
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 410:
    (186) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 186

State 411:
    (196) xx_index_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                SBRACKET_CLOSE reduce 196

State 412:
    (192) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER INCR *

                     {default} reduce 192

State 413:
    (193) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER DECR *

                     {default} reduce 193

State 414:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  415
                        STRING shift  419

State 415:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  416

State 416:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  417

State 417:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  418
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 418:
    (183) xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 183

State 419:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  420

State 420:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  421

State 421:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  422
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 422:
    (184) xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 184

State 423:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  424

State 424:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                 SBRACKET_OPEN shift  427
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  425

State 425:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  426
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 426:
    (187) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 187

State 427:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                SBRACKET_CLOSE shift  428
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  411
                 xx_index_expr shift  431
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 428:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  429

State 429:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  430
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 430:
    (188) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 188

State 431:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  432

State 432:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  433

State 433:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  434
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 434:
    (189) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 189

State 435:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                SBRACKET_CLOSE shift  436
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  411
                 xx_index_expr shift  439
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 436:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  437

State 437:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  438
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 438:
    (190) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 190

State 439:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  440

State 440:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  390
                     ADDASSIGN shift  391
                     SUBASSIGN shift  392
                     MULASSIGN shift  393
                     DIVASSIGN shift  394
                  CONCATASSIGN shift  395
        xx_assignment_operator shift  441

State 441:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  398
                xx_assign_expr shift  442
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 442:
    (191) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 191

State 443:
    (194) xx_let_assignment ::= IDENTIFIER INCR *

                     {default} reduce 194

State 444:
    (195) xx_let_assignment ::= IDENTIFIER DECR *

                     {default} reduce 195

State 445:
    (174) xx_let_assignments ::= xx_let_assignment *

                     {default} reduce 174

State 446:
          xx_echo_statement ::= ECHO * xx_echo_expressions DOTCOMMA
          xx_echo_expressions ::= * xx_echo_expressions COMMA xx_echo_expression
          xx_echo_expressions ::= * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  451
           xx_echo_expressions shift  447
            xx_echo_expression shift  452
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 447:
          xx_echo_statement ::= ECHO xx_echo_expressions * DOTCOMMA
          xx_echo_expressions ::= xx_echo_expressions * COMMA xx_echo_expression

                         COMMA shift  449
                      DOTCOMMA shift  448

State 448:
    (197) xx_echo_statement ::= ECHO xx_echo_expressions DOTCOMMA *

                     {default} reduce 197

State 449:
          xx_echo_expressions ::= xx_echo_expressions COMMA * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  451
            xx_echo_expression shift  450
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 450:
    (198) xx_echo_expressions ::= xx_echo_expressions COMMA xx_echo_expression *

                     {default} reduce 198

State 451:
    (200) xx_echo_expression ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                     {default} reduce 200

State 452:
    (199) xx_echo_expressions ::= xx_echo_expression *

                     {default} reduce 199

State 453:
          xx_mcall_statement ::= xx_mcall_expr * DOTCOMMA

                      DOTCOMMA shift  454

State 454:
    (201) xx_mcall_statement ::= xx_mcall_expr DOTCOMMA *

                     {default} reduce 201

State 455:
          xx_fcall_statement ::= xx_fcall_expr * DOTCOMMA

                      DOTCOMMA shift  456

State 456:
    (202) xx_fcall_statement ::= xx_fcall_expr DOTCOMMA *

                     {default} reduce 202

State 457:
          xx_scall_statement ::= xx_scall_expr * DOTCOMMA

                      DOTCOMMA shift  458

State 458:
    (203) xx_scall_statement ::= xx_scall_expr DOTCOMMA *

                     {default} reduce 203

State 459:
          xx_fetch_statement ::= xx_fetch_expr * DOTCOMMA

                      DOTCOMMA shift  460

State 460:
    (204) xx_fetch_statement ::= xx_fetch_expr DOTCOMMA *

                     {default} reduce 204

State 461:
          xx_return_statement ::= RETURN * xx_common_expr DOTCOMMA
          xx_return_statement ::= RETURN * DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                      DOTCOMMA shift  464
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  462
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 462:
          xx_return_statement ::= RETURN xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                      DOTCOMMA shift  463

State 463:
    (205) xx_return_statement ::= RETURN xx_common_expr DOTCOMMA *

                     {default} reduce 205

State 464:
    (206) xx_return_statement ::= RETURN DOTCOMMA *

                     {default} reduce 206

State 465:
          xx_unset_statement ::= UNSET * IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  466

State 466:
          xx_unset_statement ::= UNSET IDENTIFIER * ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA

                         ARROW shift  467
                 SBRACKET_OPEN shift  470

State 467:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  468

State 468:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  469

State 469:
    (207) xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA *

                     {default} reduce 207

State 470:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  471
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 471:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                SBRACKET_CLOSE shift  472

State 472:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  473

State 473:
    (208) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 208

State 474:
          xx_throw_statement ::= THROW * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  475
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 475:
          xx_throw_statement ::= THROW xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                      DOTCOMMA shift  476

State 476:
    (209) xx_throw_statement ::= THROW xx_common_expr DOTCOMMA *

                     {default} reduce 209

State 477:
          xx_declare_statement ::= TYPE_INTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  478
           xx_declare_variable shift  485

State 478:
          xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  479

State 479:
    (210) xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 210

State 480:
          xx_declare_variable_list ::= xx_declare_variable_list COMMA * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
           xx_declare_variable shift  481

State 481:
    (220) xx_declare_variable_list ::= xx_declare_variable_list COMMA xx_declare_variable *

                     {default} reduce 220

State 482:
    (222) xx_declare_variable ::= IDENTIFIER *
          xx_declare_variable ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  483
                     {default} reduce 222

State 483:
          xx_declare_variable ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  484

State 484:
    (223) xx_declare_variable ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 223

State 485:
    (221) xx_declare_variable_list ::= xx_declare_variable *

                     {default} reduce 221

State 486:
          xx_declare_statement ::= TYPE_UINTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  487
           xx_declare_variable shift  485

State 487:
          xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  488

State 488:
    (211) xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 211

State 489:
          xx_declare_statement ::= TYPE_CHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  490
           xx_declare_variable shift  485

State 490:
          xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  491

State 491:
    (212) xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 212

State 492:
          xx_declare_statement ::= TYPE_UCHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  493
           xx_declare_variable shift  485

State 493:
          xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  494

State 494:
    (213) xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 213

State 495:
          xx_declare_statement ::= TYPE_LONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  496
           xx_declare_variable shift  485

State 496:
          xx_declare_statement ::= TYPE_LONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  497

State 497:
    (214) xx_declare_statement ::= TYPE_LONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 214

State 498:
          xx_declare_statement ::= TYPE_ULONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  499
           xx_declare_variable shift  485

State 499:
          xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  500

State 500:
    (215) xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 215

State 501:
          xx_declare_statement ::= TYPE_DOUBLE * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  502
           xx_declare_variable shift  485

State 502:
          xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  503

State 503:
    (216) xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list DOTCOMMA *

                     {default} reduce 216

State 504:
          xx_declare_statement ::= TYPE_STRING * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  505
           xx_declare_variable shift  485

State 505:
          xx_declare_statement ::= TYPE_STRING xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  506

State 506:
    (217) xx_declare_statement ::= TYPE_STRING xx_declare_variable_list DOTCOMMA *

                     {default} reduce 217

State 507:
          xx_declare_statement ::= TYPE_BOOL * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  508
           xx_declare_variable shift  485

State 508:
          xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  509

State 509:
    (218) xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list DOTCOMMA *

                     {default} reduce 218

State 510:
          xx_declare_statement ::= TYPE_VAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  482
      xx_declare_variable_list shift  511
           xx_declare_variable shift  485

State 511:
          xx_declare_statement ::= TYPE_VAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  480
                      DOTCOMMA shift  512

State 512:
    (219) xx_declare_statement ::= TYPE_VAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 219

State 513:
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  330
                         ARROW shift  516
                   DOUBLECOLON shift  514

State 514:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  515

State 515:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  283

State 516:
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  517
                  BRACKET_OPEN shift  518

State 517:
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  261

State 518:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  519
                        STRING shift  521

State 519:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  520

State 520:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  352

State 521:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  522

State 522:
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  358

State 523:
    (321) xx_comment ::= COMMENT *

                     {default} reduce 321

State 524:
    (125) xx_statement_list ::= xx_statement *

                     {default} reduce 125

State 525:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  526
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 526:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                  BRACKET_OPEN shift  527

State 527:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  528
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 528:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  529
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 529:
    (169) xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 169

State 530:
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  531

State 531:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                            IN shift  532

State 532:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                       REVERSE shift  537
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  533
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 533:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                  BRACKET_OPEN shift  534

State 534:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  535
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 535:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  536
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 536:
    (170) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 170

State 537:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                xx_common_expr shift  538
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 538:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr

                    INSTANCEOF shift  246
                           AND shift  242
                            OR shift  244
                        EQUALS shift  205
                     IDENTICAL shift  215
                          LESS shift  221
                       GREATER shift  224
                     LESSEQUAL shift  226
                  GREATEREQUAL shift  228
                  NOTIDENTICAL shift  218
                     NOTEQUALS shift  212
                           ADD shift  230
                           SUB shift  232
                        CONCAT shift  240
                           MUL shift  234
                           DIV shift  236
                           MOD shift  238
                  BRACKET_OPEN shift  539

State 539:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  540
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 540:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  541
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 541:
    (171) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 171

State 542:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  543

State 543:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  210
                        LIKELY shift  219
                      UNLIKELY shift  222
                         CLONE shift  213
                         EMPTY shift  216
                          LESS shift  254
                         ISSET shift  206
                         FETCH shift  263
                        TYPEOF shift  268
                           NEW shift  284
                           NOT shift  203
                    IDENTIFIER shift  258
                  BRACKET_OPEN shift  291
                      CONSTANT shift  270
              PARENTHESES_OPEN shift  248
                 SBRACKET_OPEN shift  278
                        STRING shift  272
                       INTEGER shift  271
                          CHAR shift  273
                        DOUBLE shift  274
                          NULL shift  275
                          TRUE shift  276
                         FALSE shift  277
                  xx_eval_expr shift  544
                xx_common_expr shift  376
                 xx_mcall_expr shift  298
                 xx_fcall_expr shift  300
                 xx_scall_expr shift  299
                 xx_fetch_expr shift  267

State 544:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  545

State 545:
    (166) xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 166

State 546:
    (164) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 164

State 547:
    (162) xx_loop_statement ::= LOOP BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 162

State 548:
          xx_case_clause ::= DEFAULT * COLON xx_statement_list

                         COLON shift  549

State 549:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_case_clause ::= DEFAULT COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  550
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 550:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (161) xx_case_clause ::= DEFAULT COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459
                     {default} reduce 161

State 551:
    (158) xx_case_clauses ::= xx_case_clause *

                     {default} reduce 158

State 552:
    (153) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 153

State 553:
    (149) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                          ELSE shift  554
                     {default} reduce 149

State 554:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  555

State 555:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  558
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  556
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 556:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  557
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 557:
    (154) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 154

State 558:
    (150) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 150

State 559:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                          VOID shift  30
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
         xx_method_return_type shift  560
    xx_method_return_type_list shift  31
    xx_method_return_type_item shift  53
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 560:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  561

State 561:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  562
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  563
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 562:
     (68) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 68

State 563:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  564
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 564:
     (70) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 70

State 565:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  61
             PARENTHESES_CLOSE shift  566

State 566:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  567
                         ARROW shift  571

State 567:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  568
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  569
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 568:
     (61) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 61

State 569:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  570
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 570:
     (63) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 63

State 571:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                          VOID shift  30
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
         xx_method_return_type shift  572
    xx_method_return_type_list shift  31
    xx_method_return_type_item shift  53
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 572:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  573

State 573:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  574
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  575
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 574:
     (69) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 69

State 575:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  576
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 576:
     (71) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 71

State 577:
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                        INLINE shift  95
            xx_visibility_list shift  578
                 xx_visibility shift  114

State 578:
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                      FUNCTION shift  579
                        INLINE shift  95
                 xx_visibility shift  89

State 579:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  580

State 580:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  581

State 581:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
             PARENTHESES_CLOSE shift  582
                    IDENTIFIER shift  63
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
             xx_parameter_list shift  593
             xx_parameter_type shift  76
             xx_parameter_cast shift  84
                  xx_parameter shift  88

State 582:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  583
                         ARROW shift  587

State 583:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  584
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  585
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 584:
     (64) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 64

State 585:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  586
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 586:
     (66) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 66

State 587:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                          VOID shift  30
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
         xx_method_return_type shift  588
    xx_method_return_type_list shift  31
    xx_method_return_type_item shift  53
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 588:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  589

State 589:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  590
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  591
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 590:
     (72) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 72

State 591:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  592
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 592:
     (74) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 74

State 593:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  61
             PARENTHESES_CLOSE shift  594

State 594:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  595
                         ARROW shift  599

State 595:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  596
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  597
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 596:
     (65) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 65

State 597:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  598
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 598:
     (67) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 67

State 599:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast SBRACKET_OPEN SBRACKET_CLOSE
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  39
                          VOID shift  30
                  TYPE_INTEGER shift  42
                 TYPE_UINTEGER shift  43
                     TYPE_LONG shift  44
                    TYPE_ULONG shift  45
                     TYPE_CHAR shift  46
                    TYPE_UCHAR shift  47
                   TYPE_DOUBLE shift  48
                     TYPE_BOOL shift  49
                   TYPE_STRING shift  50
                    TYPE_ARRAY shift  51
                      TYPE_VAR shift  52
         xx_method_return_type shift  600
    xx_method_return_type_list shift  31
    xx_method_return_type_item shift  53
             xx_parameter_type shift  34
             xx_parameter_cast shift  36

State 600:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  601

State 601:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  602
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
             xx_statement_list shift  603
                  xx_statement shift  524
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 602:
     (73) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 73

State 603:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                         FETCH shift  263
                    IDENTIFIER shift  513
                      DOTCOMMA shift  162
                  BRACKET_OPEN shift  291
                 BRACKET_CLOSE shift  604
                       COMMENT shift  523
                  TYPE_INTEGER shift  477
                 TYPE_UINTEGER shift  486
                     TYPE_LONG shift  495
                    TYPE_ULONG shift  498
                     TYPE_CHAR shift  489
                    TYPE_UCHAR shift  492
                   TYPE_DOUBLE shift  501
                     TYPE_BOOL shift  507
                   TYPE_STRING shift  504
                      TYPE_VAR shift  510
                         BREAK shift  163
                      CONTINUE shift  165
                            IF shift  167
                        SWITCH shift  176
                          LOOP shift  187
                         WHILE shift  191
                            DO shift  196
                           FOR shift  377
                           LET shift  384
                          ECHO shift  446
                        RETURN shift  461
                         UNSET shift  465
                         THROW shift  474
                    xx_comment shift  160
                  xx_statement shift  141
              xx_let_statement shift  142
               xx_if_statement shift  143
             xx_loop_statement shift  144
             xx_echo_statement shift  145
           xx_return_statement shift  146
            xx_fetch_statement shift  147
            xx_fcall_statement shift  148
            xx_mcall_statement shift  149
            xx_scall_statement shift  150
            xx_unset_statement shift  151
            xx_throw_statement shift  152
          xx_declare_statement shift  153
            xx_break_statement shift  154
         xx_continue_statement shift  155
            xx_while_statement shift  156
         xx_do_while_statement shift  157
           xx_switch_statement shift  158
              xx_for_statement shift  159
            xx_empty_statement shift  161
                 xx_mcall_expr shift  453
                 xx_fcall_expr shift  455
                 xx_scall_expr shift  457
                 xx_fetch_expr shift  459

State 604:
     (75) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 75

State 605:
     (31) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition *
          xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition * xx_class_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 31
                       COMMENT shift  609
                         CONST shift  615
                        INLINE shift  95
   xx_class_methods_definition shift  606
            xx_visibility_list shift  132
     xx_class_const_definition shift  607
    xx_class_method_definition shift  608
                 xx_visibility shift  114

State 606:
     (34) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 34
                       COMMENT shift  577
                        INLINE shift  95
            xx_visibility_list shift  132
    xx_class_method_definition shift  131
                 xx_visibility shift  114

State 607:
     (52) xx_class_consts_definition ::= xx_class_consts_definition xx_class_const_definition *

                     {default} reduce 52

State 608:
     (55) xx_class_methods_definition ::= xx_class_method_definition *

                     {default} reduce 55

State 609:
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                         CONST shift  610
                        INLINE shift  95
            xx_visibility_list shift  578
                 xx_visibility shift  114

State 610:
          xx_class_const_definition ::= COMMENT CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  611

State 611:
          xx_class_const_definition ::= COMMENT CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  612

State 612:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  613

State 613:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  614

State 614:
     (58) xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 58

State 615:
          xx_class_const_definition ::= CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  616

State 616:
          xx_class_const_definition ::= CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  617

State 617:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  618

State 618:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  619

State 619:
     (59) xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 59

State 620:
     (36) xx_class_properties_definition ::= xx_class_properties_definition xx_class_property_definition *

                     {default} reduce 36

State 621:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                         CONST shift  610
                        INLINE shift  95
            xx_visibility_list shift  622
                 xx_visibility shift  114

State 622:
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                    IDENTIFIER shift  623
                      ABSTRACT shift  96
                         FINAL shift  97
                      FUNCTION shift  579
                        INLINE shift  95
                 xx_visibility shift  89

State 623:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  624
                  BRACKET_OPEN shift  630
                        ASSIGN shift  625
   xx_class_property_shortcuts shift  640

State 624:
     (38) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 38

State 625:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  626

State 626:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  627
                  BRACKET_OPEN shift  630
   xx_class_property_shortcuts shift  628

State 627:
     (40) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 40

State 628:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  629

State 629:
     (44) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 44

State 630:
          xx_class_property_shortcuts ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_property_shortcuts ::= BRACKET_OPEN * xx_class_property_shortcuts_list BRACKET_CLOSE
          xx_class_property_shortcuts_list ::= * xx_class_property_shortcuts_list COMMA xx_class_property_shortcut
          xx_class_property_shortcuts_list ::= * xx_class_property_shortcut
          xx_class_property_shortcut ::= * IDENTIFIER
          xx_class_property_shortcut ::= * COMMENT IDENTIFIER

                    IDENTIFIER shift  636
                 BRACKET_CLOSE shift  631
                       COMMENT shift  637
xx_class_property_shortcuts_list shift  632
    xx_class_property_shortcut shift  639

State 631:
     (46) xx_class_property_shortcuts ::= BRACKET_OPEN BRACKET_CLOSE *

                      DOTCOMMA reduce 46

State 632:
          xx_class_property_shortcuts ::= BRACKET_OPEN xx_class_property_shortcuts_list * BRACKET_CLOSE
          xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list * COMMA xx_class_property_shortcut

                         COMMA shift  634
                 BRACKET_CLOSE shift  633

State 633:
     (47) xx_class_property_shortcuts ::= BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE *

                      DOTCOMMA reduce 47

State 634:
          xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list COMMA * xx_class_property_shortcut
          xx_class_property_shortcut ::= * IDENTIFIER
          xx_class_property_shortcut ::= * COMMENT IDENTIFIER

                    IDENTIFIER shift  636
                       COMMENT shift  637
    xx_class_property_shortcut shift  635

State 635:
     (48) xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list COMMA xx_class_property_shortcut *

                     {default} reduce 48

State 636:
     (50) xx_class_property_shortcut ::= IDENTIFIER *

                     {default} reduce 50

State 637:
          xx_class_property_shortcut ::= COMMENT * IDENTIFIER

                    IDENTIFIER shift  638

State 638:
     (51) xx_class_property_shortcut ::= COMMENT IDENTIFIER *

                     {default} reduce 51

State 639:
     (49) xx_class_property_shortcuts_list ::= xx_class_property_shortcut *

                     {default} reduce 49

State 640:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  641

State 641:
     (42) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 42

State 642:
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                    IDENTIFIER shift  643
                      ABSTRACT shift  96
                         FINAL shift  97
                      FUNCTION shift  133
                        INLINE shift  95
                 xx_visibility shift  89

State 643:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  644
                  BRACKET_OPEN shift  630
                        ASSIGN shift  645
   xx_class_property_shortcuts shift  650

State 644:
     (39) xx_class_property_definition ::= xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 39

State 645:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT

                    IDENTIFIER shift  73
                        STRING shift  68
                       INTEGER shift  66
                          CHAR shift  67
                        DOUBLE shift  69
                          NULL shift  70
                          TRUE shift  72
                         FALSE shift  71
               xx_literal_expr shift  646

State 646:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  647
                  BRACKET_OPEN shift  630
   xx_class_property_shortcuts shift  648

State 647:
     (41) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 41

State 648:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  649

State 649:
     (45) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 45

State 650:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  651

State 651:
     (43) xx_class_property_definition ::= xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 43

State 652:
     (53) xx_class_consts_definition ::= xx_class_const_definition *

                     {default} reduce 53

State 653:
     (28) xx_class_definition ::= xx_class_consts_definition *
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 28
                       COMMENT shift  621
                         CONST shift  615
                        INLINE shift  95
xx_class_properties_definition shift  654
   xx_class_methods_definition shift  657
  xx_class_property_definition shift  658
            xx_visibility_list shift  642
     xx_class_const_definition shift  607
    xx_class_method_definition shift  608
                 xx_visibility shift  114

State 654:
     (32) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition *
          xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition * xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 32
                       COMMENT shift  656
                        INLINE shift  95
   xx_class_methods_definition shift  655
  xx_class_property_definition shift  620
            xx_visibility_list shift  642
    xx_class_method_definition shift  608
                 xx_visibility shift  114

State 655:
     (35) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 35
                       COMMENT shift  577
                        INLINE shift  95
            xx_visibility_list shift  132
    xx_class_method_definition shift  131
                 xx_visibility shift  114

State 656:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                        INLINE shift  95
            xx_visibility_list shift  622
                 xx_visibility shift  114

State 657:
     (33) xx_class_definition ::= xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 33
                       COMMENT shift  577
                        INLINE shift  95
            xx_visibility_list shift  132
    xx_class_method_definition shift  131
                 xx_visibility shift  114

State 658:
     (37) xx_class_properties_definition ::= xx_class_property_definition *

                     {default} reduce 37

State 659:
     (29) xx_class_definition ::= xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  90
                     PROTECTED shift  91
                        STATIC shift  93
                       PRIVATE shift  92
                        SCOPED shift  94
                      ABSTRACT shift  96
                         FINAL shift  97
                 BRACKET_CLOSE reduce 29
                       COMMENT shift  577
                        INLINE shift  95
            xx_visibility_list shift  132
    xx_class_method_definition shift  131
                 xx_visibility shift  114

State 660:
          xx_implements_list ::= xx_implements_list COMMA * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  662
                 xx_implements shift  661

State 661:
     (22) xx_implements_list ::= xx_implements_list COMMA xx_implements *

                     {default} reduce 22

State 662:
     (24) xx_implements ::= IDENTIFIER *

                     {default} reduce 24

State 663:
     (23) xx_implements_list ::= xx_implements *

                     {default} reduce 23

State 664:
          xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  662
            xx_implements_list shift  665
                 xx_implements shift  663

State 665:
          xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  660
                  BRACKET_OPEN shift  125
                 xx_class_body shift  666

State 666:
     (13) xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 13

State 667:
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                         CLASS shift  668

State 668:
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  669

State 669:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  671
                    IMPLEMENTS shift  674
                  BRACKET_OPEN shift  125
                 xx_class_body shift  670

State 670:
     (15) xx_class_def ::= ABSTRACT CLASS IDENTIFIER xx_class_body *

                     {default} reduce 15

State 671:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  672

State 672:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  125
                 xx_class_body shift  673

State 673:
     (16) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 16

State 674:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  662
            xx_implements_list shift  675
                 xx_implements shift  663

State 675:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  660
                  BRACKET_OPEN shift  125
                 xx_class_body shift  676

State 676:
     (17) xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 17

State 677:
          xx_class_def ::= FINAL * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= FINAL * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                         CLASS shift  678

State 678:
          xx_class_def ::= FINAL CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= FINAL CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                    IDENTIFIER shift  679

State 679:
          xx_class_def ::= FINAL CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= FINAL CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  681
                  BRACKET_OPEN shift  125
                 xx_class_body shift  680

State 680:
     (18) xx_class_def ::= FINAL CLASS IDENTIFIER xx_class_body *

                     {default} reduce 18

State 681:
          xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  682

State 682:
          xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  125
                 xx_class_body shift  683

State 683:
     (19) xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 19

State 684:
      (3) xx_top_statement_list ::= xx_top_statement *

                     {default} reduce 3

