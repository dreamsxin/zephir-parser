 State 0:
          program ::= * xx_language
          xx_language ::= * xx_top_statement_list
          xx_top_statement_list ::= * xx_top_statement_list xx_top_statement
          xx_top_statement_list ::= * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_interface_def
          xx_top_statement ::= * xx_comment
          xx_top_statement ::= * xx_cblock
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_interface_def ::= * INTERFACE IDENTIFIER xx_interface_body
          xx_interface_def ::= * INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                     NAMESPACE shift  9
                     INTERFACE shift  12
                         CLASS shift  140
                      ABSTRACT shift  671
                         FINAL shift  681
                       COMMENT shift  538
                        CBLOCK shift  539
                       program accept
                   xx_language shift  1
         xx_top_statement_list shift  2
              xx_top_statement shift  688
              xx_namespace_def shift  4
                  xx_class_def shift  5
              xx_interface_def shift  6
                    xx_comment shift  7
                     xx_cblock shift  8

State 1:
      (0) program ::= xx_language *

                             $ reduce 0

State 2:
      (1) xx_language ::= xx_top_statement_list *
          xx_top_statement_list ::= xx_top_statement_list * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_interface_def
          xx_top_statement ::= * xx_comment
          xx_top_statement ::= * xx_cblock
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_interface_def ::= * INTERFACE IDENTIFIER xx_interface_body
          xx_interface_def ::= * INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                             $ reduce 1
                     NAMESPACE shift  9
                     INTERFACE shift  12
                         CLASS shift  140
                      ABSTRACT shift  671
                         FINAL shift  681
                       COMMENT shift  538
                        CBLOCK shift  539
              xx_top_statement shift  3
              xx_namespace_def shift  4
                  xx_class_def shift  5
              xx_interface_def shift  6
                    xx_comment shift  7
                     xx_cblock shift  8

State 3:
      (2) xx_top_statement_list ::= xx_top_statement_list xx_top_statement *

                     {default} reduce 2

State 4:
      (4) xx_top_statement ::= xx_namespace_def *

                     {default} reduce 4

State 5:
      (5) xx_top_statement ::= xx_class_def *

                     {default} reduce 5

State 6:
      (6) xx_top_statement ::= xx_interface_def *

                     {default} reduce 6

State 7:
      (7) xx_top_statement ::= xx_comment *

                     {default} reduce 7

State 8:
      (8) xx_top_statement ::= xx_cblock *

                     {default} reduce 8

State 9:
          xx_namespace_def ::= NAMESPACE * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  10

State 10:
          xx_namespace_def ::= NAMESPACE IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  11

State 11:
      (9) xx_namespace_def ::= NAMESPACE IDENTIFIER DOTCOMMA *

                     {default} reduce 9

State 12:
          xx_interface_def ::= INTERFACE * IDENTIFIER xx_interface_body
          xx_interface_def ::= INTERFACE * IDENTIFIER EXTENDS IDENTIFIER xx_interface_body

                    IDENTIFIER shift  13

State 13:
          xx_interface_def ::= INTERFACE IDENTIFIER * xx_interface_body
          xx_interface_def ::= INTERFACE IDENTIFIER * EXTENDS IDENTIFIER xx_interface_body
          xx_interface_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_interface_body ::= * BRACKET_OPEN xx_interface_definition BRACKET_CLOSE

                       EXTENDS shift  15
                  BRACKET_OPEN shift  18
             xx_interface_body shift  14

State 14:
     (10) xx_interface_def ::= INTERFACE IDENTIFIER xx_interface_body *

                     {default} reduce 10

State 15:
          xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS * IDENTIFIER xx_interface_body

                    IDENTIFIER shift  16

State 16:
          xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS IDENTIFIER * xx_interface_body
          xx_interface_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_interface_body ::= * BRACKET_OPEN xx_interface_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  18
             xx_interface_body shift  17

State 17:
     (11) xx_interface_def ::= INTERFACE IDENTIFIER EXTENDS IDENTIFIER xx_interface_body *

                     {default} reduce 11

State 18:
          xx_interface_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_interface_body ::= BRACKET_OPEN * xx_interface_definition BRACKET_CLOSE
          xx_interface_definition ::= * xx_class_consts_definition
          xx_interface_definition ::= * xx_interface_methods_definition
          xx_interface_definition ::= * xx_class_consts_definition xx_interface_methods_definition
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_interface_methods_definition ::= * xx_interface_methods_definition xx_interface_method_definition
          xx_interface_methods_definition ::= * xx_interface_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE shift  19
                       COMMENT shift  127
                         CONST shift  133
                        INLINE shift  105
       xx_interface_definition shift  20
    xx_class_consts_definition shift  22
xx_interface_methods_definition shift  138
            xx_visibility_list shift  25
     xx_class_const_definition shift  139
xx_interface_method_definition shift  126
                 xx_visibility shift  124

State 19:
     (26) xx_interface_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 26

State 20:
          xx_interface_body ::= BRACKET_OPEN xx_interface_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  21

State 21:
     (27) xx_interface_body ::= BRACKET_OPEN xx_interface_definition BRACKET_CLOSE *

                     {default} reduce 27

State 22:
     (37) xx_interface_definition ::= xx_class_consts_definition *
          xx_interface_definition ::= xx_class_consts_definition * xx_interface_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_interface_methods_definition ::= * xx_interface_methods_definition xx_interface_method_definition
          xx_interface_methods_definition ::= * xx_interface_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 37
                       COMMENT shift  127
                         CONST shift  133
                        INLINE shift  105
xx_interface_methods_definition shift  23
            xx_visibility_list shift  25
     xx_class_const_definition shift  125
xx_interface_method_definition shift  126
                 xx_visibility shift  124

State 23:
     (39) xx_interface_definition ::= xx_class_consts_definition xx_interface_methods_definition *
          xx_interface_methods_definition ::= xx_interface_methods_definition * xx_interface_method_definition
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 39
                       COMMENT shift  108
                        INLINE shift  105
            xx_visibility_list shift  25
xx_interface_method_definition shift  24
                 xx_visibility shift  124

State 24:
     (60) xx_interface_methods_definition ::= xx_interface_methods_definition xx_interface_method_definition *

                     {default} reduce 60

State 25:
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                      FUNCTION shift  26
                        INLINE shift  105
                 xx_visibility shift  99

State 26:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  27

State 27:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  28

State 28:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  96
             PARENTHESES_CLOSE shift  29
                    IDENTIFIER shift  68
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_list shift  60
             xx_parameter_type shift  84
             xx_parameter_cast shift  92
                  xx_parameter shift  98

State 29:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                         ARROW shift  30
                      DOTCOMMA shift  59

State 30:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  31
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 31:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  32

State 32:
     (80) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 80

State 33:
     (98) xx_method_return_type ::= VOID *

                     {default} reduce 98

State 34:
     (99) xx_method_return_type ::= xx_method_return_type_list *
          xx_method_return_type_list ::= xx_method_return_type_list * BITWISE_OR xx_method_return_type_item

                    BITWISE_OR shift  35
                     {default} reduce 99

State 35:
          xx_method_return_type_list ::= xx_method_return_type_list BITWISE_OR * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
    xx_method_return_type_item shift  36
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 36:
    (100) xx_method_return_type_list ::= xx_method_return_type_list BITWISE_OR xx_method_return_type_item *

                     {default} reduce 100

State 37:
    (102) xx_method_return_type_item ::= xx_parameter_type *
          xx_method_return_type_item ::= xx_parameter_type * NOT

                           NOT shift  38
                     {default} reduce 102

State 38:
    (103) xx_method_return_type_item ::= xx_parameter_type NOT *

                     {default} reduce 103

State 39:
    (104) xx_method_return_type_item ::= xx_parameter_cast *

                     {default} reduce 104

State 40:
    (105) xx_method_return_type_item ::= xx_parameter_cast_collection *

                     {default} reduce 105

State 41:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER
          xx_parameter_cast_collection ::= LESS * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER

                    IDENTIFIER shift  42

State 42:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER
          xx_parameter_cast_collection ::= LESS IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE GREATER

                       GREATER shift  43
                 SBRACKET_OPEN shift  44

State 43:
    (116) xx_parameter_cast ::= LESS IDENTIFIER GREATER *

                     {default} reduce 116

State 44:
          xx_parameter_cast_collection ::= LESS IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE GREATER

                SBRACKET_CLOSE shift  45

State 45:
          xx_parameter_cast_collection ::= LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * GREATER

                       GREATER shift  46

State 46:
    (117) xx_parameter_cast_collection ::= LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER *

                     {default} reduce 117

State 47:
    (118) xx_parameter_type ::= TYPE_INTEGER *

                     {default} reduce 118

State 48:
    (119) xx_parameter_type ::= TYPE_UINTEGER *

                     {default} reduce 119

State 49:
    (120) xx_parameter_type ::= TYPE_LONG *

                     {default} reduce 120

State 50:
    (121) xx_parameter_type ::= TYPE_ULONG *

                     {default} reduce 121

State 51:
    (122) xx_parameter_type ::= TYPE_CHAR *

                     {default} reduce 122

State 52:
    (123) xx_parameter_type ::= TYPE_UCHAR *

                     {default} reduce 123

State 53:
    (124) xx_parameter_type ::= TYPE_DOUBLE *

                     {default} reduce 124

State 54:
    (125) xx_parameter_type ::= TYPE_BOOL *

                     {default} reduce 125

State 55:
    (126) xx_parameter_type ::= TYPE_STRING *

                     {default} reduce 126

State 56:
    (127) xx_parameter_type ::= TYPE_ARRAY *

                     {default} reduce 127

State 57:
    (128) xx_parameter_type ::= TYPE_VAR *

                     {default} reduce 128

State 58:
    (101) xx_method_return_type_list ::= xx_method_return_type_item *

                     {default} reduce 101

State 59:
     (84) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 84

State 60:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  66
             PARENTHESES_CLOSE shift  61

State 61:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * DOTCOMMA

                         ARROW shift  62
                      DOTCOMMA shift  65

State 62:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  63
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 63:
          xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  64

State 64:
     (81) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 81

State 65:
     (85) xx_interface_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 85

State 66:
          xx_parameter_list ::= xx_parameter_list COMMA * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  96
                    IDENTIFIER shift  68
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_type shift  84
             xx_parameter_cast shift  92
                  xx_parameter shift  67

State 67:
    (106) xx_parameter_list ::= xx_parameter_list COMMA xx_parameter *

                     {default} reduce 106

State 68:
    (108) xx_parameter ::= IDENTIFIER *
          xx_parameter ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  69
                     {default} reduce 108

State 69:
          xx_parameter ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  70

State 70:
    (112) xx_parameter ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 112

State 71:
    (321) xx_literal_expr ::= INTEGER *

                     {default} reduce 321

State 72:
    (322) xx_literal_expr ::= CHAR *

                     {default} reduce 322

State 73:
    (323) xx_literal_expr ::= STRING *

                     {default} reduce 323

State 74:
    (324) xx_literal_expr ::= DOUBLE *

                     {default} reduce 324

State 75:
    (325) xx_literal_expr ::= NULL *

                     {default} reduce 325

State 76:
    (326) xx_literal_expr ::= FALSE *

                     {default} reduce 326

State 77:
    (327) xx_literal_expr ::= TRUE *

                     {default} reduce 327

State 78:
          xx_literal_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT

                   DOUBLECOLON shift  79

State 79:
          xx_literal_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT

                      CONSTANT shift  80

State 80:
    (328) xx_literal_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 328

State 81:
    (329) xx_literal_expr ::= CONSTANT *

                     {default} reduce 329

State 82:
          xx_literal_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  83

State 83:
    (330) xx_literal_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 330

State 84:
          xx_parameter ::= xx_parameter_type * IDENTIFIER
          xx_parameter ::= xx_parameter_type * NOT IDENTIFIER
          xx_parameter ::= xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= xx_parameter_type * NOT IDENTIFIER ASSIGN xx_literal_expr

                           NOT shift  88
                    IDENTIFIER shift  85

State 85:
    (109) xx_parameter ::= xx_parameter_type IDENTIFIER *
          xx_parameter ::= xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  86
                     {default} reduce 109

State 86:
          xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  87

State 87:
    (113) xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 113

State 88:
          xx_parameter ::= xx_parameter_type NOT * IDENTIFIER
          xx_parameter ::= xx_parameter_type NOT * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  89

State 89:
    (110) xx_parameter ::= xx_parameter_type NOT IDENTIFIER *
          xx_parameter ::= xx_parameter_type NOT IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  90
                     {default} reduce 110

State 90:
          xx_parameter ::= xx_parameter_type NOT IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  91

State 91:
    (114) xx_parameter ::= xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 114

State 92:
          xx_parameter ::= xx_parameter_cast * IDENTIFIER
          xx_parameter ::= xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  93

State 93:
    (111) xx_parameter ::= xx_parameter_cast IDENTIFIER *
          xx_parameter ::= xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  94
                     {default} reduce 111

State 94:
          xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  95

State 95:
    (115) xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 115

State 96:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER

                    IDENTIFIER shift  97

State 97:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER

                       GREATER shift  43

State 98:
    (107) xx_parameter_list ::= xx_parameter *

                     {default} reduce 107

State 99:
     (88) xx_visibility_list ::= xx_visibility_list xx_visibility *

                     {default} reduce 88

State 100:
     (90) xx_visibility ::= PUBLIC *

                     {default} reduce 90

State 101:
     (91) xx_visibility ::= PROTECTED *

                     {default} reduce 91

State 102:
     (92) xx_visibility ::= PRIVATE *

                     {default} reduce 92

State 103:
     (93) xx_visibility ::= STATIC *

                     {default} reduce 93

State 104:
     (94) xx_visibility ::= SCOPED *

                     {default} reduce 94

State 105:
     (95) xx_visibility ::= INLINE *

                     {default} reduce 95

State 106:
     (96) xx_visibility ::= ABSTRACT *

                     {default} reduce 96

State 107:
     (97) xx_visibility ::= FINAL *

                     {default} reduce 97

State 108:
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                        INLINE shift  105
            xx_visibility_list shift  109
                 xx_visibility shift  124

State 109:
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                      FUNCTION shift  110
                        INLINE shift  105
                 xx_visibility shift  99

State 110:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  111

State 111:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  112

State 112:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  96
             PARENTHESES_CLOSE shift  113
                    IDENTIFIER shift  68
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_list shift  118
             xx_parameter_type shift  84
             xx_parameter_cast shift  92
                  xx_parameter shift  98

State 113:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                         ARROW shift  114
                      DOTCOMMA shift  117

State 114:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  115
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 115:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  116

State 116:
     (82) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 82

State 117:
     (86) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 86

State 118:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE DOTCOMMA
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  66
             PARENTHESES_CLOSE shift  119

State 119:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * DOTCOMMA

                         ARROW shift  120
                      DOTCOMMA shift  123

State 120:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type DOTCOMMA
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  121
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 121:
          xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * DOTCOMMA

                      DOTCOMMA shift  122

State 122:
     (83) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA *

                     {default} reduce 83

State 123:
     (87) xx_interface_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 87

State 124:
     (89) xx_visibility_list ::= xx_visibility *

                     {default} reduce 89

State 125:
     (56) xx_class_consts_definition ::= xx_class_consts_definition xx_class_const_definition *

                     {default} reduce 56

State 126:
     (61) xx_interface_methods_definition ::= xx_interface_method_definition *

                     {default} reduce 61

State 127:
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                         CONST shift  128
                        INLINE shift  105
            xx_visibility_list shift  109
                 xx_visibility shift  124

State 128:
          xx_class_const_definition ::= COMMENT CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  129

State 129:
          xx_class_const_definition ::= COMMENT CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  130

State 130:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  131

State 131:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  132

State 132:
     (62) xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 62

State 133:
          xx_class_const_definition ::= CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  134

State 134:
          xx_class_const_definition ::= CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  135

State 135:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  136

State 136:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  137

State 137:
     (63) xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 63

State 138:
     (38) xx_interface_definition ::= xx_interface_methods_definition *
          xx_interface_methods_definition ::= xx_interface_methods_definition * xx_interface_method_definition
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_interface_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE DOTCOMMA
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 38
                       COMMENT shift  108
                        INLINE shift  105
            xx_visibility_list shift  25
xx_interface_method_definition shift  24
                 xx_visibility shift  124

State 139:
     (57) xx_class_consts_definition ::= xx_class_const_definition *

                     {default} reduce 57

State 140:
          xx_class_def ::= CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  141

State 141:
          xx_class_def ::= CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  143
                    IMPLEMENTS shift  668
                  BRACKET_OPEN shift  149
                 xx_class_body shift  142

State 142:
     (12) xx_class_def ::= CLASS IDENTIFIER xx_class_body *

                     {default} reduce 12

State 143:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  144

State 144:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                    IMPLEMENTS shift  146
                  BRACKET_OPEN shift  149
                 xx_class_body shift  145

State 145:
     (13) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 13

State 146:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  666
            xx_implements_list shift  147
                 xx_implements shift  667

State 147:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  664
                  BRACKET_OPEN shift  149
                 xx_class_body shift  148

State 148:
     (15) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 15

State 149:
          xx_class_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_body ::= BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE shift  150
                       COMMENT shift  626
                         CONST shift  133
                        INLINE shift  105
           xx_class_definition shift  151
xx_class_properties_definition shift  153
    xx_class_consts_definition shift  657
   xx_class_methods_definition shift  663
  xx_class_property_definition shift  662
            xx_visibility_list shift  647
     xx_class_const_definition shift  139
    xx_class_method_definition shift  623
                 xx_visibility shift  124

State 150:
     (21) xx_class_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 21

State 151:
          xx_class_body ::= BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  152

State 152:
     (22) xx_class_body ::= BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 22

State 153:
     (28) xx_class_definition ::= xx_class_properties_definition *
          xx_class_definition ::= xx_class_properties_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 28
                       COMMENT shift  626
                         CONST shift  133
                        INLINE shift  105
    xx_class_consts_definition shift  621
   xx_class_methods_definition shift  154
  xx_class_property_definition shift  625
            xx_visibility_list shift  647
     xx_class_const_definition shift  139
    xx_class_method_definition shift  623
                 xx_visibility shift  124

State 154:
     (31) xx_class_definition ::= xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 31
                       COMMENT shift  593
                        INLINE shift  105
            xx_visibility_list shift  156
    xx_class_method_definition shift  155
                 xx_visibility shift  124

State 155:
     (58) xx_class_methods_definition ::= xx_class_methods_definition xx_class_method_definition *

                     {default} reduce 58

State 156:
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                      FUNCTION shift  157
                        INLINE shift  105
                 xx_visibility shift  99

State 157:
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  158

State 158:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  159

State 159:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  96
             PARENTHESES_CLOSE shift  160
                    IDENTIFIER shift  68
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_list shift  581
             xx_parameter_type shift  84
             xx_parameter_cast shift  92
                  xx_parameter shift  98

State 160:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         ARROW shift  575
                  BRACKET_OPEN shift  161

State 161:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  162
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  163
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 162:
     (64) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 64

State 163:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  164
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 164:
     (66) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 66

State 165:
    (129) xx_statement_list ::= xx_statement_list xx_statement *

                     {default} reduce 129

State 166:
    (131) xx_statement ::= xx_cblock *

                     {default} reduce 131

State 167:
    (132) xx_statement ::= xx_let_statement *

                     {default} reduce 132

State 168:
    (133) xx_statement ::= xx_if_statement *

                     {default} reduce 133

State 169:
    (134) xx_statement ::= xx_loop_statement *

                     {default} reduce 134

State 170:
    (135) xx_statement ::= xx_echo_statement *

                     {default} reduce 135

State 171:
    (136) xx_statement ::= xx_return_statement *

                     {default} reduce 136

State 172:
    (137) xx_statement ::= xx_require_statement *

                     {default} reduce 137

State 173:
    (138) xx_statement ::= xx_fetch_statement *

                     {default} reduce 138

State 174:
    (139) xx_statement ::= xx_fcall_statement *

                     {default} reduce 139

State 175:
    (140) xx_statement ::= xx_mcall_statement *

                     {default} reduce 140

State 176:
    (141) xx_statement ::= xx_scall_statement *

                     {default} reduce 141

State 177:
    (142) xx_statement ::= xx_unset_statement *

                     {default} reduce 142

State 178:
    (143) xx_statement ::= xx_throw_statement *

                     {default} reduce 143

State 179:
    (144) xx_statement ::= xx_declare_statement *

                     {default} reduce 144

State 180:
    (145) xx_statement ::= xx_break_statement *

                     {default} reduce 145

State 181:
    (146) xx_statement ::= xx_continue_statement *

                     {default} reduce 146

State 182:
    (147) xx_statement ::= xx_while_statement *

                     {default} reduce 147

State 183:
    (148) xx_statement ::= xx_do_while_statement *

                     {default} reduce 148

State 184:
    (149) xx_statement ::= xx_switch_statement *

                     {default} reduce 149

State 185:
    (150) xx_statement ::= xx_for_statement *

                     {default} reduce 150

State 186:
    (151) xx_statement ::= xx_comment *

                     {default} reduce 151

State 187:
    (152) xx_statement ::= xx_empty_statement *

                     {default} reduce 152

State 188:
    (153) xx_empty_statement ::= DOTCOMMA *

                     {default} reduce 153

State 189:
          xx_break_statement ::= BREAK * DOTCOMMA

                      DOTCOMMA shift  190

State 190:
    (154) xx_break_statement ::= BREAK DOTCOMMA *

                     {default} reduce 154

State 191:
          xx_continue_statement ::= CONTINUE * DOTCOMMA

                      DOTCOMMA shift  192

State 192:
    (155) xx_continue_statement ::= CONTINUE DOTCOMMA *

                     {default} reduce 155

State 193:
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                  xx_eval_expr shift  194
                xx_common_expr shift  395
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 194:
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  195

State 195:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  569
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  196
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 196:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  197
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 197:
    (158) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE

                          ELSE shift  198
                     {default} reduce 158

State 198:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  199

State 199:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  568
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  200
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 200:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  201
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 201:
    (159) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 159

State 202:
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                  xx_eval_expr shift  203
                xx_common_expr shift  395
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 203:
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN xx_case_clauses BRACKET_CLOSE

                  BRACKET_OPEN shift  204

State 204:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * xx_case_clauses BRACKET_CLOSE
          xx_case_clauses ::= * xx_case_clauses xx_case_clause
          xx_case_clauses ::= * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  205
                          CASE shift  209
                       DEFAULT shift  564
               xx_case_clauses shift  206
                xx_case_clause shift  567

State 205:
    (162) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 162

State 206:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses * BRACKET_CLOSE
          xx_case_clauses ::= xx_case_clauses * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  207
                          CASE shift  209
                       DEFAULT shift  564
                xx_case_clause shift  208

State 207:
    (163) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE *

                     {default} reduce 163

State 208:
    (164) xx_case_clauses ::= xx_case_clauses xx_case_clause *

                     {default} reduce 164

State 209:
          xx_case_clause ::= CASE * xx_literal_expr COLON
          xx_case_clause ::= CASE * xx_literal_expr COLON xx_statement_list
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  210

State 210:
          xx_case_clause ::= CASE xx_literal_expr * COLON
          xx_case_clause ::= CASE xx_literal_expr * COLON xx_statement_list

                         COLON shift  211

State 211:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (166) xx_case_clause ::= CASE xx_literal_expr COLON *
          xx_case_clause ::= CASE xx_literal_expr COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  212
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486
                     {default} reduce 166

State 212:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (167) xx_case_clause ::= CASE xx_literal_expr COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486
                     {default} reduce 167

State 213:
          xx_loop_statement ::= LOOP * BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  214

State 214:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  563
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  215
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 215:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  216
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 216:
    (170) xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 170

State 217:
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                  xx_eval_expr shift  218
                xx_common_expr shift  395
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 218:
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  219

State 219:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  562
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  220
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 220:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  221
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 221:
    (172) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 172

State 222:
          xx_do_while_statement ::= DO * BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO * BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA

                  BRACKET_OPEN shift  223

State 223:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  558
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  224
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 224:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  225
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 225:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  226

State 226:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                  xx_eval_expr shift  227
                xx_common_expr shift  395
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 227:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  228

State 228:
    (174) xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 174

State 229:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= NOT * xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  230
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 230:
    (237) xx_common_expr ::= NOT xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 237

State 231:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr EQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  394
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 232:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= ISSET * xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  233
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 233:
    (238) xx_common_expr ::= ISSET xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 238

State 234:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr NOTEQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  393
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 235:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= REQUIRE * xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  236
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 236:
    (239) xx_common_expr ::= REQUIRE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 239

State 237:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr IDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  392
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 238:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= CLONE * xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  239
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 239:
    (240) xx_common_expr ::= CLONE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 240

State 240:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr NOTIDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  391
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 241:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= EMPTY * xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  242
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 242:
    (241) xx_common_expr ::= EMPTY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 241

State 243:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= xx_common_expr LESS * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  390
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 244:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= LIKELY * xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  245
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 245:
    (242) xx_common_expr ::= LIKELY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 242

State 246:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr GREATER * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  389
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 247:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= UNLIKELY * xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  248
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 248:
    (243) xx_common_expr ::= UNLIKELY xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 243

State 249:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr LESSEQUAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  250
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 250:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
    (250) xx_common_expr ::= xx_common_expr LESSEQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 250

State 251:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr GREATEREQUAL * xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  252
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 252:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (251) xx_common_expr ::= xx_common_expr GREATEREQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 251

State 253:
          xx_common_expr ::= xx_common_expr ARROW * IDENTIFIER
          xx_common_expr ::= xx_common_expr ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr ARROW * BRACKET_OPEN STRING BRACKET_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW * BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  254
                  BRACKET_OPEN shift  376

State 254:
    (255) xx_common_expr ::= xx_common_expr ARROW IDENTIFIER *
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  255
                     {default} reduce 255

State 255:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  375
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  373
             xx_call_parameter shift  332

State 256:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
    (312) xx_call_parameter ::= xx_common_expr *

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 312

State 257:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  258
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 258:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                SBRACKET_CLOSE shift  259

State 259:
    (260) xx_common_expr ::= xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE *

                     {default} reduce 260

State 260:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= xx_common_expr ADD * xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  261
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 261:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
    (261) xx_common_expr ::= xx_common_expr ADD xx_common_expr *
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 261

State 262:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= xx_common_expr SUB * xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  263
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 263:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
    (262) xx_common_expr ::= xx_common_expr SUB xx_common_expr *
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 262

State 264:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= xx_common_expr MUL * xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  265
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 265:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
    (263) xx_common_expr ::= xx_common_expr MUL xx_common_expr *
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 263

State 266:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= xx_common_expr DIV * xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  267
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 267:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
    (264) xx_common_expr ::= xx_common_expr DIV xx_common_expr *
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 264

State 268:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= xx_common_expr MOD * xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  269
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 269:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
    (265) xx_common_expr ::= xx_common_expr MOD xx_common_expr *
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 265

State 270:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr CONCAT * xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  271
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 271:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (266) xx_common_expr ::= xx_common_expr CONCAT xx_common_expr *
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 266

State 272:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= xx_common_expr AND * xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  273
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 273:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
    (267) xx_common_expr ::= xx_common_expr AND xx_common_expr *
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 267

State 274:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= xx_common_expr OR * xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  275
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 275:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (268) xx_common_expr ::= xx_common_expr OR xx_common_expr *
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 268

State 276:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_common_expr ::= xx_common_expr INSTANCEOF * xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  277
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 277:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (269) xx_common_expr ::= xx_common_expr INSTANCEOF xx_common_expr *
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 269

State 278:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_common_expr ::= xx_common_expr QUESTION * xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  279
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 279:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
          xx_common_expr ::= xx_common_expr QUESTION xx_common_expr * COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                         COLON shift  280

State 280:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_common_expr ::= xx_common_expr QUESTION xx_common_expr COLON * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  281
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 281:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
    (309) xx_common_expr ::= xx_common_expr QUESTION xx_common_expr COLON xx_common_expr *

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 309

State 282:
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= PARENTHESES_OPEN * xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN * xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
             xx_parameter_type shift  285
                xx_common_expr shift  283
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 283:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_common_expr * PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
             PARENTHESES_CLOSE shift  284
                 SBRACKET_OPEN shift  257
                         ARROW shift  253

State 284:
    (252) xx_common_expr ::= PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE *

                     {default} reduce 252

State 285:
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type * PARENTHESES_CLOSE xx_common_expr

             PARENTHESES_CLOSE shift  286

State 286:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE * xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  287
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 287:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (253) xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr *
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 253

State 288:
          xx_common_expr ::= LESS * IDENTIFIER GREATER xx_common_expr

                    IDENTIFIER shift  289

State 289:
          xx_common_expr ::= LESS IDENTIFIER * GREATER xx_common_expr

                       GREATER shift  290

State 290:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= LESS IDENTIFIER GREATER * xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  291
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 291:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (254) xx_common_expr ::= LESS IDENTIFIER GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 254

State 292:
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
    (273) xx_common_expr ::= IDENTIFIER *
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  314
                   DOUBLECOLON shift  293
                     {default} reduce 273

State 293:
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  294
                      CONSTANT shift  372

State 294:
    (258) xx_common_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER *
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  295
                     {default} reduce 258

State 295:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  371
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  369
             xx_call_parameter shift  332

State 296:
          xx_fetch_expr ::= FETCH * IDENTIFIER COMMA xx_common_expr

                    IDENTIFIER shift  297

State 297:
          xx_fetch_expr ::= FETCH IDENTIFIER * COMMA xx_common_expr

                         COMMA shift  298

State 298:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_fetch_expr ::= FETCH IDENTIFIER COMMA * xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  299
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 299:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (270) xx_fetch_expr ::= FETCH IDENTIFIER COMMA xx_common_expr *
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 270

State 300:
    (271) xx_common_expr ::= xx_fetch_expr *

                     {default} reduce 271

State 301:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= TYPEOF * xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  302
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 302:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
    (272) xx_common_expr ::= TYPEOF xx_common_expr *
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 272

State 303:
    (274) xx_common_expr ::= INTEGER *

                     {default} reduce 274

State 304:
    (275) xx_common_expr ::= STRING *

                     {default} reduce 275

State 305:
    (276) xx_common_expr ::= CHAR *

                     {default} reduce 276

State 306:
    (277) xx_common_expr ::= DOUBLE *

                     {default} reduce 277

State 307:
    (278) xx_common_expr ::= NULL *

                     {default} reduce 278

State 308:
    (279) xx_common_expr ::= TRUE *

                     {default} reduce 279

State 309:
    (280) xx_common_expr ::= FALSE *

                     {default} reduce 280

State 310:
    (281) xx_common_expr ::= CONSTANT *

                     {default} reduce 281

State 311:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_array_list ::= * xx_array_list COMMA xx_array_item
          xx_array_list ::= * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  313
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                SBRACKET_CLOSE shift  359
                        STRING shift  358
                       INTEGER shift  357
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  312
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
                 xx_array_list shift  360
                 xx_array_item shift  368
                  xx_array_key shift  364
                xx_array_value shift  367

State 312:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
    (320) xx_array_value ::= xx_common_expr *

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 320

State 313:
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
    (273) xx_common_expr ::= IDENTIFIER *
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
    (317) xx_array_key ::= IDENTIFIER *

              PARENTHESES_OPEN shift  314
                         COLON reduce 317
                   DOUBLECOLON shift  293
                     {default} reduce 273

State 314:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  356
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  354
             xx_call_parameter shift  332

State 315:
          xx_common_expr ::= NEW * IDENTIFIER
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  316
                  BRACKET_OPEN shift  347

State 316:
    (284) xx_common_expr ::= NEW IDENTIFIER *
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  317
                     {default} reduce 284

State 317:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  318
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  319
             xx_call_parameter shift  332

State 318:
    (285) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 285

State 319:
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  320

State 320:
    (286) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 286

State 321:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= xx_call_parameters COMMA * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
             xx_call_parameter shift  346

State 322:
          xx_fcall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  323

State 323:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  324

State 324:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  325
                   DOUBLECOLON shift  333

State 325:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  328
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  326
             xx_call_parameter shift  332

State 326:
          xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  327

State 327:
    (292) xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 292

State 328:
    (293) xx_fcall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 293

State 329:
    (306) xx_common_expr ::= xx_mcall_expr *

                     {default} reduce 306

State 330:
    (307) xx_common_expr ::= xx_scall_expr *

                     {default} reduce 307

State 331:
    (308) xx_common_expr ::= xx_fcall_expr *

                     {default} reduce 308

State 332:
    (311) xx_call_parameters ::= xx_call_parameter *

                     {default} reduce 311

State 333:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  334
                  BRACKET_OPEN shift  339

State 334:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  335

State 335:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  338
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  336
             xx_call_parameter shift  332

State 336:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  337

State 337:
    (296) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 296

State 338:
    (297) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 297

State 339:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  340

State 340:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  341

State 341:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  342

State 342:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  345
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  343
             xx_call_parameter shift  332

State 343:
          xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  344

State 344:
    (298) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 298

State 345:
    (299) xx_scall_expr ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 299

State 346:
    (310) xx_call_parameters ::= xx_call_parameters COMMA xx_call_parameter *

                     {default} reduce 310

State 347:
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  348

State 348:
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  349

State 349:
    (287) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE *
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  350
                     {default} reduce 287

State 350:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  351
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  352
             xx_call_parameter shift  332

State 351:
    (288) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 288

State 352:
          xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  353

State 353:
    (289) xx_common_expr ::= NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 289

State 354:
          xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  355

State 355:
    (290) xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 290

State 356:
    (291) xx_fcall_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 291

State 357:
    (274) xx_common_expr ::= INTEGER *
    (319) xx_array_key ::= INTEGER *

                         COLON reduce 319
                     {default} reduce 274

State 358:
    (275) xx_common_expr ::= STRING *
    (318) xx_array_key ::= STRING *

                         COLON reduce 318
                     {default} reduce 275

State 359:
    (282) xx_common_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 282

State 360:
          xx_common_expr ::= SBRACKET_OPEN xx_array_list * SBRACKET_CLOSE
          xx_array_list ::= xx_array_list * COMMA xx_array_item

                         COMMA shift  362
                SBRACKET_CLOSE shift  361

State 361:
    (283) xx_common_expr ::= SBRACKET_OPEN xx_array_list SBRACKET_CLOSE *

                     {default} reduce 283

State 362:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_array_list ::= xx_array_list COMMA * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  313
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  358
                       INTEGER shift  357
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  312
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
                 xx_array_item shift  363
                  xx_array_key shift  364
                xx_array_value shift  367

State 363:
    (313) xx_array_list ::= xx_array_list COMMA xx_array_item *

                     {default} reduce 313

State 364:
          xx_array_item ::= xx_array_key * COLON xx_array_value

                         COLON shift  365

State 365:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_array_item ::= xx_array_key COLON * xx_array_value
          xx_array_value ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  312
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
                xx_array_value shift  366

State 366:
    (315) xx_array_item ::= xx_array_key COLON xx_array_value *

                     {default} reduce 315

State 367:
    (316) xx_array_item ::= xx_array_value *

                     {default} reduce 316

State 368:
    (314) xx_array_list ::= xx_array_item *

                     {default} reduce 314

State 369:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  370

State 370:
    (294) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 294

State 371:
    (295) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 295

State 372:
    (259) xx_common_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 259

State 373:
          xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  374

State 374:
    (300) xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 300

State 375:
    (301) xx_mcall_expr ::= xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 301

State 376:
          xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN * STRING BRACKET_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN * STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  377
                        STRING shift  383

State 377:
          xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  378

State 378:
    (256) xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE *
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  379
                     {default} reduce 256

State 379:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  382
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  380
             xx_call_parameter shift  332

State 380:
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  381

State 381:
    (302) xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 302

State 382:
    (303) xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 303

State 383:
          xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING * BRACKET_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING * BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE

                 BRACKET_CLOSE shift  384

State 384:
    (257) xx_common_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE *
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  385
                     {default} reduce 257

State 385:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
             PARENTHESES_CLOSE shift  388
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  256
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300
            xx_call_parameters shift  386
             xx_call_parameter shift  332

State 386:
          xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  321
             PARENTHESES_CLOSE shift  387

State 387:
    (304) xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 304

State 388:
    (305) xx_mcall_expr ::= xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 305

State 389:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
    (249) xx_common_expr ::= xx_common_expr GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 249

State 390:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
    (248) xx_common_expr ::= xx_common_expr LESS xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 248

State 391:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
    (247) xx_common_expr ::= xx_common_expr NOTIDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 247

State 392:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
    (246) xx_common_expr ::= xx_common_expr IDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 246

State 393:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
    (245) xx_common_expr ::= xx_common_expr NOTEQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 245

State 394:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
    (244) xx_common_expr ::= xx_common_expr EQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 244

State 395:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr
    (331) xx_eval_expr ::= xx_common_expr *

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 331

State 396:
          xx_for_statement ::= FOR * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  397

State 397:
          xx_for_statement ::= FOR IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         COMMA shift  546
                            IN shift  398

State 398:
          xx_for_statement ::= FOR IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                       REVERSE shift  541
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  399
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 399:
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                  BRACKET_OPEN shift  400

State 400:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  401
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 401:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  402
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 402:
    (175) xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 175

State 403:
          xx_let_statement ::= LET * xx_let_assignments DOTCOMMA
          xx_let_assignments ::= * xx_let_assignments COMMA xx_let_assignment
          xx_let_assignments ::= * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER DECR
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR
          xx_let_assignment ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  408
                  BRACKET_OPEN shift  467
            xx_let_assignments shift  404
             xx_let_assignment shift  472

State 404:
          xx_let_statement ::= LET xx_let_assignments * DOTCOMMA
          xx_let_assignments ::= xx_let_assignments * COMMA xx_let_assignment

                         COMMA shift  406
                      DOTCOMMA shift  405

State 405:
    (179) xx_let_statement ::= LET xx_let_assignments DOTCOMMA *

                     {default} reduce 179

State 406:
          xx_let_assignments ::= xx_let_assignments COMMA * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER DECR
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR
          xx_let_assignment ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  408
                  BRACKET_OPEN shift  467
             xx_let_assignment shift  407

State 407:
    (180) xx_let_assignments ::= xx_let_assignments COMMA xx_let_assignment *

                     {default} reduce 180

State 408:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= * xx_array_offset_list xx_array_offset
          xx_array_offset_list ::= * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER INCR
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER DECR
          xx_let_assignment ::= IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER * DECR

                 SBRACKET_OPEN shift  458
                         ARROW shift  419
                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
                   DOUBLECOLON shift  447
                          INCR shift  465
                          DECR shift  466
        xx_assignment_operator shift  416
          xx_array_offset_list shift  462
               xx_array_offset shift  435

State 409:
    (182) xx_assignment_operator ::= ASSIGN *

                     {default} reduce 182

State 410:
    (183) xx_assignment_operator ::= ADDASSIGN *

                     {default} reduce 183

State 411:
    (184) xx_assignment_operator ::= SUBASSIGN *

                     {default} reduce 184

State 412:
    (185) xx_assignment_operator ::= MULASSIGN *

                     {default} reduce 185

State 413:
    (186) xx_assignment_operator ::= DIVASSIGN *

                     {default} reduce 186

State 414:
    (187) xx_assignment_operator ::= CONCATASSIGN *

                     {default} reduce 187

State 415:
    (188) xx_assignment_operator ::= MODASSIGN *

                     {default} reduce 188

State 416:
          xx_let_assignment ::= IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  417
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 417:
    (189) xx_let_assignment ::= IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 189

State 418:
    (236) xx_assign_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 236

State 419:
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER INCR
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER DECR

                    IDENTIFIER shift  420
                  BRACKET_OPEN shift  438

State 420:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= * xx_array_offset_list xx_array_offset
          xx_array_offset_list ::= * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * DECR

                 SBRACKET_OPEN shift  423
                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
                          INCR shift  436
                          DECR shift  437
        xx_assignment_operator shift  421
          xx_array_offset_list shift  430
               xx_array_offset shift  435

State 421:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  422
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 422:
    (190) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 190

State 423:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_array_offset ::= SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                SBRACKET_CLOSE shift  424
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  429
                 xx_index_expr shift  427
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 424:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  425

State 425:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  426
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 426:
    (193) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 193

State 427:
          xx_array_offset ::= SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  428

State 428:
    (202) xx_array_offset ::= SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE *

                     {default} reduce 202

State 429:
    (208) xx_index_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                SBRACKET_CLOSE reduce 208

State 430:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_array_offset_list * xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= xx_array_offset_list * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE

                 SBRACKET_OPEN shift  434
                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  431
               xx_array_offset shift  433

State 431:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  432
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 432:
    (194) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr *

                     {default} reduce 194

State 433:
    (200) xx_array_offset_list ::= xx_array_offset_list xx_array_offset *

                     {default} reduce 200

State 434:
          xx_array_offset ::= SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  429
                 xx_index_expr shift  427
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 435:
    (201) xx_array_offset_list ::= xx_array_offset *

                     {default} reduce 201

State 436:
    (203) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER INCR *

                     {default} reduce 203

State 437:
    (204) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER DECR *

                     {default} reduce 204

State 438:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN * STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  439
                        STRING shift  443

State 439:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  440

State 440:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  441

State 441:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  442
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 442:
    (191) xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 191

State 443:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  444

State 444:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  445

State 445:
          xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  446
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 446:
    (192) xx_let_assignment ::= IDENTIFIER ARROW BRACKET_OPEN STRING BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 192

State 447:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  448

State 448:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * xx_array_offset_list xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= * xx_array_offset_list xx_array_offset
          xx_array_offset_list ::= * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE

                 SBRACKET_OPEN shift  451
                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  449
          xx_array_offset_list shift  455
               xx_array_offset shift  435

State 449:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  450
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 450:
    (195) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 195

State 451:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_array_offset ::= SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                SBRACKET_CLOSE shift  452
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  429
                 xx_index_expr shift  427
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 452:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  453

State 453:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  454
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 454:
    (196) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 196

State 455:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list * xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= xx_array_offset_list * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE

                 SBRACKET_OPEN shift  434
                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  456
               xx_array_offset shift  433

State 456:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  457
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 457:
    (197) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr *

                     {default} reduce 197

State 458:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_array_offset ::= SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                SBRACKET_CLOSE shift  459
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  429
                 xx_index_expr shift  427
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 459:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  460

State 460:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  461
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 461:
    (198) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 198

State 462:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= IDENTIFIER xx_array_offset_list * xx_assignment_operator xx_assign_expr
          xx_array_offset_list ::= xx_array_offset_list * xx_array_offset
          xx_array_offset ::= * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE

                 SBRACKET_OPEN shift  434
                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  463
               xx_array_offset shift  433

State 463:
          xx_let_assignment ::= IDENTIFIER xx_array_offset_list xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  464
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 464:
    (199) xx_let_assignment ::= IDENTIFIER xx_array_offset_list xx_assignment_operator xx_assign_expr *

                     {default} reduce 199

State 465:
    (205) xx_let_assignment ::= IDENTIFIER INCR *

                     {default} reduce 205

State 466:
    (206) xx_let_assignment ::= IDENTIFIER DECR *

                     {default} reduce 206

State 467:
          xx_let_assignment ::= BRACKET_OPEN * IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  468

State 468:
          xx_let_assignment ::= BRACKET_OPEN IDENTIFIER * BRACKET_CLOSE xx_assignment_operator xx_assign_expr

                 BRACKET_CLOSE shift  469

State 469:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_assignment_operator ::= * MODASSIGN
          xx_let_assignment ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  409
                     ADDASSIGN shift  410
                     SUBASSIGN shift  411
                     MULASSIGN shift  412
                     DIVASSIGN shift  413
                  CONCATASSIGN shift  414
                     MODASSIGN shift  415
        xx_assignment_operator shift  470

State 470:
          xx_let_assignment ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  418
                xx_assign_expr shift  471
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 471:
    (207) xx_let_assignment ::= BRACKET_OPEN IDENTIFIER BRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 207

State 472:
    (181) xx_let_assignments ::= xx_let_assignment *

                     {default} reduce 181

State 473:
          xx_echo_statement ::= ECHO * xx_echo_expressions DOTCOMMA
          xx_echo_expressions ::= * xx_echo_expressions COMMA xx_echo_expression
          xx_echo_expressions ::= * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  478
           xx_echo_expressions shift  474
            xx_echo_expression shift  479
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 474:
          xx_echo_statement ::= ECHO xx_echo_expressions * DOTCOMMA
          xx_echo_expressions ::= xx_echo_expressions * COMMA xx_echo_expression

                         COMMA shift  476
                      DOTCOMMA shift  475

State 475:
    (209) xx_echo_statement ::= ECHO xx_echo_expressions DOTCOMMA *

                     {default} reduce 209

State 476:
          xx_echo_expressions ::= xx_echo_expressions COMMA * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  478
            xx_echo_expression shift  477
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 477:
    (210) xx_echo_expressions ::= xx_echo_expressions COMMA xx_echo_expression *

                     {default} reduce 210

State 478:
    (212) xx_echo_expression ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                     {default} reduce 212

State 479:
    (211) xx_echo_expressions ::= xx_echo_expression *

                     {default} reduce 211

State 480:
          xx_mcall_statement ::= xx_mcall_expr * DOTCOMMA
    (306) xx_common_expr ::= xx_mcall_expr *

                      DOTCOMMA shift  481
                     {default} reduce 306

State 481:
    (213) xx_mcall_statement ::= xx_mcall_expr DOTCOMMA *

                     {default} reduce 213

State 482:
          xx_fcall_statement ::= xx_fcall_expr * DOTCOMMA
    (308) xx_common_expr ::= xx_fcall_expr *

                      DOTCOMMA shift  483
                     {default} reduce 308

State 483:
    (214) xx_fcall_statement ::= xx_fcall_expr DOTCOMMA *

                     {default} reduce 214

State 484:
          xx_scall_statement ::= xx_scall_expr * DOTCOMMA
    (307) xx_common_expr ::= xx_scall_expr *

                      DOTCOMMA shift  485
                     {default} reduce 307

State 485:
    (215) xx_scall_statement ::= xx_scall_expr DOTCOMMA *

                     {default} reduce 215

State 486:
          xx_fetch_statement ::= xx_fetch_expr * DOTCOMMA
    (271) xx_common_expr ::= xx_fetch_expr *

                      DOTCOMMA shift  487
                     {default} reduce 271

State 487:
    (216) xx_fetch_statement ::= xx_fetch_expr DOTCOMMA *

                     {default} reduce 216

State 488:
          xx_return_statement ::= RETURN * xx_common_expr DOTCOMMA
          xx_return_statement ::= RETURN * DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  491
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  489
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 489:
          xx_return_statement ::= RETURN xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                      DOTCOMMA shift  490

State 490:
    (217) xx_return_statement ::= RETURN xx_common_expr DOTCOMMA *

                     {default} reduce 217

State 491:
    (218) xx_return_statement ::= RETURN DOTCOMMA *

                     {default} reduce 218

State 492:
          xx_require_statement ::= REQUIRE * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= REQUIRE * xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  493
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 493:
          xx_require_statement ::= REQUIRE xx_common_expr * DOTCOMMA
    (239) xx_common_expr ::= REQUIRE xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                      DOTCOMMA shift  494

State 494:
    (219) xx_require_statement ::= REQUIRE xx_common_expr DOTCOMMA *

                     {default} reduce 219

State 495:
          xx_unset_statement ::= UNSET * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  496
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 496:
          xx_unset_statement ::= UNSET xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                      DOTCOMMA shift  497

State 497:
    (220) xx_unset_statement ::= UNSET xx_common_expr DOTCOMMA *

                     {default} reduce 220

State 498:
          xx_throw_statement ::= THROW * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  499
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 499:
          xx_throw_statement ::= THROW xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                      DOTCOMMA shift  500

State 500:
    (221) xx_throw_statement ::= THROW xx_common_expr DOTCOMMA *

                     {default} reduce 221

State 501:
          xx_declare_statement ::= TYPE_INTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  502
           xx_declare_variable shift  509

State 502:
          xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  503

State 503:
    (222) xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 222

State 504:
          xx_declare_variable_list ::= xx_declare_variable_list COMMA * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
           xx_declare_variable shift  505

State 505:
    (232) xx_declare_variable_list ::= xx_declare_variable_list COMMA xx_declare_variable *

                     {default} reduce 232

State 506:
    (234) xx_declare_variable ::= IDENTIFIER *
          xx_declare_variable ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  507
                     {default} reduce 234

State 507:
          xx_declare_variable ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  508

State 508:
    (235) xx_declare_variable ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 235

State 509:
    (233) xx_declare_variable_list ::= xx_declare_variable *

                     {default} reduce 233

State 510:
          xx_declare_statement ::= TYPE_UINTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  511
           xx_declare_variable shift  509

State 511:
          xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  512

State 512:
    (223) xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 223

State 513:
          xx_declare_statement ::= TYPE_CHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  514
           xx_declare_variable shift  509

State 514:
          xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  515

State 515:
    (224) xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 224

State 516:
          xx_declare_statement ::= TYPE_UCHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  517
           xx_declare_variable shift  509

State 517:
          xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  518

State 518:
    (225) xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 225

State 519:
          xx_declare_statement ::= TYPE_LONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  520
           xx_declare_variable shift  509

State 520:
          xx_declare_statement ::= TYPE_LONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  521

State 521:
    (226) xx_declare_statement ::= TYPE_LONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 226

State 522:
          xx_declare_statement ::= TYPE_ULONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  523
           xx_declare_variable shift  509

State 523:
          xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  524

State 524:
    (227) xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 227

State 525:
          xx_declare_statement ::= TYPE_DOUBLE * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  526
           xx_declare_variable shift  509

State 526:
          xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  527

State 527:
    (228) xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list DOTCOMMA *

                     {default} reduce 228

State 528:
          xx_declare_statement ::= TYPE_STRING * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  529
           xx_declare_variable shift  509

State 529:
          xx_declare_statement ::= TYPE_STRING xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  530

State 530:
    (229) xx_declare_statement ::= TYPE_STRING xx_declare_variable_list DOTCOMMA *

                     {default} reduce 229

State 531:
          xx_declare_statement ::= TYPE_BOOL * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  532
           xx_declare_variable shift  509

State 532:
          xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  533

State 533:
    (230) xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list DOTCOMMA *

                     {default} reduce 230

State 534:
          xx_declare_statement ::= TYPE_VAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  506
      xx_declare_variable_list shift  535
           xx_declare_variable shift  509

State 535:
          xx_declare_statement ::= TYPE_VAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  504
                      DOTCOMMA shift  536

State 536:
    (231) xx_declare_statement ::= TYPE_VAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 231

State 537:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253

State 538:
    (332) xx_comment ::= COMMENT *

                     {default} reduce 332

State 539:
    (333) xx_cblock ::= CBLOCK *

                     {default} reduce 333

State 540:
    (130) xx_statement_list ::= xx_statement *

                     {default} reduce 130

State 541:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  542
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 542:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                  BRACKET_OPEN shift  543

State 543:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  544
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 544:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  545
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 545:
    (176) xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 176

State 546:
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  547

State 547:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                            IN shift  548

State 548:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                       REVERSE shift  553
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  549
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 549:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                  BRACKET_OPEN shift  550

State 550:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  551
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 551:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  552
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 552:
    (177) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 177

State 553:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                xx_common_expr shift  554
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 554:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ARROW IDENTIFIER
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
          xx_common_expr ::= xx_common_expr * INSTANCEOF xx_common_expr
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= xx_common_expr * ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * QUESTION xx_common_expr COLON xx_common_expr

                      QUESTION shift  278
                    INSTANCEOF shift  276
                           AND shift  272
                            OR shift  274
                        EQUALS shift  231
                     IDENTICAL shift  237
                          LESS shift  243
                       GREATER shift  246
                     LESSEQUAL shift  249
                  GREATEREQUAL shift  251
                  NOTIDENTICAL shift  240
                     NOTEQUALS shift  234
                           ADD shift  260
                           SUB shift  262
                        CONCAT shift  270
                           MUL shift  264
                           DIV shift  266
                           MOD shift  268
                 SBRACKET_OPEN shift  257
                         ARROW shift  253
                  BRACKET_OPEN shift  555

State 555:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  556
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 556:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  557
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 557:
    (178) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 178

State 558:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  559

State 559:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_eval_expr ::= * xx_common_expr

                       REQUIRE shift  235
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                  BRACKET_OPEN shift  322
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                        STRING shift  304
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                  xx_eval_expr shift  560
                xx_common_expr shift  395
                 xx_mcall_expr shift  329
                 xx_fcall_expr shift  331
                 xx_scall_expr shift  330
                 xx_fetch_expr shift  300

State 560:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  561

State 561:
    (173) xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 173

State 562:
    (171) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 171

State 563:
    (169) xx_loop_statement ::= LOOP BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 169

State 564:
          xx_case_clause ::= DEFAULT * COLON xx_statement_list

                         COLON shift  565

State 565:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_case_clause ::= DEFAULT COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  566
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 566:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (168) xx_case_clause ::= DEFAULT COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486
                     {default} reduce 168

State 567:
    (165) xx_case_clauses ::= xx_case_clause *

                     {default} reduce 165

State 568:
    (160) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 160

State 569:
    (156) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                          ELSE shift  570
                     {default} reduce 156

State 570:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  571

State 571:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  574
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  572
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 572:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  573
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 573:
    (161) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 161

State 574:
    (157) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 157

State 575:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  576
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 576:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  577

State 577:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  578
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  579
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 578:
     (72) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 72

State 579:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  580
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 580:
     (74) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 74

State 581:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  66
             PARENTHESES_CLOSE shift  582

State 582:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         ARROW shift  587
                  BRACKET_OPEN shift  583

State 583:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  584
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  585
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 584:
     (65) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 65

State 585:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  586
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 586:
     (67) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 67

State 587:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  588
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 588:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  589

State 589:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  590
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  591
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 590:
     (73) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 73

State 591:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  592
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 592:
     (75) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 75

State 593:
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                        INLINE shift  105
            xx_visibility_list shift  594
                 xx_visibility shift  124

State 594:
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                      FUNCTION shift  595
                        INLINE shift  105
                 xx_visibility shift  99

State 595:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  596

State 596:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  597

State 597:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type NOT IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  96
             PARENTHESES_CLOSE shift  598
                    IDENTIFIER shift  68
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
             xx_parameter_list shift  609
             xx_parameter_type shift  84
             xx_parameter_cast shift  92
                  xx_parameter shift  98

State 598:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         ARROW shift  603
                  BRACKET_OPEN shift  599

State 599:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  600
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  601
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 600:
     (68) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 68

State 601:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  602
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 602:
     (70) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 70

State 603:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  604
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 604:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  605

State 605:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  606
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  607
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 606:
     (76) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 76

State 607:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  608
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 608:
     (78) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 78

State 609:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  66
             PARENTHESES_CLOSE shift  610

State 610:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         ARROW shift  615
                  BRACKET_OPEN shift  611

State 611:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  612
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  613
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 612:
     (69) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 69

State 613:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  614
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 614:
     (71) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 71

State 615:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW * xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_method_return_type ::= * VOID
          xx_method_return_type ::= * xx_method_return_type_list
          xx_method_return_type_list ::= * xx_method_return_type_list BITWISE_OR xx_method_return_type_item
          xx_method_return_type_list ::= * xx_method_return_type_item
          xx_method_return_type_item ::= * xx_parameter_type
          xx_method_return_type_item ::= * xx_parameter_type NOT
          xx_method_return_type_item ::= * xx_parameter_cast
          xx_method_return_type_item ::= * xx_parameter_cast_collection
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_cast_collection ::= * LESS IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  41
                          VOID shift  33
                  TYPE_INTEGER shift  47
                 TYPE_UINTEGER shift  48
                     TYPE_LONG shift  49
                    TYPE_ULONG shift  50
                     TYPE_CHAR shift  51
                    TYPE_UCHAR shift  52
                   TYPE_DOUBLE shift  53
                     TYPE_BOOL shift  54
                   TYPE_STRING shift  55
                    TYPE_ARRAY shift  56
                      TYPE_VAR shift  57
         xx_method_return_type shift  616
    xx_method_return_type_list shift  34
    xx_method_return_type_item shift  58
             xx_parameter_type shift  37
             xx_parameter_cast shift  39
  xx_parameter_cast_collection shift  40

State 616:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  617

State 617:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  618
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
             xx_statement_list shift  619
                  xx_statement shift  540
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 618:
     (77) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 77

State 619:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_cblock
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_require_statement
          xx_statement ::= * xx_fetch_statement
          xx_statement ::= * xx_fcall_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_statement ::= * xx_empty_statement
          xx_empty_statement ::= * DOTCOMMA
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_fcall_statement ::= * xx_fcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_fetch_statement ::= * xx_fetch_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_require_statement ::= * REQUIRE xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET xx_common_expr DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_common_expr
          xx_common_expr ::= * REQUIRE xx_common_expr
          xx_common_expr ::= * CLONE xx_common_expr
          xx_common_expr ::= * EMPTY xx_common_expr
          xx_common_expr ::= * LIKELY xx_common_expr
          xx_common_expr ::= * UNLIKELY xx_common_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * LESS IDENTIFIER GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr ARROW IDENTIFIER
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * xx_common_expr SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * xx_common_expr INSTANCEOF xx_common_expr
          xx_fetch_expr ::= * FETCH IDENTIFIER COMMA xx_common_expr
          xx_common_expr ::= * xx_fetch_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_fcall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * BRACKET_OPEN IDENTIFIER BRACKET_CLOSE DOUBLECOLON BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN IDENTIFIER BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * xx_common_expr ARROW BRACKET_OPEN STRING BRACKET_CLOSE PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_common_expr ::= * xx_fcall_expr
          xx_common_expr ::= * xx_common_expr QUESTION xx_common_expr COLON xx_common_expr
          xx_comment ::= * COMMENT
          xx_cblock ::= * CBLOCK

                       REQUIRE shift  492
                        LIKELY shift  244
                      UNLIKELY shift  247
                          LESS shift  288
                         CLONE shift  238
                         EMPTY shift  241
                         ISSET shift  232
                         FETCH shift  296
                        TYPEOF shift  301
                           NEW shift  315
                           NOT shift  229
                 SBRACKET_OPEN shift  311
                    IDENTIFIER shift  292
                      DOTCOMMA shift  188
                  BRACKET_OPEN shift  322
                 BRACKET_CLOSE shift  620
                       COMMENT shift  538
                      CONSTANT shift  310
              PARENTHESES_OPEN shift  282
                  TYPE_INTEGER shift  501
                 TYPE_UINTEGER shift  510
                     TYPE_LONG shift  519
                    TYPE_ULONG shift  522
                     TYPE_CHAR shift  513
                    TYPE_UCHAR shift  516
                   TYPE_DOUBLE shift  525
                     TYPE_BOOL shift  531
                   TYPE_STRING shift  528
                      TYPE_VAR shift  534
                         BREAK shift  189
                      CONTINUE shift  191
                            IF shift  193
                        SWITCH shift  202
                          LOOP shift  213
                         WHILE shift  217
                            DO shift  222
                           FOR shift  396
                           LET shift  403
                        STRING shift  304
                          ECHO shift  473
                        RETURN shift  488
                         UNSET shift  495
                         THROW shift  498
                       INTEGER shift  303
                          CHAR shift  305
                        DOUBLE shift  306
                          NULL shift  307
                          TRUE shift  308
                         FALSE shift  309
                        CBLOCK shift  539
                    xx_comment shift  186
                     xx_cblock shift  166
                  xx_statement shift  165
              xx_let_statement shift  167
               xx_if_statement shift  168
             xx_loop_statement shift  169
             xx_echo_statement shift  170
           xx_return_statement shift  171
          xx_require_statement shift  172
            xx_fetch_statement shift  173
            xx_fcall_statement shift  174
            xx_mcall_statement shift  175
            xx_scall_statement shift  176
            xx_unset_statement shift  177
            xx_throw_statement shift  178
          xx_declare_statement shift  179
            xx_break_statement shift  180
         xx_continue_statement shift  181
            xx_while_statement shift  182
         xx_do_while_statement shift  183
           xx_switch_statement shift  184
              xx_for_statement shift  185
            xx_empty_statement shift  187
                xx_common_expr shift  537
                 xx_mcall_expr shift  480
                 xx_fcall_expr shift  482
                 xx_scall_expr shift  484
                 xx_fetch_expr shift  486

State 620:
     (79) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 79

State 621:
     (32) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition *
          xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition * xx_class_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 32
                       COMMENT shift  624
                         CONST shift  133
                        INLINE shift  105
   xx_class_methods_definition shift  622
            xx_visibility_list shift  156
     xx_class_const_definition shift  125
    xx_class_method_definition shift  623
                 xx_visibility shift  124

State 622:
     (35) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 35
                       COMMENT shift  593
                        INLINE shift  105
            xx_visibility_list shift  156
    xx_class_method_definition shift  155
                 xx_visibility shift  124

State 623:
     (59) xx_class_methods_definition ::= xx_class_method_definition *

                     {default} reduce 59

State 624:
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                         CONST shift  128
                        INLINE shift  105
            xx_visibility_list shift  594
                 xx_visibility shift  124

State 625:
     (40) xx_class_properties_definition ::= xx_class_properties_definition xx_class_property_definition *

                     {default} reduce 40

State 626:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                         CONST shift  128
                        INLINE shift  105
            xx_visibility_list shift  627
                 xx_visibility shift  124

State 627:
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                    IDENTIFIER shift  628
                      ABSTRACT shift  106
                         FINAL shift  107
                      FUNCTION shift  595
                        INLINE shift  105
                 xx_visibility shift  99

State 628:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  629
                  BRACKET_OPEN shift  635
                        ASSIGN shift  630
   xx_class_property_shortcuts shift  645

State 629:
     (42) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 42

State 630:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  631

State 631:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  632
                  BRACKET_OPEN shift  635
   xx_class_property_shortcuts shift  633

State 632:
     (44) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 44

State 633:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  634

State 634:
     (48) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 48

State 635:
          xx_class_property_shortcuts ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_property_shortcuts ::= BRACKET_OPEN * xx_class_property_shortcuts_list BRACKET_CLOSE
          xx_class_property_shortcuts_list ::= * xx_class_property_shortcuts_list COMMA xx_class_property_shortcut
          xx_class_property_shortcuts_list ::= * xx_class_property_shortcut
          xx_class_property_shortcut ::= * IDENTIFIER
          xx_class_property_shortcut ::= * COMMENT IDENTIFIER

                    IDENTIFIER shift  641
                 BRACKET_CLOSE shift  636
                       COMMENT shift  642
xx_class_property_shortcuts_list shift  637
    xx_class_property_shortcut shift  644

State 636:
     (50) xx_class_property_shortcuts ::= BRACKET_OPEN BRACKET_CLOSE *

                      DOTCOMMA reduce 50

State 637:
          xx_class_property_shortcuts ::= BRACKET_OPEN xx_class_property_shortcuts_list * BRACKET_CLOSE
          xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list * COMMA xx_class_property_shortcut

                         COMMA shift  639
                 BRACKET_CLOSE shift  638

State 638:
     (51) xx_class_property_shortcuts ::= BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE *

                      DOTCOMMA reduce 51

State 639:
          xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list COMMA * xx_class_property_shortcut
          xx_class_property_shortcut ::= * IDENTIFIER
          xx_class_property_shortcut ::= * COMMENT IDENTIFIER

                    IDENTIFIER shift  641
                       COMMENT shift  642
    xx_class_property_shortcut shift  640

State 640:
     (52) xx_class_property_shortcuts_list ::= xx_class_property_shortcuts_list COMMA xx_class_property_shortcut *

                     {default} reduce 52

State 641:
     (54) xx_class_property_shortcut ::= IDENTIFIER *

                     {default} reduce 54

State 642:
          xx_class_property_shortcut ::= COMMENT * IDENTIFIER

                    IDENTIFIER shift  643

State 643:
     (55) xx_class_property_shortcut ::= COMMENT IDENTIFIER *

                     {default} reduce 55

State 644:
     (53) xx_class_property_shortcuts_list ::= xx_class_property_shortcut *

                     {default} reduce 53

State 645:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  646

State 646:
     (46) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 46

State 647:
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                    IDENTIFIER shift  648
                      ABSTRACT shift  106
                         FINAL shift  107
                      FUNCTION shift  157
                        INLINE shift  105
                 xx_visibility shift  99

State 648:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  649
                  BRACKET_OPEN shift  635
                        ASSIGN shift  650
   xx_class_property_shortcuts shift  655

State 649:
     (43) xx_class_property_definition ::= xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 43

State 650:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * CHAR
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_literal_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_literal_expr ::= * CONSTANT
          xx_literal_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE

                 SBRACKET_OPEN shift  82
                    IDENTIFIER shift  78
                      CONSTANT shift  81
                        STRING shift  73
                       INTEGER shift  71
                          CHAR shift  72
                        DOUBLE shift  74
                          NULL shift  75
                          TRUE shift  77
                         FALSE shift  76
               xx_literal_expr shift  651

State 651:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * xx_class_property_shortcuts DOTCOMMA
          xx_class_property_shortcuts ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_property_shortcuts ::= * BRACKET_OPEN xx_class_property_shortcuts_list BRACKET_CLOSE

                      DOTCOMMA shift  652
                  BRACKET_OPEN shift  635
   xx_class_property_shortcuts shift  653

State 652:
     (45) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 45

State 653:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  654

State 654:
     (49) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 49

State 655:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER xx_class_property_shortcuts * DOTCOMMA

                      DOTCOMMA shift  656

State 656:
     (47) xx_class_property_definition ::= xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA *

                     {default} reduce 47

State 657:
     (29) xx_class_definition ::= xx_class_consts_definition *
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 29
                       COMMENT shift  626
                         CONST shift  133
                        INLINE shift  105
xx_class_properties_definition shift  658
   xx_class_methods_definition shift  661
  xx_class_property_definition shift  662
            xx_visibility_list shift  647
     xx_class_const_definition shift  125
    xx_class_method_definition shift  623
                 xx_visibility shift  124

State 658:
     (33) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition *
          xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition * xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 33
                       COMMENT shift  660
                        INLINE shift  105
   xx_class_methods_definition shift  659
  xx_class_property_definition shift  625
            xx_visibility_list shift  647
    xx_class_method_definition shift  623
                 xx_visibility shift  124

State 659:
     (36) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 36
                       COMMENT shift  593
                        INLINE shift  105
            xx_visibility_list shift  156
    xx_class_method_definition shift  155
                 xx_visibility shift  124

State 660:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER xx_class_property_shortcuts DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr xx_class_property_shortcuts DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                        INLINE shift  105
            xx_visibility_list shift  627
                 xx_visibility shift  124

State 661:
     (34) xx_class_definition ::= xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 34
                       COMMENT shift  593
                        INLINE shift  105
            xx_visibility_list shift  156
    xx_class_method_definition shift  155
                 xx_visibility shift  124

State 662:
     (41) xx_class_properties_definition ::= xx_class_property_definition *

                     {default} reduce 41

State 663:
     (30) xx_class_definition ::= xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE ARROW xx_method_return_type BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  100
                     PROTECTED shift  101
                        STATIC shift  103
                       PRIVATE shift  102
                        SCOPED shift  104
                      ABSTRACT shift  106
                         FINAL shift  107
                 BRACKET_CLOSE reduce 30
                       COMMENT shift  593
                        INLINE shift  105
            xx_visibility_list shift  156
    xx_class_method_definition shift  155
                 xx_visibility shift  124

State 664:
          xx_implements_list ::= xx_implements_list COMMA * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  666
                 xx_implements shift  665

State 665:
     (23) xx_implements_list ::= xx_implements_list COMMA xx_implements *

                     {default} reduce 23

State 666:
     (25) xx_implements ::= IDENTIFIER *

                     {default} reduce 25

State 667:
     (24) xx_implements_list ::= xx_implements *

                     {default} reduce 24

State 668:
          xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  666
            xx_implements_list shift  669
                 xx_implements shift  667

State 669:
          xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  664
                  BRACKET_OPEN shift  149
                 xx_class_body shift  670

State 670:
     (14) xx_class_def ::= CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 14

State 671:
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                         CLASS shift  672

State 672:
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body

                    IDENTIFIER shift  673

State 673:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * IMPLEMENTS xx_implements_list xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  675
                    IMPLEMENTS shift  678
                  BRACKET_OPEN shift  149
                 xx_class_body shift  674

State 674:
     (16) xx_class_def ::= ABSTRACT CLASS IDENTIFIER xx_class_body *

                     {default} reduce 16

State 675:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  676

State 676:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  149
                 xx_class_body shift  677

State 677:
     (17) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 17

State 678:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS * xx_implements_list xx_class_body
          xx_implements_list ::= * xx_implements_list COMMA xx_implements
          xx_implements_list ::= * xx_implements
          xx_implements ::= * IDENTIFIER

                    IDENTIFIER shift  666
            xx_implements_list shift  679
                 xx_implements shift  667

State 679:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_implements_list ::= xx_implements_list * COMMA xx_implements

                         COMMA shift  664
                  BRACKET_OPEN shift  149
                 xx_class_body shift  680

State 680:
     (18) xx_class_def ::= ABSTRACT CLASS IDENTIFIER IMPLEMENTS xx_implements_list xx_class_body *

                     {default} reduce 18

State 681:
          xx_class_def ::= FINAL * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= FINAL * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                         CLASS shift  682

State 682:
          xx_class_def ::= FINAL CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= FINAL CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                    IDENTIFIER shift  683

State 683:
          xx_class_def ::= FINAL CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= FINAL CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                       EXTENDS shift  685
                  BRACKET_OPEN shift  149
                 xx_class_body shift  684

State 684:
     (19) xx_class_def ::= FINAL CLASS IDENTIFIER xx_class_body *

                     {default} reduce 19

State 685:
          xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  686

State 686:
          xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE

                  BRACKET_OPEN shift  149
                 xx_class_body shift  687

State 687:
     (20) xx_class_def ::= FINAL CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 20

State 688:
      (3) xx_top_statement_list ::= xx_top_statement *

                     {default} reduce 3

