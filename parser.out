 State 0:
          program ::= * xx_language
          xx_language ::= * xx_top_statement_list
          xx_top_statement_list ::= * xx_top_statement_list xx_top_statement
          xx_top_statement_list ::= * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT

                     NAMESPACE shift  7
                         CLASS shift  10
                      ABSTRACT shift  477
                       COMMENT shift  355
                       program accept
                   xx_language shift  1
         xx_top_statement_list shift  2
              xx_top_statement shift  484
              xx_namespace_def shift  4
                  xx_class_def shift  5
                    xx_comment shift  6

State 1:
      (0) program ::= xx_language *

                             $ reduce 0

State 2:
      (1) xx_language ::= xx_top_statement_list *
          xx_top_statement_list ::= xx_top_statement_list * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_class_def ::= * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER xx_class_body
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body
          xx_comment ::= * COMMENT

                             $ reduce 1
                     NAMESPACE shift  7
                         CLASS shift  10
                      ABSTRACT shift  477
                       COMMENT shift  355
              xx_top_statement shift  3
              xx_namespace_def shift  4
                  xx_class_def shift  5
                    xx_comment shift  6

State 3:
      (2) xx_top_statement_list ::= xx_top_statement_list xx_top_statement *

                     {default} reduce 2

State 4:
      (4) xx_top_statement ::= xx_namespace_def *

                     {default} reduce 4

State 5:
      (5) xx_top_statement ::= xx_class_def *

                     {default} reduce 5

State 6:
      (6) xx_top_statement ::= xx_comment *

                     {default} reduce 6

State 7:
          xx_namespace_def ::= NAMESPACE * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  8

State 8:
          xx_namespace_def ::= NAMESPACE IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  9

State 9:
      (7) xx_namespace_def ::= NAMESPACE IDENTIFIER DOTCOMMA *

                     {default} reduce 7

State 10:
          xx_class_def ::= CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                    IDENTIFIER shift  11

State 11:
          xx_class_def ::= CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE

                       EXTENDS shift  13
                  BRACKET_OPEN shift  16
                 xx_class_body shift  12

State 12:
      (8) xx_class_def ::= CLASS IDENTIFIER xx_class_body *

                     {default} reduce 8

State 13:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  14

State 14:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  16
                 xx_class_body shift  15

State 15:
      (9) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 9

State 16:
          xx_class_body ::= BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_body ::= BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE shift  19
                       COMMENT shift  456
                         CONST shift  450
                        INLINE shift  420
                         FINAL shift  422
           xx_class_definition shift  17
xx_class_properties_definition shift  20
    xx_class_consts_definition shift  470
   xx_class_methods_definition shift  476
  xx_class_property_definition shift  475
            xx_visibility_list shift  463
     xx_class_const_definition shift  469
    xx_class_method_definition shift  443
                 xx_visibility shift  439

State 17:
          xx_class_body ::= BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  18

State 18:
     (12) xx_class_body ::= BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 12

State 19:
     (13) xx_class_body ::= BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 13

State 20:
     (14) xx_class_definition ::= xx_class_properties_definition *
          xx_class_definition ::= xx_class_properties_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 14
                       COMMENT shift  456
                         CONST shift  450
                        INLINE shift  420
                         FINAL shift  422
    xx_class_consts_definition shift  440
   xx_class_methods_definition shift  21
  xx_class_property_definition shift  455
            xx_visibility_list shift  463
     xx_class_const_definition shift  469
    xx_class_method_definition shift  443
                 xx_visibility shift  439

State 21:
     (17) xx_class_definition ::= xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 17
                       COMMENT shift  423
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  23
    xx_class_method_definition shift  22
                 xx_visibility shift  439

State 22:
     (31) xx_class_methods_definition ::= xx_class_methods_definition xx_class_method_definition *

                     {default} reduce 31

State 23:
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                      FUNCTION shift  24
                        INLINE shift  420
                         FINAL shift  422
                 xx_visibility shift  414

State 24:
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  25

State 25:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  26

State 26:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  410
             PARENTHESES_CLOSE shift  27
                    IDENTIFIER shift  399
                  TYPE_INTEGER shift  135
                 TYPE_UINTEGER shift  136
                     TYPE_LONG shift  137
                    TYPE_ULONG shift  138
                     TYPE_CHAR shift  139
                    TYPE_UCHAR shift  140
                   TYPE_DOUBLE shift  141
                     TYPE_BOOL shift  142
                   TYPE_STRING shift  143
                    TYPE_ARRAY shift  144
                      TYPE_VAR shift  145
             xx_parameter_list shift  391
                  xx_parameter shift  413
             xx_parameter_type shift  402
             xx_parameter_cast shift  406

State 27:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  28

State 28:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  29
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  30
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 29:
     (35) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 35

State 30:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  31
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 31:
     (37) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 37

State 32:
     (73) xx_statement_list ::= xx_statement_list xx_statement *

                     {default} reduce 73

State 33:
     (75) xx_statement ::= xx_let_statement *

                     {default} reduce 75

State 34:
     (76) xx_statement ::= xx_if_statement *

                     {default} reduce 76

State 35:
     (77) xx_statement ::= xx_loop_statement *

                     {default} reduce 77

State 36:
     (78) xx_statement ::= xx_echo_statement *

                     {default} reduce 78

State 37:
     (79) xx_statement ::= xx_return_statement *

                     {default} reduce 79

State 38:
     (80) xx_statement ::= xx_mcall_statement *

                     {default} reduce 80

State 39:
     (81) xx_statement ::= xx_scall_statement *

                     {default} reduce 81

State 40:
     (82) xx_statement ::= xx_unset_statement *

                     {default} reduce 82

State 41:
     (83) xx_statement ::= xx_throw_statement *

                     {default} reduce 83

State 42:
     (84) xx_statement ::= xx_declare_statement *

                     {default} reduce 84

State 43:
     (85) xx_statement ::= xx_break_statement *

                     {default} reduce 85

State 44:
     (86) xx_statement ::= xx_continue_statement *

                     {default} reduce 86

State 45:
     (87) xx_statement ::= xx_while_statement *

                     {default} reduce 87

State 46:
     (88) xx_statement ::= xx_do_while_statement *

                     {default} reduce 88

State 47:
     (89) xx_statement ::= xx_switch_statement *

                     {default} reduce 89

State 48:
     (90) xx_statement ::= xx_for_statement *

                     {default} reduce 90

State 49:
     (91) xx_statement ::= xx_comment *

                     {default} reduce 91

State 50:
          xx_break_statement ::= BREAK * DOTCOMMA

                      DOTCOMMA shift  51

State 51:
     (92) xx_break_statement ::= BREAK DOTCOMMA *

                     {default} reduce 92

State 52:
          xx_continue_statement ::= CONTINUE * DOTCOMMA

                      DOTCOMMA shift  53

State 53:
     (93) xx_continue_statement ::= CONTINUE DOTCOMMA *

                     {default} reduce 93

State 54:
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_eval_expr ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                  xx_eval_expr shift  55
                xx_common_expr shift  222
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 55:
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  56

State 56:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  385
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  57
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 57:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  58
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 58:
     (96) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE

                          ELSE shift  59
                     {default} reduce 96

State 59:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  60

State 60:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  384
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  61
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 61:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  62
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 62:
     (97) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 97

State 63:
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_eval_expr ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                  xx_eval_expr shift  64
                xx_common_expr shift  222
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 64:
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN xx_case_clauses BRACKET_CLOSE

                  BRACKET_OPEN shift  65

State 65:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * xx_case_clauses BRACKET_CLOSE
          xx_case_clauses ::= * xx_case_clauses xx_case_clause
          xx_case_clauses ::= * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  66
                          CASE shift  70
                       DEFAULT shift  380
               xx_case_clauses shift  67
                xx_case_clause shift  383

State 66:
    (100) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 100

State 67:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses * BRACKET_CLOSE
          xx_case_clauses ::= xx_case_clauses * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  68
                          CASE shift  70
                       DEFAULT shift  380
                xx_case_clause shift  69

State 68:
    (101) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE *

                     {default} reduce 101

State 69:
    (102) xx_case_clauses ::= xx_case_clauses xx_case_clause *

                     {default} reduce 102

State 70:
          xx_case_clause ::= CASE * xx_literal_expr COLON xx_statement_list
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  71

State 71:
          xx_case_clause ::= CASE xx_literal_expr * COLON xx_statement_list

                         COLON shift  72

State 72:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_case_clause ::= CASE xx_literal_expr COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  73
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 73:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (104) xx_case_clause ::= CASE xx_literal_expr COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290
                     {default} reduce 104

State 74:
          xx_loop_statement ::= LOOP * BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  75

State 75:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  379
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  76
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 76:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  77
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 77:
    (107) xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 107

State 78:
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_eval_expr ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                  xx_eval_expr shift  79
                xx_common_expr shift  222
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 79:
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  80

State 80:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  378
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  81
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 81:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  82
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 82:
    (109) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 109

State 83:
          xx_do_while_statement ::= DO * BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO * BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA

                  BRACKET_OPEN shift  84

State 84:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN * xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  374
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  85
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 85:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list * BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  86
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 86:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  87

State 87:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_eval_expr ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                  xx_eval_expr shift  88
                xx_common_expr shift  222
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 88:
          xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  89

State 89:
    (111) xx_do_while_statement ::= DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 111

State 90:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= NOT * xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  91
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 91:
    (165) xx_common_expr ::= NOT xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                     {default} reduce 165

State 92:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr EQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  103
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 93:
          xx_common_expr ::= ISSET * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE

                    IDENTIFIER shift  95
                 xx_isset_expr shift  94

State 94:
    (166) xx_common_expr ::= ISSET xx_isset_expr *

                     {default} reduce 166

State 95:
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE

                 SBRACKET_OPEN shift  96

State 96:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE

                    IDENTIFIER shift  97
                       INTEGER shift  99
                        STRING shift  101

State 97:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  98

State 98:
    (232) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE *

                     {default} reduce 232

State 99:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  100

State 100:
    (233) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE *

                     {default} reduce 233

State 101:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  102

State 102:
    (234) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE *

                     {default} reduce 234

State 103:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
    (167) xx_common_expr ::= xx_common_expr EQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 167

State 104:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr NOTEQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  105
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 105:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
    (168) xx_common_expr ::= xx_common_expr NOTEQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 168

State 106:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr IDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  107
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 107:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
    (169) xx_common_expr ::= xx_common_expr IDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 169

State 108:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr NOTIDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  109
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 109:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
    (170) xx_common_expr ::= xx_common_expr NOTIDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 170

State 110:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= xx_common_expr LESS * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  111
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 111:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
    (171) xx_common_expr ::= xx_common_expr LESS xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 171

State 112:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr GREATER * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  113
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 113:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
    (172) xx_common_expr ::= xx_common_expr GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 172

State 114:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr LESSEQUAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  115
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 115:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
    (173) xx_common_expr ::= xx_common_expr LESSEQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 173

State 116:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr GREATEREQUAL * xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  117
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 117:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (174) xx_common_expr ::= xx_common_expr GREATEREQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 174

State 118:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= xx_common_expr ADD * xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  119
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 119:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
    (181) xx_common_expr ::= xx_common_expr ADD xx_common_expr *
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 181

State 120:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= xx_common_expr SUB * xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  121
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 121:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
    (182) xx_common_expr ::= xx_common_expr SUB xx_common_expr *
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 182

State 122:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= xx_common_expr MUL * xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  123
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 123:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
    (183) xx_common_expr ::= xx_common_expr MUL xx_common_expr *
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                     {default} reduce 183

State 124:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= xx_common_expr DIV * xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  125
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 125:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
    (184) xx_common_expr ::= xx_common_expr DIV xx_common_expr *
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                     {default} reduce 184

State 126:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= xx_common_expr MOD * xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  127
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 127:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
    (185) xx_common_expr ::= xx_common_expr MOD xx_common_expr *
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                     {default} reduce 185

State 128:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr CONCAT * xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  129
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 129:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (186) xx_common_expr ::= xx_common_expr CONCAT xx_common_expr *
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 186

State 130:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= xx_common_expr AND * xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  131
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 131:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
    (187) xx_common_expr ::= xx_common_expr AND xx_common_expr *
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 187

State 132:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= xx_common_expr OR * xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  133
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 133:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (188) xx_common_expr ::= xx_common_expr OR xx_common_expr *

                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 188

State 134:
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= PARENTHESES_OPEN * xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN * xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                  TYPE_INTEGER shift  135
                 TYPE_UINTEGER shift  136
                     TYPE_LONG shift  137
                    TYPE_ULONG shift  138
                     TYPE_CHAR shift  139
                    TYPE_UCHAR shift  140
                   TYPE_DOUBLE shift  141
                     TYPE_BOOL shift  142
                   TYPE_STRING shift  143
                    TYPE_ARRAY shift  144
                      TYPE_VAR shift  145
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
             xx_parameter_type shift  148
                xx_common_expr shift  146
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 135:
     (62) xx_parameter_type ::= TYPE_INTEGER *

                     {default} reduce 62

State 136:
     (63) xx_parameter_type ::= TYPE_UINTEGER *

                     {default} reduce 63

State 137:
     (64) xx_parameter_type ::= TYPE_LONG *

                     {default} reduce 64

State 138:
     (65) xx_parameter_type ::= TYPE_ULONG *

                     {default} reduce 65

State 139:
     (66) xx_parameter_type ::= TYPE_CHAR *

                     {default} reduce 66

State 140:
     (67) xx_parameter_type ::= TYPE_UCHAR *

                     {default} reduce 67

State 141:
     (68) xx_parameter_type ::= TYPE_DOUBLE *

                     {default} reduce 68

State 142:
     (69) xx_parameter_type ::= TYPE_BOOL *

                     {default} reduce 69

State 143:
     (70) xx_parameter_type ::= TYPE_STRING *

                     {default} reduce 70

State 144:
     (71) xx_parameter_type ::= TYPE_ARRAY *

                     {default} reduce 71

State 145:
     (72) xx_parameter_type ::= TYPE_VAR *

                     {default} reduce 72

State 146:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_common_expr * PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
             PARENTHESES_CLOSE shift  147

State 147:
    (175) xx_common_expr ::= PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE *

                     {default} reduce 175

State 148:
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type * PARENTHESES_CLOSE xx_common_expr

             PARENTHESES_CLOSE shift  149

State 149:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE * xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  150
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 150:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (176) xx_common_expr ::= PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                     {default} reduce 176

State 151:
          xx_common_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER
          xx_common_expr ::= IDENTIFIER * DOUBLECOLON CONSTANT
          xx_common_expr ::= IDENTIFIER * SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
    (193) xx_common_expr ::= IDENTIFIER *
          xx_common_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  218
                         ARROW shift  152
                 SBRACKET_OPEN shift  215
                   DOUBLECOLON shift  208
                     {default} reduce 193

State 152:
          xx_common_expr ::= IDENTIFIER ARROW * IDENTIFIER
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  153

State 153:
    (177) xx_common_expr ::= IDENTIFIER ARROW IDENTIFIER *
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  154
                     {default} reduce 177

State 154:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
             PARENTHESES_CLOSE shift  207
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  155
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202
            xx_call_parameters shift  205
             xx_call_parameter shift  204

State 155:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (216) xx_call_parameter ::= xx_common_expr *

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 216

State 156:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= INSTANCEOF * xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  157
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 157:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (189) xx_common_expr ::= INSTANCEOF xx_common_expr *

                     {default} reduce 189

State 158:
          xx_common_expr ::= FETCH * IDENTIFIER COMMA xx_isset_expr

                    IDENTIFIER shift  159

State 159:
          xx_common_expr ::= FETCH IDENTIFIER * COMMA xx_isset_expr

                         COMMA shift  160

State 160:
          xx_common_expr ::= FETCH IDENTIFIER COMMA * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE

                    IDENTIFIER shift  95
                 xx_isset_expr shift  161

State 161:
    (190) xx_common_expr ::= FETCH IDENTIFIER COMMA xx_isset_expr *

                     {default} reduce 190

State 162:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= TYPEOF * xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  163
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 163:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (191) xx_common_expr ::= TYPEOF xx_common_expr *

                     {default} reduce 191

State 164:
    (192) xx_common_expr ::= CONSTANT *

                     {default} reduce 192

State 165:
    (194) xx_common_expr ::= INTEGER *

                     {default} reduce 194

State 166:
    (195) xx_common_expr ::= STRING *

                     {default} reduce 195

State 167:
    (196) xx_common_expr ::= CHAR *

                     {default} reduce 196

State 168:
    (197) xx_common_expr ::= DOUBLE *

                     {default} reduce 197

State 169:
    (198) xx_common_expr ::= NULL *

                     {default} reduce 198

State 170:
    (199) xx_common_expr ::= TRUE *

                     {default} reduce 199

State 171:
    (200) xx_common_expr ::= FALSE *

                     {default} reduce 200

State 172:
          xx_common_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * xx_array_list SBRACKET_CLOSE
          xx_array_list ::= * xx_array_list COMMA xx_array_item
          xx_array_list ::= * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  190
                SBRACKET_CLOSE shift  173
                       INTEGER shift  192
                        STRING shift  191
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  181
                 xx_array_list shift  174
                 xx_array_item shift  193
                  xx_array_key shift  178
                xx_array_value shift  189

State 173:
    (201) xx_common_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 201

State 174:
          xx_common_expr ::= SBRACKET_OPEN xx_array_list * SBRACKET_CLOSE
          xx_array_list ::= xx_array_list * COMMA xx_array_item

                         COMMA shift  176
                SBRACKET_CLOSE shift  175

State 175:
    (202) xx_common_expr ::= SBRACKET_OPEN xx_array_list SBRACKET_CLOSE *

                     {default} reduce 202

State 176:
          xx_array_list ::= xx_array_list COMMA * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  190
                       INTEGER shift  192
                        STRING shift  191
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  181
                 xx_array_item shift  177
                  xx_array_key shift  178
                xx_array_value shift  189

State 177:
    (217) xx_array_list ::= xx_array_list COMMA xx_array_item *

                     {default} reduce 217

State 178:
          xx_array_item ::= xx_array_key * COLON xx_array_value

                         COLON shift  179

State 179:
          xx_array_item ::= xx_array_key COLON * xx_array_value
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  182
                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  181
                xx_array_value shift  180

State 180:
    (219) xx_array_item ::= xx_array_key COLON xx_array_value *

                     {default} reduce 219

State 181:
    (224) xx_array_value ::= xx_literal_expr *

                     {default} reduce 224

State 182:
    (225) xx_array_value ::= IDENTIFIER *

                     {default} reduce 225

State 183:
    (226) xx_literal_expr ::= INTEGER *

                     {default} reduce 226

State 184:
    (227) xx_literal_expr ::= STRING *

                     {default} reduce 227

State 185:
    (228) xx_literal_expr ::= DOUBLE *

                     {default} reduce 228

State 186:
    (229) xx_literal_expr ::= NULL *

                     {default} reduce 229

State 187:
    (230) xx_literal_expr ::= FALSE *

                     {default} reduce 230

State 188:
    (231) xx_literal_expr ::= TRUE *

                     {default} reduce 231

State 189:
    (220) xx_array_item ::= xx_array_value *

                     {default} reduce 220

State 190:
    (221) xx_array_key ::= IDENTIFIER *
    (225) xx_array_value ::= IDENTIFIER *

                         COLON reduce 221
                     {default} reduce 225

State 191:
    (222) xx_array_key ::= STRING *
    (227) xx_literal_expr ::= STRING *

                         COLON reduce 222
                     {default} reduce 227

State 192:
    (223) xx_array_key ::= INTEGER *
    (226) xx_literal_expr ::= INTEGER *

                         COLON reduce 223
                     {default} reduce 226

State 193:
    (218) xx_array_list ::= xx_array_item *

                     {default} reduce 218

State 194:
          xx_common_expr ::= NEW * IDENTIFIER
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  195

State 195:
    (203) xx_common_expr ::= NEW IDENTIFIER *
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  196
                     {default} reduce 203

State 196:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
             PARENTHESES_CLOSE shift  197
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  155
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202
            xx_call_parameters shift  198
             xx_call_parameter shift  204

State 197:
    (204) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 204

State 198:
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  200
             PARENTHESES_CLOSE shift  199

State 199:
    (205) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 205

State 200:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters COMMA * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  155
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202
             xx_call_parameter shift  203

State 201:
    (208) xx_common_expr ::= xx_mcall_expr *

                     {default} reduce 208

State 202:
    (209) xx_common_expr ::= xx_scall_expr *

                     {default} reduce 209

State 203:
    (214) xx_call_parameters ::= xx_call_parameters COMMA xx_call_parameter *

                     {default} reduce 214

State 204:
    (215) xx_call_parameters ::= xx_call_parameter *

                     {default} reduce 215

State 205:
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  200
             PARENTHESES_CLOSE shift  206

State 206:
    (212) xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 212

State 207:
    (213) xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 213

State 208:
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER
          xx_common_expr ::= IDENTIFIER DOUBLECOLON * CONSTANT
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  209
                      CONSTANT shift  214

State 209:
    (178) xx_common_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER *
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  210
                     {default} reduce 178

State 210:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
             PARENTHESES_CLOSE shift  213
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  155
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202
            xx_call_parameters shift  211
             xx_call_parameter shift  204

State 211:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  200
             PARENTHESES_CLOSE shift  212

State 212:
    (210) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 210

State 213:
    (211) xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 211

State 214:
    (179) xx_common_expr ::= IDENTIFIER DOUBLECOLON CONSTANT *

                     {default} reduce 179

State 215:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN * xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  216
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 216:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr * SBRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                SBRACKET_CLOSE shift  217

State 217:
    (180) xx_common_expr ::= IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE *

                     {default} reduce 180

State 218:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
             PARENTHESES_CLOSE shift  221
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  155
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202
            xx_call_parameters shift  219
             xx_call_parameter shift  204

State 219:
          xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  200
             PARENTHESES_CLOSE shift  220

State 220:
    (206) xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 206

State 221:
    (207) xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 207

State 222:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr
    (235) xx_eval_expr ::= xx_common_expr *

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 235

State 223:
          xx_for_statement ::= FOR * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  224

State 224:
          xx_for_statement ::= FOR IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         COMMA shift  362
                            IN shift  225

State 225:
          xx_for_statement ::= FOR IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                       REVERSE shift  357
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  226
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 226:
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                  BRACKET_OPEN shift  227

State 227:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  228
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 228:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  229
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 229:
    (112) xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 112

State 230:
          xx_let_statement ::= LET * xx_let_assignments DOTCOMMA
          xx_let_assignments ::= * xx_let_assignments COMMA xx_let_assignment
          xx_let_assignments ::= * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  235
            xx_let_assignments shift  231
             xx_let_assignment shift  280

State 231:
          xx_let_statement ::= LET xx_let_assignments * DOTCOMMA
          xx_let_assignments ::= xx_let_assignments * COMMA xx_let_assignment

                         COMMA shift  233
                      DOTCOMMA shift  232

State 232:
    (116) xx_let_statement ::= LET xx_let_assignments DOTCOMMA *

                     {default} reduce 116

State 233:
          xx_let_assignments ::= xx_let_assignments COMMA * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  235
             xx_let_assignment shift  234

State 234:
    (117) xx_let_assignments ::= xx_let_assignments COMMA xx_let_assignment *

                     {default} reduce 117

State 235:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER * DECR

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
                         ARROW shift  245
                 SBRACKET_OPEN shift  270
                   DOUBLECOLON shift  258
                          INCR shift  278
                          DECR shift  279
        xx_assignment_operator shift  242

State 236:
    (119) xx_assignment_operator ::= ASSIGN *

                     {default} reduce 119

State 237:
    (120) xx_assignment_operator ::= ADDASSIGN *

                     {default} reduce 120

State 238:
    (121) xx_assignment_operator ::= SUBASSIGN *

                     {default} reduce 121

State 239:
    (122) xx_assignment_operator ::= MULASSIGN *

                     {default} reduce 122

State 240:
    (123) xx_assignment_operator ::= DIVASSIGN *

                     {default} reduce 123

State 241:
    (124) xx_assignment_operator ::= CONCATASSIGN *

                     {default} reduce 124

State 242:
          xx_let_assignment ::= IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  243
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 243:
    (125) xx_let_assignment ::= IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 125

State 244:
    (164) xx_assign_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 164

State 245:
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  246

State 246:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
                 SBRACKET_OPEN shift  249
        xx_assignment_operator shift  247

State 247:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  248
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 248:
    (126) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 126

State 249:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                SBRACKET_CLOSE shift  250
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  257
                 xx_index_expr shift  253
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 250:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
        xx_assignment_operator shift  251

State 251:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  252
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 252:
    (127) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 127

State 253:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  254

State 254:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
        xx_assignment_operator shift  255

State 255:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  256
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 256:
    (128) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 128

State 257:
    (136) xx_index_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                SBRACKET_CLOSE reduce 136

State 258:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  259

State 259:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
                 SBRACKET_OPEN shift  262
        xx_assignment_operator shift  260

State 260:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  261
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 261:
    (129) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 129

State 262:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                SBRACKET_CLOSE shift  263
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  257
                 xx_index_expr shift  266
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 263:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
        xx_assignment_operator shift  264

State 264:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  265
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 265:
    (130) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 130

State 266:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  267

State 267:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
        xx_assignment_operator shift  268

State 268:
          xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  269
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 269:
    (131) xx_let_assignment ::= IDENTIFIER DOUBLECOLON IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 131

State 270:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                SBRACKET_CLOSE shift  271
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  257
                 xx_index_expr shift  274
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 271:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
        xx_assignment_operator shift  272

State 272:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  273
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 273:
    (132) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 132

State 274:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  275

State 275:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  236
                     ADDASSIGN shift  237
                     SUBASSIGN shift  238
                     MULASSIGN shift  239
                     DIVASSIGN shift  240
                  CONCATASSIGN shift  241
        xx_assignment_operator shift  276

State 276:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  244
                xx_assign_expr shift  277
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 277:
    (133) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 133

State 278:
    (134) xx_let_assignment ::= IDENTIFIER INCR *

                     {default} reduce 134

State 279:
    (135) xx_let_assignment ::= IDENTIFIER DECR *

                     {default} reduce 135

State 280:
    (118) xx_let_assignments ::= xx_let_assignment *

                     {default} reduce 118

State 281:
          xx_echo_statement ::= ECHO * xx_echo_expressions DOTCOMMA
          xx_echo_expressions ::= * xx_echo_expressions COMMA xx_echo_expression
          xx_echo_expressions ::= * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  286
           xx_echo_expressions shift  282
            xx_echo_expression shift  287
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 282:
          xx_echo_statement ::= ECHO xx_echo_expressions * DOTCOMMA
          xx_echo_expressions ::= xx_echo_expressions * COMMA xx_echo_expression

                         COMMA shift  284
                      DOTCOMMA shift  283

State 283:
    (137) xx_echo_statement ::= ECHO xx_echo_expressions DOTCOMMA *

                     {default} reduce 137

State 284:
          xx_echo_expressions ::= xx_echo_expressions COMMA * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  286
            xx_echo_expression shift  285
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 285:
    (138) xx_echo_expressions ::= xx_echo_expressions COMMA xx_echo_expression *

                     {default} reduce 138

State 286:
    (140) xx_echo_expression ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                     {default} reduce 140

State 287:
    (139) xx_echo_expressions ::= xx_echo_expression *

                     {default} reduce 139

State 288:
          xx_mcall_statement ::= xx_mcall_expr * DOTCOMMA

                      DOTCOMMA shift  289

State 289:
    (141) xx_mcall_statement ::= xx_mcall_expr DOTCOMMA *

                     {default} reduce 141

State 290:
          xx_scall_statement ::= xx_scall_expr * DOTCOMMA

                      DOTCOMMA shift  291

State 291:
    (142) xx_scall_statement ::= xx_scall_expr DOTCOMMA *

                     {default} reduce 142

State 292:
          xx_return_statement ::= RETURN * xx_common_expr DOTCOMMA
          xx_return_statement ::= RETURN * DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      DOTCOMMA shift  295
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  293
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 293:
          xx_return_statement ::= RETURN xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                      DOTCOMMA shift  294

State 294:
    (143) xx_return_statement ::= RETURN xx_common_expr DOTCOMMA *

                     {default} reduce 143

State 295:
    (144) xx_return_statement ::= RETURN DOTCOMMA *

                     {default} reduce 144

State 296:
          xx_unset_statement ::= UNSET * IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  297

State 297:
          xx_unset_statement ::= UNSET IDENTIFIER * ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA

                         ARROW shift  298
                 SBRACKET_OPEN shift  301

State 298:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  299

State 299:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  300

State 300:
    (145) xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA *

                     {default} reduce 145

State 301:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  302
                       INTEGER shift  305
                        STRING shift  308

State 302:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  303

State 303:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  304

State 304:
    (146) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 146

State 305:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  306

State 306:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  307

State 307:
    (147) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 147

State 308:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  309

State 309:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  310

State 310:
    (148) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 148

State 311:
          xx_throw_statement ::= THROW * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  312
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 312:
          xx_throw_statement ::= THROW xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                      DOTCOMMA shift  313

State 313:
    (149) xx_throw_statement ::= THROW xx_common_expr DOTCOMMA *

                     {default} reduce 149

State 314:
          xx_declare_statement ::= TYPE_INTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  315
           xx_declare_variable shift  322

State 315:
          xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  316

State 316:
    (150) xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 150

State 317:
          xx_declare_variable_list ::= xx_declare_variable_list COMMA * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
           xx_declare_variable shift  318

State 318:
    (160) xx_declare_variable_list ::= xx_declare_variable_list COMMA xx_declare_variable *

                     {default} reduce 160

State 319:
    (162) xx_declare_variable ::= IDENTIFIER *
          xx_declare_variable ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  320
                     {default} reduce 162

State 320:
          xx_declare_variable ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  321

State 321:
    (163) xx_declare_variable ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 163

State 322:
    (161) xx_declare_variable_list ::= xx_declare_variable *

                     {default} reduce 161

State 323:
          xx_declare_statement ::= TYPE_UINTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  324
           xx_declare_variable shift  322

State 324:
          xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  325

State 325:
    (151) xx_declare_statement ::= TYPE_UINTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 151

State 326:
          xx_declare_statement ::= TYPE_CHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  327
           xx_declare_variable shift  322

State 327:
          xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  328

State 328:
    (152) xx_declare_statement ::= TYPE_CHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 152

State 329:
          xx_declare_statement ::= TYPE_UCHAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  330
           xx_declare_variable shift  322

State 330:
          xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  331

State 331:
    (153) xx_declare_statement ::= TYPE_UCHAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 153

State 332:
          xx_declare_statement ::= TYPE_LONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  333
           xx_declare_variable shift  322

State 333:
          xx_declare_statement ::= TYPE_LONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  334

State 334:
    (154) xx_declare_statement ::= TYPE_LONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 154

State 335:
          xx_declare_statement ::= TYPE_ULONG * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  336
           xx_declare_variable shift  322

State 336:
          xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  337

State 337:
    (155) xx_declare_statement ::= TYPE_ULONG xx_declare_variable_list DOTCOMMA *

                     {default} reduce 155

State 338:
          xx_declare_statement ::= TYPE_DOUBLE * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  339
           xx_declare_variable shift  322

State 339:
          xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  340

State 340:
    (156) xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list DOTCOMMA *

                     {default} reduce 156

State 341:
          xx_declare_statement ::= TYPE_STRING * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  342
           xx_declare_variable shift  322

State 342:
          xx_declare_statement ::= TYPE_STRING xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  343

State 343:
    (157) xx_declare_statement ::= TYPE_STRING xx_declare_variable_list DOTCOMMA *

                     {default} reduce 157

State 344:
          xx_declare_statement ::= TYPE_BOOL * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  345
           xx_declare_variable shift  322

State 345:
          xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  346

State 346:
    (158) xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list DOTCOMMA *

                     {default} reduce 158

State 347:
          xx_declare_statement ::= TYPE_VAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  319
      xx_declare_variable_list shift  348
           xx_declare_variable shift  322

State 348:
          xx_declare_statement ::= TYPE_VAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  317
                      DOTCOMMA shift  349

State 349:
    (159) xx_declare_statement ::= TYPE_VAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 159

State 350:
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER * DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ARROW shift  353
                   DOUBLECOLON shift  351

State 351:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  352

State 352:
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= IDENTIFIER DOUBLECOLON IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  210

State 353:
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  354

State 354:
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  154

State 355:
    (236) xx_comment ::= COMMENT *

                     {default} reduce 236

State 356:
     (74) xx_statement_list ::= xx_statement *

                     {default} reduce 74

State 357:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  358
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 358:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                  BRACKET_OPEN shift  359

State 359:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  360
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 360:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  361
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 361:
    (113) xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 113

State 362:
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  363

State 363:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                            IN shift  364

State 364:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                       REVERSE shift  369
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  365
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 365:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                  BRACKET_OPEN shift  366

State 366:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  367
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 367:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  368
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 368:
    (114) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 114

State 369:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                xx_common_expr shift  370
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 370:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * MUL xx_common_expr
          xx_common_expr ::= xx_common_expr * DIV xx_common_expr
          xx_common_expr ::= xx_common_expr * MOD xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr * AND xx_common_expr
          xx_common_expr ::= xx_common_expr * OR xx_common_expr

                           AND shift  130
                            OR shift  132
                        EQUALS shift  92
                     IDENTICAL shift  106
                          LESS shift  110
                       GREATER shift  112
                     LESSEQUAL shift  114
                  GREATEREQUAL shift  116
                  NOTIDENTICAL shift  108
                     NOTEQUALS shift  104
                           ADD shift  118
                           SUB shift  120
                        CONCAT shift  128
                           MUL shift  122
                           DIV shift  124
                           MOD shift  126
                  BRACKET_OPEN shift  371

State 371:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  372
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 372:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  373
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 373:
    (115) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 115

State 374:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE * WHILE xx_eval_expr DOTCOMMA

                         WHILE shift  375

State 375:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE * xx_eval_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * PARENTHESES_OPEN xx_parameter_type PARENTHESES_CLOSE xx_common_expr
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER
          xx_common_expr ::= * IDENTIFIER DOUBLECOLON CONSTANT
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN xx_common_expr SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr MUL xx_common_expr
          xx_common_expr ::= * xx_common_expr DIV xx_common_expr
          xx_common_expr ::= * xx_common_expr MOD xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * xx_common_expr AND xx_common_expr
          xx_common_expr ::= * xx_common_expr OR xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * CONSTANT
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * CHAR
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_common_expr ::= * xx_scall_expr
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_eval_expr ::= * xx_common_expr

                         ISSET shift  93
                         FETCH shift  158
                        TYPEOF shift  162
                    INSTANCEOF shift  156
                           NEW shift  194
                           NOT shift  90
                    IDENTIFIER shift  151
                      CONSTANT shift  164
              PARENTHESES_OPEN shift  134
                 SBRACKET_OPEN shift  172
                       INTEGER shift  165
                        STRING shift  166
                          CHAR shift  167
                        DOUBLE shift  168
                          NULL shift  169
                          TRUE shift  170
                         FALSE shift  171
                  xx_eval_expr shift  376
                xx_common_expr shift  222
                 xx_mcall_expr shift  201
                 xx_scall_expr shift  202

State 376:
          xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr * DOTCOMMA

                      DOTCOMMA shift  377

State 377:
    (110) xx_do_while_statement ::= DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA *

                     {default} reduce 110

State 378:
    (108) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 108

State 379:
    (106) xx_loop_statement ::= LOOP BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 106

State 380:
          xx_case_clause ::= DEFAULT * COLON xx_statement_list

                         COLON shift  381

State 381:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_case_clause ::= DEFAULT COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  382
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 382:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
    (105) xx_case_clause ::= DEFAULT COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290
                     {default} reduce 105

State 383:
    (103) xx_case_clauses ::= xx_case_clause *

                     {default} reduce 103

State 384:
     (98) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 98

State 385:
     (94) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                          ELSE shift  386
                     {default} reduce 94

State 386:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  387

State 387:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  390
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  388
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 388:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  389
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 389:
     (99) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 99

State 390:
     (95) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 95

State 391:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  397
             PARENTHESES_CLOSE shift  392

State 392:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  393

State 393:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  394
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  395
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 394:
     (36) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 36

State 395:
          xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  396
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 396:
     (38) xx_class_method_definition ::= xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 38

State 397:
          xx_parameter_list ::= xx_parameter_list COMMA * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  410
                    IDENTIFIER shift  399
                  TYPE_INTEGER shift  135
                 TYPE_UINTEGER shift  136
                     TYPE_LONG shift  137
                    TYPE_ULONG shift  138
                     TYPE_CHAR shift  139
                    TYPE_UCHAR shift  140
                   TYPE_DOUBLE shift  141
                     TYPE_BOOL shift  142
                   TYPE_STRING shift  143
                    TYPE_ARRAY shift  144
                      TYPE_VAR shift  145
                  xx_parameter shift  398
             xx_parameter_type shift  402
             xx_parameter_cast shift  406

State 398:
     (53) xx_parameter_list ::= xx_parameter_list COMMA xx_parameter *

                     {default} reduce 53

State 399:
     (55) xx_parameter ::= IDENTIFIER *
          xx_parameter ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  400
                     {default} reduce 55

State 400:
          xx_parameter ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  401

State 401:
     (58) xx_parameter ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 58

State 402:
          xx_parameter ::= xx_parameter_type * IDENTIFIER
          xx_parameter ::= xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  403

State 403:
     (56) xx_parameter ::= xx_parameter_type IDENTIFIER *
          xx_parameter ::= xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  404
                     {default} reduce 56

State 404:
          xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  405

State 405:
     (59) xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 59

State 406:
          xx_parameter ::= xx_parameter_cast * IDENTIFIER
          xx_parameter ::= xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  407

State 407:
     (57) xx_parameter ::= xx_parameter_cast IDENTIFIER *
          xx_parameter ::= xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  408
                     {default} reduce 57

State 408:
          xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  409

State 409:
     (60) xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 60

State 410:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER

                    IDENTIFIER shift  411

State 411:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER

                       GREATER shift  412

State 412:
     (61) xx_parameter_cast ::= LESS IDENTIFIER GREATER *

                    IDENTIFIER reduce 61

State 413:
     (54) xx_parameter_list ::= xx_parameter *

                     {default} reduce 54

State 414:
     (43) xx_visibility_list ::= xx_visibility_list xx_visibility *

                     {default} reduce 43

State 415:
     (45) xx_visibility ::= PUBLIC *

                     {default} reduce 45

State 416:
     (46) xx_visibility ::= PROTECTED *

                     {default} reduce 46

State 417:
     (47) xx_visibility ::= PRIVATE *

                     {default} reduce 47

State 418:
     (48) xx_visibility ::= STATIC *

                     {default} reduce 48

State 419:
     (49) xx_visibility ::= SCOPED *

                     {default} reduce 49

State 420:
     (50) xx_visibility ::= INLINE *

                     {default} reduce 50

State 421:
     (51) xx_visibility ::= ABSTRACT *

                     {default} reduce 51

State 422:
     (52) xx_visibility ::= FINAL *

                     {default} reduce 52

State 423:
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  424
                 xx_visibility shift  439

State 424:
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                      FUNCTION shift  425
                        INLINE shift  420
                         FINAL shift  422
                 xx_visibility shift  414

State 425:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  426

State 426:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  427

State 427:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_UINTEGER
          xx_parameter_type ::= * TYPE_LONG
          xx_parameter_type ::= * TYPE_ULONG
          xx_parameter_type ::= * TYPE_CHAR
          xx_parameter_type ::= * TYPE_UCHAR
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  410
             PARENTHESES_CLOSE shift  428
                    IDENTIFIER shift  399
                  TYPE_INTEGER shift  135
                 TYPE_UINTEGER shift  136
                     TYPE_LONG shift  137
                    TYPE_ULONG shift  138
                     TYPE_CHAR shift  139
                    TYPE_UCHAR shift  140
                   TYPE_DOUBLE shift  141
                     TYPE_BOOL shift  142
                   TYPE_STRING shift  143
                    TYPE_ARRAY shift  144
                      TYPE_VAR shift  145
             xx_parameter_list shift  433
                  xx_parameter shift  413
             xx_parameter_type shift  402
             xx_parameter_cast shift  406

State 428:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  429

State 429:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  430
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  431
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 430:
     (39) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 39

State 431:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  432
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 432:
     (41) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 41

State 433:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  397
             PARENTHESES_CLOSE shift  434

State 434:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  435

State 435:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  436
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
             xx_statement_list shift  437
                  xx_statement shift  356
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 436:
     (40) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 40

State 437:
          xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_scall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_do_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_do_while_statement ::= * DO BRACKET_OPEN BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_do_while_statement ::= * DO BRACKET_OPEN xx_statement_list BRACKET_CLOSE WHILE xx_eval_expr DOTCOMMA
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_scall_statement ::= * xx_scall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_return_statement ::= * RETURN DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW xx_common_expr DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UINTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_CHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_UCHAR xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_LONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_ULONG xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_scall_expr ::= * IDENTIFIER DOUBLECOLON IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  350
                 BRACKET_CLOSE shift  438
                       COMMENT shift  355
                  TYPE_INTEGER shift  314
                 TYPE_UINTEGER shift  323
                     TYPE_LONG shift  332
                    TYPE_ULONG shift  335
                     TYPE_CHAR shift  326
                    TYPE_UCHAR shift  329
                   TYPE_DOUBLE shift  338
                     TYPE_BOOL shift  344
                   TYPE_STRING shift  341
                      TYPE_VAR shift  347
                         BREAK shift  50
                      CONTINUE shift  52
                            IF shift  54
                        SWITCH shift  63
                          LOOP shift  74
                         WHILE shift  78
                            DO shift  83
                           FOR shift  223
                           LET shift  230
                          ECHO shift  281
                        RETURN shift  292
                         UNSET shift  296
                         THROW shift  311
                    xx_comment shift  49
                  xx_statement shift  32
              xx_let_statement shift  33
               xx_if_statement shift  34
             xx_loop_statement shift  35
             xx_echo_statement shift  36
           xx_return_statement shift  37
            xx_mcall_statement shift  38
            xx_scall_statement shift  39
            xx_unset_statement shift  40
            xx_throw_statement shift  41
          xx_declare_statement shift  42
            xx_break_statement shift  43
         xx_continue_statement shift  44
            xx_while_statement shift  45
         xx_do_while_statement shift  46
           xx_switch_statement shift  47
              xx_for_statement shift  48
                 xx_mcall_expr shift  288
                 xx_scall_expr shift  290

State 438:
     (42) xx_class_method_definition ::= COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 42

State 439:
     (44) xx_visibility_list ::= xx_visibility *

                     {default} reduce 44

State 440:
     (18) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition *
          xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition * xx_class_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 18
                       COMMENT shift  444
                         CONST shift  450
                        INLINE shift  420
                         FINAL shift  422
   xx_class_methods_definition shift  441
            xx_visibility_list shift  23
     xx_class_const_definition shift  442
    xx_class_method_definition shift  443
                 xx_visibility shift  439

State 441:
     (21) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 21
                       COMMENT shift  423
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  23
    xx_class_method_definition shift  22
                 xx_visibility shift  439

State 442:
     (29) xx_class_consts_definition ::= xx_class_consts_definition xx_class_const_definition *

                     {default} reduce 29

State 443:
     (32) xx_class_methods_definition ::= xx_class_method_definition *

                     {default} reduce 32

State 444:
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                         CONST shift  445
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  424
                 xx_visibility shift  439

State 445:
          xx_class_const_definition ::= COMMENT CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  446

State 446:
          xx_class_const_definition ::= COMMENT CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  447

State 447:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  448

State 448:
          xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  449

State 449:
     (33) xx_class_const_definition ::= COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 33

State 450:
          xx_class_const_definition ::= CONST * CONSTANT ASSIGN xx_literal_expr DOTCOMMA

                      CONSTANT shift  451

State 451:
          xx_class_const_definition ::= CONST CONSTANT * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  452

State 452:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  453

State 453:
          xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  454

State 454:
     (34) xx_class_const_definition ::= CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 34

State 455:
     (23) xx_class_properties_definition ::= xx_class_properties_definition xx_class_property_definition *

                     {default} reduce 23

State 456:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= COMMENT * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                         CONST shift  445
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  457
                 xx_visibility shift  439

State 457:
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                    IDENTIFIER shift  458
                      ABSTRACT shift  421
                      FUNCTION shift  425
                        INLINE shift  420
                         FINAL shift  422
                 xx_visibility shift  414

State 458:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  459
                        ASSIGN shift  460

State 459:
     (25) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 25

State 460:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  461

State 461:
          xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  462

State 462:
     (27) xx_class_property_definition ::= COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 27

State 463:
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= xx_visibility_list * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= xx_visibility_list * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                    IDENTIFIER shift  464
                      ABSTRACT shift  421
                      FUNCTION shift  24
                        INLINE shift  420
                         FINAL shift  422
                 xx_visibility shift  414

State 464:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  465
                        ASSIGN shift  466

State 465:
     (26) xx_class_property_definition ::= xx_visibility_list IDENTIFIER DOTCOMMA *

                     {default} reduce 26

State 466:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  183
                        STRING shift  184
                        DOUBLE shift  185
                          NULL shift  186
                          TRUE shift  188
                         FALSE shift  187
               xx_literal_expr shift  467

State 467:
          xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  468

State 468:
     (28) xx_class_property_definition ::= xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 28

State 469:
     (30) xx_class_consts_definition ::= xx_class_const_definition *

                     {default} reduce 30

State 470:
     (15) xx_class_definition ::= xx_class_consts_definition *
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST CONSTANT ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 15
                       COMMENT shift  456
                         CONST shift  450
                        INLINE shift  420
                         FINAL shift  422
xx_class_properties_definition shift  471
   xx_class_methods_definition shift  474
  xx_class_property_definition shift  475
            xx_visibility_list shift  463
     xx_class_const_definition shift  442
    xx_class_method_definition shift  443
                 xx_visibility shift  439

State 471:
     (19) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition *
          xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition * xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 19
                       COMMENT shift  473
                        INLINE shift  420
                         FINAL shift  422
   xx_class_methods_definition shift  472
  xx_class_property_definition shift  455
            xx_visibility_list shift  463
    xx_class_method_definition shift  443
                 xx_visibility shift  439

State 472:
     (22) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 22
                       COMMENT shift  423
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  23
    xx_class_method_definition shift  22
                 xx_visibility shift  439

State 473:
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * xx_visibility_list IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  457
                 xx_visibility shift  439

State 474:
     (20) xx_class_definition ::= xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 20
                       COMMENT shift  423
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  23
    xx_class_method_definition shift  22
                 xx_visibility shift  439

State 475:
     (24) xx_class_properties_definition ::= xx_class_property_definition *

                     {default} reduce 24

State 476:
     (16) xx_class_definition ::= xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT xx_visibility_list FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_visibility_list ::= * xx_visibility_list xx_visibility
          xx_visibility_list ::= * xx_visibility
          xx_visibility ::= * PUBLIC
          xx_visibility ::= * PROTECTED
          xx_visibility ::= * PRIVATE
          xx_visibility ::= * STATIC
          xx_visibility ::= * SCOPED
          xx_visibility ::= * INLINE
          xx_visibility ::= * ABSTRACT
          xx_visibility ::= * FINAL

                        PUBLIC shift  415
                     PROTECTED shift  416
                        STATIC shift  418
                       PRIVATE shift  417
                        SCOPED shift  419
                      ABSTRACT shift  421
                 BRACKET_CLOSE reduce 16
                       COMMENT shift  423
                        INLINE shift  420
                         FINAL shift  422
            xx_visibility_list shift  23
    xx_class_method_definition shift  22
                 xx_visibility shift  439

State 477:
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                         CLASS shift  478

State 478:
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER xx_class_body
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER xx_class_body

                    IDENTIFIER shift  479

State 479:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * xx_class_body
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER xx_class_body
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE

                       EXTENDS shift  481
                  BRACKET_OPEN shift  16
                 xx_class_body shift  480

State 480:
     (10) xx_class_def ::= ABSTRACT CLASS IDENTIFIER xx_class_body *

                     {default} reduce 10

State 481:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER xx_class_body

                    IDENTIFIER shift  482

State 482:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * xx_class_body
          xx_class_body ::= * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_body ::= * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  16
                 xx_class_body shift  483

State 483:
     (11) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER xx_class_body *

                     {default} reduce 11

State 484:
      (3) xx_top_statement_list ::= xx_top_statement *

                     {default} reduce 3

